============= Kyber-I
Generate gs-lengths by GSA assumption...enumbs min_G_prec = 0.1
 Attack Estimation via simulation + probabilistic model (EnumBS in parallel)
beta_start= 50, gap = 1, J = 20, J_gap = 1, cost_model = 1, max_loop = 1, threads = 4, G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = 1, Find minimal time cost strategy, average_case, theo_pnjbkz_d4f = 2, theo_pump_d4f = 2.
  index:        2, ( 336,   1): ( 337,  20) --> (1003,   1), goal index:      331, cost = index:        3, ( 337,   1): ( 338,  20) --> (1003,   1), goal index:      230, cost = index:        4, ( 338,   1): ( 339,  20) --> (1003,   1), goal index:      232, cost = index:        5, ( 339,   1): ( 340,  20) --> (1003,   1), goal index:      234, cost = index:        6, ( 340,   1): ( 341,  20) --> (1003,   1), goal index:      234, cost = index:        7, ( 341,   1): ( 342,  20) --> (1003,   1), goal index:      235, cost = index:        8, ( 342,   1): ( 343,  20) --> (1003,   1), goal index:      237, cost = index:        9, ( 343,   1): ( 344,  20) --> (1003,   1), goal index:      238, cost = index:       10, ( 344,   1): ( 345,  20) --> (1003,   1), goal index:      238, cost = index:       11, ( 345,   1): ( 346,  20) --> (1003,   1), goal index:      240, cost = index:       12, ( 346,   1): ( 347,  20) --> (1003,   1), goal index:      241, cost = index:       13, ( 347,   1): ( 348,  20) --> (1003,   1), goal index:      241, cost = index:       14, ( 348,   1): ( 349,  20) --> (1003,   1), goal index:      243, cost = index:       15, ( 349,   1): ( 350,  20) --> (1003,   1), goal index:      244, cost = index:       16, ( 350,   1): ( 351,  20) --> (1003,   1), goal index:      244, cost = index:       17, ( 351,   1): ( 352,  20) --> (1003,   1), goal index:      246, cost = index:       18, ( 352,   1): ( 353,  20) --> (1003,   1), goal index:      248, cost = index:       19, ( 353,   1): ( 354,  20) --> (1003,   1), goal index:      249, cost = index:       20, ( 354,   1): ( 355,  20) --> (1003,   1), goal index:      249, cost = index:       21, ( 355,   1): ( 356,  20) --> (1003,   1), goal index:      251, cost = index:       22, ( 356,   1): ( 357,  20) --> (1003,   1), goal index:      252, cost = index:       23, ( 357,   1): ( 358,  20) --> (1003,   1), goal index:      252, cost = index:       24, ( 358,   1): ( 359,  20) --> (1003,   1), goal index:      254, cost = index:       25, ( 359,   1): ( 360,  20) --> (1003,   1), goal index:      255, cost = index:       26, ( 360,   1): ( 361,  20) --> (1003,   1), goal index:      256, cost = index:       27, ( 361,   1): ( 362,  20) --> (1003,   1), goal index:      257, cost = index:       28, ( 362,   1): ( 363,  20) --> (1003,   1), goal index:      259, cost = index:       29, ( 363,   1): ( 364,  20) --> (1003,   1), goal index:      261, cost = index:       30, ( 364,   1): ( 365,  20) --> (1003,   1), goal index:      260, cost = index:       31, ( 365,   1): ( 366,  20) --> (1003,   1), goal index:      263, cost = index:       32, ( 366,   1): ( 367,  20) --> (1003,   1), goal index:      265, cost = index:       33, ( 367,   1): ( 368,  20) --> (1003,   1), goal index:      266, cost = index:       34, ( 368,   1): ( 369,  20) --> (1003,   1), goal index:      267, cost = index:       35, ( 369,   1): ( 370,  20) --> (1003,   1), goal index:      268, cost = index:       36, ( 370,   1): ( 371,  20) --> (1003,   1), goal index:      270, cost = index:       37, ( 371,   1): ( 372,  20) --> (1003,   1), goal index:      270, cost = index:       38, ( 372,   1): ( 373,  20) --> (1003,   1), goal index:      272, cost = index:       39, ( 373,   1): ( 374,  20) --> (1003,   1), goal index:      274, cost = index:       40, ( 376,   1): ( 377,  20) --> (1003,   1), goal index:      274, cost = index:       41, ( 374,   1): ( 375,  20) --> (1003,   1), goal index:      287, cost = index:       42, ( 377,   1): ( 378,  20) --> (1003,   1), goal index:      282, cost = index:       43, ( 375,   1): ( 376,  20) --> (1003,   1), goal index:      286, cost = index:       44, ( 378,   1): ( 379,  20) --> (1003,   1), goal index:      279, cost = index:       45, ( 376,   1): ( 377,  20) --> (1003,   1), goal index:      281, cost = index:       46, ( 379,   1): ( 380,  20) --> (1003,   1), goal index:      283, cost = index:       47, ( 377,   1): ( 378,  20) --> (1003,   1), goal index:      284, cost = index:       48, ( 380,   1): ( 381,  20) --> (1003,   1), goal index:      287, cost = index:       49, ( 381,   3): ( 381,   2) --> (1003,   1), goal index:      288, cost = index:       50, ( 378,   1): ( 379,  20) --> (1003,   1), goal index:      291, cost = index:       51, ( 381,   1): ( 382,  20) --> (1003,   1), goal index:      295, cost = index:       52, ( 382,   3): ( 382,   2) --> (1003,   1), goal index:      299, cost = index:       53, ( 379,   1): ( 380,  20) --> (1003,   1), goal index:      301, cost = index:       54, ( 382,   1): ( 383,  20) --> (1003,   1), goal index:      304, cost = index:       55, ( 383,   3): ( 383,   2) --> (1003,   1), goal index:      314, cost = index:       56, ( 380,   1): ( 381,  20) --> (1003,   1), goal index:      310, cost = index:       57, ( 383,   1): ( 384,  20) --> (1003,   1), goal index:      319, cost = index:       58, ( 384,   3): ( 384,   2) --> (1003,   1), goal index:      325, cost = index:       59, ( 381,   1): ( 382,  20) --> (1003,   1), goal index:      320, cost = index:       60, ( 384,   2): ( 384,   1) --> (1003,   1), goal index:      334, cost = index:       61, ( 385,   4): ( 385,   3) --> (1003,   1), goal index:      340, cost = index:       62, ( 384,   1): ( 385,  20) --> (1003,   1), goal index:      340, cost = index:       63, ( 385,   3): ( 385,   2) --> (1003,   1), goal index:      360, cost = index:       64, ( 385,   2): ( 385,   1) --> (1003,   1), goal index:      365, cost = index:       65, ( 382,   1): ( 383,  20) --> (1003,   1), goal index:      405, cost = index:       66, ( 385,   2): ( 385,   1) --> (1003,   1), goal index:      398, cost = index:       67, ( 386,   4): ( 386,   3) --> (1003,   1), goal index:      391, cost = index:       68, ( 385,   1): ( 386,  20) --> (1003,   1), goal index:      379, cost = index:       69, ( 386,   3): ( 386,   2) --> (1003,   1), goal index:      386, cost = index:       70, ( 386,   2): ( 386,   1) --> (1003,   1), goal index:      388, cost = index:       71, ( 383,   1): ( 384,  20) --> (1003,   1), goal index:      426, cost = index:       72, ( 386,   2): ( 386,   1) --> (1003,   1), goal index:      420, cost = index:       73, ( 387,   4): ( 387,   3) --> (1003,   1), goal index:      394, cost = index:       74, ( 387,   2): ( 387,   1) --> (1003,   1), goal index:      387, cost = index:       75, ( 387,   3): ( 387,   2) --> (1003,   1), goal index:      428, cost = index:       76, ( 387,   2): ( 387,   1) --> (1003,   1), goal index:      429, cost = index:       77, ( 388,   4): ( 388,   3) --> (1003,   1), goal index:      465, cost = index:       78, ( 384,   1): ( 385,  20) --> (1003,   1), goal index:      463, cost = index:       79, ( 387,   2): ( 387,   1) --> (1003,   1), goal index:      452, cost = index:       80, ( 388,   4): ( 388,   3) --> (1003,   1), goal index:      403, cost = index:       81, ( 388,   2): ( 388,   1) --> (1003,   1), goal index:      395, cost = index:       82, ( 388,   3): ( 388,   2) --> (1003,   1), goal index:      432, cost = index:       83, ( 388,   3): ( 388,   2) --> (1003,   1), goal index:      430, cost = index:       84, ( 388,   2): ( 388,   1) --> (1003,   1), goal index:      450, cost = index:       85, ( 388,   2): ( 388,   1) --> (1003,   1), goal index:      427, cost = index:       86, ( 388,   2): ( 388,   1) --> (1003,   1), goal index:      434, cost = index:       87, ( 389,   3): ( 389,   2) --> (1003,   1), goal index:      467, cost = index:       88, ( 389,   3): ( 389,   2) --> (1003,   1), goal index:      420, cost = index:       89, ( 389,   3): ( 389,   2) --> (1003,   1), goal index:      454, cost = index:       90, ( 389,   3): ( 389,   2) --> (1003,   1), goal index:      458, cost = index:       91, ( 389,   2): ( 389,   1) --> (1003,   1), goal index:      464, cost = index:       92, ( 389,   2): ( 389,   1) --> (1003,   1), goal index:      496, cost = index:       93, ( 389,   2): ( 389,   1) --> (1003,   1), goal index:      496, cost = index:       94, ( 389,   2): ( 389,   1) --> (1003,   1), goal index:      499, cost = index:       95, ( 390,   3): ( 390,   2) --> (1003,   1), goal index:      497, cost = index:       96, ( 390,   3): ( 390,   2) --> (1003,   1), goal index:      452, cost = index:       97, ( 390,   3): ( 390,   2) --> (1003,   1), goal index:      482, cost = index:       98, ( 390,   2): ( 390,   1) --> (1003,   1), goal index:      459, cost = index:       99, ( 390,   2): ( 390,   1) --> (1003,   1), goal index:      490, cost = index:      100, ( 390,   3): ( 390,   2) --> (1003,   1), goal index:      520, cost = index:      101, ( 390,   2): ( 390,   1) --> (1003,   1), goal index:      502, cost = index:      102, ( 390,   2): ( 390,   1) --> (1003,   1), goal index:      532, cost = index:      103, ( 390,   2): ( 390,   1) --> (1003,   1), goal index:      532, cost = index:      104, ( 390,   2): ( 390,   1) --> (1003,   1), goal index:      558, cost = index:      105, ( 390,   2): ( 390,   1) --> (1003,   1), goal index:      538, cost = index:      106, ( 391,   4): ( 391,   3) --> (1003,   1), goal index:      517, cost = index:      107, ( 391,   3): ( 391,   2) --> (1003,   1), goal index:      427, cost = index:      108, ( 391,   3): ( 391,   2) --> (1003,   1), goal index:      450, cost = index:      109, ( 391,   3): ( 391,   2) --> (1003,   1), goal index:      477, cost = index:      110, ( 391,   2): ( 391,   1) --> (1003,   1), goal index:      474, cost = index:      111, ( 391,   2): ( 391,   1) --> (1003,   1), goal index:      501, cost = index:      112, ( 391,   2): ( 391,   1) --> (1003,   1), goal index:      524, cost = index:      113, ( 391,   3): ( 391,   2) --> (1003,   1), goal index:      528, cost = index:      114, ( 391,   2): ( 391,   1) --> (1003,   1), goal index:      525, cost = index:      115, ( 392,   4): ( 392,   3) --> (1003,   1), goal index:      549, cost = index:      116, ( 391,   2): ( 391,   1) --> (1003,   1), goal index:      502, cost = index:      117, ( 391,   2): ( 391,   1) --> (1003,   1), goal index:      488, cost = index:      118, ( 391,   2): ( 391,   1) --> (1003,   1), goal index:      507, cost = index:      119, ( 392,   4): ( 392,   3) --> (1003,   1), goal index:      491, cost = index:      120, ( 392,   3): ( 392,   2) --> (1003,   1), goal index:      455, cost = index:      121, ( 392,   3): ( 392,   2) --> (1003,   1), goal index:      457, cost = index:      122, ( 392,   3): ( 392,   2) --> (1003,   1), goal index:      458, cost = index:      123, ( 393,   4): ( 393,   3) --> (1003,   1), goal index:      480, cost = index:      124, ( 393,   3): ( 393,   2) --> (1003,   1), goal index:      444, cost = index:      125, ( 392,   2): ( 392,   1) --> (1003,   1), goal index:      444, cost = index:      126, ( 393,   4): ( 393,   3) --> (1003,   1), goal index:      461, cost = index:      127, ( 392,   2): ( 392,   1) --> (1003,   1), goal index:      438, cost = index:      128, ( 393,   4): ( 393,   3) --> (1003,   1), goal index:      455, cost = index:      129, ( 392,   2): ( 392,   1) --> (1003,   1), goal index:      457, cost = index:      130, ( 393,   4): ( 393,   3) --> (1003,   1), goal index:      470, cost = index:      131, ( 393,   3): ( 393,   2) --> (1003,   1), goal index:      477, cost = index:      132, ( 393,   3): ( 393,   2) --> (1003,   1), goal index:      496, cost = index:      133, ( 393,   3): ( 393,   2) --> (1003,   1), goal index:      515, cost = index:      134, ( 393,   3): ( 393,   2) --> (1003,   1), goal index:      533, cost = index:      135, ( 393,   3): ( 393,   2) --> (1003,   1), goal index:      517, cost = index:      136, ( 393,   3): ( 393,   2) --> (1003,   1), goal index:      534, cost = index:      137, ( 393,   2): ( 393,   1) --> (1003,   1), goal index:      534, cost = index:      138, ( 393,   2): ( 393,   1) --> (1003,   1), goal index:      534, cost = index:      139, ( 393,   2): ( 393,   1) --> (1003,   1), goal index:      540, cost = index:      140, ( 394,   4): ( 394,   3) --> (1003,   1), goal index:      538, cost = index:      141, ( 393,   2): ( 393,   1) --> (1003,   1), goal index:      508, cost = index:      142, ( 393,   2): ( 393,   1) --> (1003,   1), goal index:      511, cost = index:      143, ( 393,   2): ( 393,   1) --> (1003,   1), goal index:      512, cost = index:      144, ( 393,   2): ( 393,   1) --> (1003,   1), goal index:      501, cost = index:      145, ( 394,   4): ( 394,   3) --> (1003,   1), goal index:      502, cost = index:      146, ( 393,   2): ( 393,   1) --> (1003,   1), goal index:      469, cost = index:      147, ( 394,   4): ( 394,   3) --> (1003,   1), goal index:      475, cost = index:      148, ( 394,   3): ( 394,   2) --> (1003,   1), goal index:      484, cost = index:      149, ( 394,   3): ( 394,   2) --> (1003,   1), goal index:      484, cost = index:      150, ( 394,   3): ( 394,   2) --> (1003,   1), goal index:      498, cost = index:      151, ( 394,   3): ( 394,   2) --> (1003,   1), goal index:      512, cost = index:      152, ( 394,   3): ( 394,   2) --> (1003,   1), goal index:      526, cost = index:      153, ( 394,   3): ( 394,   2) --> (1003,   1), goal index:      527, cost = index:      154, ( 394,   2): ( 394,   1) --> (1003,   1), goal index:      540, cost = index:      155, ( 394,   2): ( 394,   1) --> (1003,   1), goal index:      553, cost = index:      156, ( 395,   4): ( 395,   3) --> (1003,   1), goal index:      564, cost = index:      157, ( 394,   2): ( 394,   1) --> (1003,   1), goal index:      499, cost = index:      158, ( 394,   2): ( 394,   1) --> (1003,   1), goal index:      503, cost = index:      159, ( 394,   2): ( 394,   1) --> (1003,   1), goal index:      507, cost = index:      160, ( 394,   2): ( 394,   1) --> (1003,   1), goal index:      509, cost = index:      161, ( 394,   2): ( 394,   1) --> (1003,   1), goal index:      498, cost = index:      162, ( 394,   2): ( 394,   1) --> (1003,   1), goal index:      507, cost = index:      163, ( 395,   4): ( 395,   3) --> (1003,   1), goal index:      511, cost = index:      164, ( 394,   2): ( 394,   1) --> (1003,   1), goal index:      467, cost = index:      165, ( 394,   2): ( 394,   1) --> (1003,   1), goal index:      470, cost = index:      166, ( 395,   3): ( 395,   2) --> (1003,   1), goal index:      473, cost = index:      167, ( 395,   3): ( 395,   2) --> (1003,   1), goal index:      478, cost = index:      168, ( 395,   3): ( 395,   2) --> (1003,   1), goal index:      489, cost = index:      169, ( 395,   3): ( 395,   2) --> (1003,   1), goal index:      490, cost = index:      170, ( 395,   3): ( 395,   2) --> (1003,   1), goal index:      495, cost = index:      171, ( 395,   2): ( 395,   1) --> (1003,   1), goal index:      504, cost = index:      172, ( 396,   4): ( 396,   3) --> (1003,   1), goal index:      513, cost = index:      173, ( 395,   2): ( 395,   1) --> (1003,   1), goal index:      479, cost = index:      174, ( 396,   4): ( 396,   3) --> (1003,   1), goal index:      483, cost = index:      175, ( 395,   2): ( 395,   1) --> (1003,   1), goal index:      487, cost = index:      176, ( 395,   2): ( 395,   1) --> (1003,   1), goal index:      490, cost = index:      177, ( 396,   4): ( 396,   3) --> (1003,   1), goal index:      493, cost = index:      178, ( 395,   2): ( 395,   1) --> (1003,   1), goal index:      496, cost = index:      179, ( 396,   4): ( 396,   3) --> (1003,   1), goal index:      498, cost = index:      180, ( 395,   2): ( 395,   1) --> (1003,   1), goal index:      497, cost = index:      181, ( 396,   4): ( 396,   3) --> (1003,   1), goal index:      500, cost = index:      182, ( 395,   2): ( 395,   1) --> (1003,   1), goal index:      501, cost = index:      183, ( 396,   4): ( 396,   3) --> (1003,   1), goal index:      501, cost = index:      184, ( 396,   3): ( 396,   2) --> (1003,   1), goal index:      501, cost = index:      185, ( 396,   3): ( 396,   2) --> (1003,   1), goal index:      508, cost = index:      186, ( 396,   3): ( 396,   2) --> (1003,   1), goal index:      514, cost = index:      187, ( 396,   3): ( 396,   2) --> (1003,   1), goal index:      513, cost = index:      188, ( 396,   2): ( 396,   1) --> (1003,   1), goal index:      504, cost = index:      189, ( 397,   4): ( 397,   3) --> (1003,   1), goal index:      504, cost = index:      190, ( 397,   4): ( 397,   3) --> (1003,   1), goal index:      509, cost = index:      191, ( 397,   4): ( 397,   3) --> (1003,   1), goal index:      500, cost = index:      192, ( 397,   4): ( 397,   3) --> (1003,   1), goal index:      501, cost = index:      193, ( 396,   2): ( 396,   1) --> (1003,   1), goal index:      503, cost = index:      194, ( 397,   4): ( 397,   3) --> (1003,   1), goal index:      504, cost = index:      195, ( 396,   2): ( 396,   1) --> (1003,   1), goal index:      504, cost = index:      196, ( 397,   4): ( 397,   3) --> (1003,   1), goal index:      504, cost = index:      197, ( 396,   2): ( 396,   1) --> (1003,   1), goal index:      507, cost = index:      198, ( 397,   4): ( 397,   3) --> (1003,   1), goal index:      507, cost = index:      199, ( 397,   3): ( 397,   2) --> (1003,   1), goal index:      510, cost = index:      200, ( 397,   3): ( 397,   2) --> (1003,   1), goal index:      512, cost = index:      201, ( 397,   3): ( 397,   2) --> (1003,   1), goal index:      514, cost = index:      202, ( 397,   3): ( 397,   2) --> (1003,   1), goal index:      516, cost = index:      203, ( 397,   3): ( 397,   2) --> (1003,   1), goal index:      517, cost = index:      204, ( 397,   3): ( 397,   2) --> (1003,   1), goal index:      518, cost = index:      205, ( 397,   3): ( 397,   2) --> (1003,   1), goal index:      518, cost = index:      206, ( 397,   3): ( 397,   2) --> (1003,   1), goal index:      518, cost = index:      207, ( 398,   4): ( 398,   3) --> (1003,   1), goal index:      518, cost = index:      208, ( 398,   4): ( 398,   3) --> (1003,   1), goal index:      518, cost = index:      209, ( 398,   4): ( 398,   3) --> (1003,   1), goal index:      518, cost = index:      210, ( 398,   4): ( 398,   3) --> (1003,   1), goal index:      518, cost = index:      211, ( 398,   4): ( 398,   3) --> (1003,   1), goal index:      518, cost = index:      212, ( 398,   4): ( 398,   3) --> (1003,   1), goal index:      518, cost = index:      213, ( 398,   4): ( 398,   3) --> (1003,   1), goal index:      518, cost = index:      214, ( 398,   4): ( 398,   3) --> (1003,   1), goal index:      518, cost = index:      215, ( 398,   3): ( 398,   2) --> (1003,   1), goal index:      518, cost = index:      216, ( 398,   3): ( 398,   2) --> (1003,   1), goal index:      518, cost = index:      217, ( 398,   3): ( 398,   2) --> (1003,   1), goal index:      518, cost = index:      218, ( 398,   3): ( 398,   2) --> (1003,   1), goal index:      518, cost = index:      219, ( 398,   3): ( 398,   2) --> (1003,   1), goal index:      518, cost = index:      220, ( 398,   3): ( 398,   2) --> (1003,   1), goal index:      518, cost = index:      221, ( 399,   4): ( 399,   3) --> (1003,   1), goal index:      518, cost = index:      222, ( 399,   4): ( 399,   3) --> (1003,   1), goal index:      518, cost = index:      223, ( 399,   4): ( 399,   3) --> (1003,   1), goal index:      518, cost = index:      224, ( 399,   4): ( 399,   3) --> (1003,   1), goal index:      518, cost = index:      225, ( 399,   4): ( 399,   3) --> (1003,   1), goal index:      518, cost = index:      226, ( 399,   3): ( 399,   2) --> (1003,   1), goal index:      518, cost = index:      227, ( 399,   4): ( 399,   3) --> (1003,   1), goal index:      518, cost = index:      228, ( 399,   4): ( 399,   3) --> (1003,   1), goal index:      518, cost = index:      229, ( 399,   4): ( 399,   3) --> (1003,   1), goal index:      518, cost = index:      230, ( 399,   3): ( 399,   2) --> (1003,   1), goal index:      518, cost = index:      231, ( 399,   3): ( 399,   2) --> (1003,   1), goal index:      518, cost = index:      232, ( 399,   3): ( 399,   2) --> (1003,   1), goal index:      518, cost = index:      233, ( 399,   3): ( 399,   2) --> (1003,   1), goal index:      518, cost = index:      234, ( 399,   3): ( 399,   2) --> (1003,   1), goal index:      518, cost = index:      235, ( 399,   3): ( 399,   2) --> (1003,   1), goal index:      518, cost = index:      236, ( 400,   4): ( 400,   3) --> (1003,   1), goal index:      518, cost = index:      237, ( 400,   4): ( 400,   3) --> (1003,   1), goal index:      518, cost = index:      238, ( 400,   4): ( 400,   3) --> (1003,   1), goal index:      518, cost = index:      239, ( 400,   4): ( 400,   3) --> (1003,   1), goal index:      518, cost = index:      240, ( 400,   4): ( 400,   3) --> (1003,   1), goal index:      518, cost = index:      241, ( 400,   4): ( 400,   3) --> (1003,   1), goal index:      518, cost = index:      242, ( 400,   4): ( 400,   3) --> (1003,   1), goal index:      518, cost = index:      243, ( 400,   4): ( 400,   3) --> (1003,   1), goal index:      518, cost = index:      244, ( 400,   4): ( 400,   3) --> (1003,   1), goal index:      518, cost = index:      245, ( 400,   4): ( 400,   3) --> (1003,   1), goal index:      518, cost = index:      246, ( 400,   3): ( 400,   2) --> (1003,   1), goal index:      518, cost = index:      247, ( 400,   3): ( 400,   2) --> (1003,   1), goal index:      518, cost = index:      248, ( 400,   3): ( 400,   2) --> (1003,   1), goal index:      518, cost = index:      249, ( 400,   3): ( 400,   2) --> (1003,   1), goal index:      518, cost = index:      250, ( 400,   3): ( 400,   2) --> (1003,   1), goal index:      518, cost = index:      251, ( 400,   3): ( 400,   2) --> (1003,   1), goal index:      518, cost = index:      252, ( 400,   3): ( 400,   2) --> (1003,   1), goal index:      518, cost = index:      253, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      254, ( 400,   3): ( 400,   2) --> (1003,   1), goal index:      518, cost = index:      255, ( 400,   3): ( 400,   2) --> (1003,   1), goal index:      518, cost = index:      256, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      257, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      258, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      259, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      260, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      261, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      262, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      263, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      264, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      265, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      266, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      267, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      268, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      269, ( 401,   4): ( 401,   3) --> (1003,   1), goal index:      518, cost = index:      270, ( 401,   3): ( 401,   2) --> (1003,   1), goal index:      518, cost = index:      271, ( 401,   3): ( 401,   2) --> (1003,   1), goal index:      518, cost = index:      272, ( 401,   3): ( 401,   2) --> (1003,   1), goal index:      518, cost = index:      273, ( 401,   3): ( 401,   2) --> (1003,   1), goal index:      518, cost = index:      274, ( 401,   3): ( 401,   2) --> (1003,   1), goal index:      518, cost = index:      275, ( 401,   3): ( 401,   2) --> (1003,   1), goal index:      518, cost = index:      276, ( 401,   3): ( 401,   2) --> (1003,   1), goal index:      518, cost = index:      277, ( 401,   3): ( 401,   2) --> (1003,   1), goal index:      518, cost = index:      278, ( 401,   3): ( 401,   2) --> (1003,   1), goal index:      518, cost = index:      279, ( 401,   3): ( 401,   2) --> (1003,   1), goal index:      518, cost = index:      280, ( 401,   3): ( 401,   2) --> (1003,   1), goal index:      518, cost = index:      281, ( 402,   4): ( 402,   3) --> (1003,   1), goal index:      518, cost = index:      282, ( 401,   3): ( 401,   2) --> (1003,   1), goal index:      518, cost = index:      283, ( 402,   4): ( 402,   3) --> (1003,   1), goal index:      518, cost = index:      284, ( 402,   4): ( 402,   3) --> (1003,   1), goal index:      518, cost = index:      285, ( 402,   4): ( 402,   3) --> (1003,   1), goal index:      518, cost = index:      286, ( 402,   4): ( 402,   3) --> (1003,   1), goal index:      518, cost = index:      287, ( 402,   4): ( 402,   3) --> (1003,   1), goal index:      518, cost = index:      288, ( 402,   4): ( 402,   3) --> (1003,   1), goal index:      518, cost = index:      289, ( 402,   3): ( 402,   2) --> (1003,   1), goal index:      518, cost = index:      290, ( 402,   3): ( 402,   2) --> (1003,   1), goal index:      518, cost = index:      291, ( 403,   4): ( 403,   3) --> (1003,   1), goal index:      518, cost = index:      292, ( 403,   4): ( 403,   3) --> (1003,   1), goal index:      518, cost = index:      293, ( 403,   4): ( 403,   3) --> (1003,   1), goal index:      518, cost = index:      294, ( 403,   4): ( 403,   3) --> (1003,   1), goal index:      518, cost = index:      295, ( 403,   3): ( 403,   2) --> (1003,   1), goal index:      518, cost = index:      296, ( 403,   3): ( 403,   2) --> (1003,   1), goal index:      518, cost = index:      297, ( 403,   3): ( 403,   2) --> (1003,   1), goal index:      518, cost = index:      298, ( 403,   3): ( 403,   2) --> (1003,   1), goal index:      518, cost = index:      299, ( 404,   4): ( 404,   3) --> (1003,   1), goal index:      518, cost = index:      300, ( 404,   4): ( 404,   3) --> (1003,   1), goal index:      518, cost = index:      301, ( 405,   4): ( 405,   3) --> (1003,   1), goal index:      518, cost = index:      302, ( 405,   4): ( 405,   3) --> (1003,   1), goal index:      518, cost = index:      303, ( 405,   4): ( 405,   3) --> (1003,   1), goal index:      518, cost = index:      304, ( 405,   4): ( 405,   3) --> (1003,   1), goal index:      518, cost = index:      305, ( 405,   4): ( 405,   3) --> (1003,   1), goal index:      518, cost = index:      306, ( 405,   4): ( 405,   3) --> (1003,   1), goal index:      518, cost = index:      307, ( 406,   4): ( 406,   3) --> (1003,   1), goal index:      518, cost = index:      308, ( 406,   4): ( 406,   3) --> (1003,   1), goal index:      518, cost = index:      309, ( 406,   4): ( 406,   3) --> (1003,   1), goal index:      518, cost = index:      310, ( 406,   4): ( 406,   3) --> (1003,   1), goal index:      518, cost = index:      311, ( 407,   4): ( 407,   3) --> (1003,   1), goal index:      518, cost = index:      312, ( 408,   4): ( 408,   3) --> (1003,   1), goal index:      518, cost = index:      313, ( 408,   4): ( 408,   3) --> (1003,   1), goal index:      518, cost = index:      314, ( 409,   4): ( 409,   3) --> (1003,   1), goal index:      518, cost = index:      315, ( 409,   4): ( 409,   3) --> (1003,   1), goal index:      518, cost = index:      316, ( 409,   4): ( 409,   3) --> (1003,   1), goal index:      518, cost = index:      317, ( 409,   4): ( 409,   3) --> (1003,   1), goal index:      518, cost = index:      318, ( 409,   4): ( 409,   3) --> (1003,   1), goal index:      518, cost = index:      319, ( 409,   4): ( 409,   3) --> (1003,   1), goal index:      518, cost = index:      320, ( 409,   4): ( 409,   3) --> (1003,   1), goal index:      518, cost = index:      321, ( 410,   4): ( 410,   3) --> (1003,   1), goal index:      518, cost = index:      322, ( 410,   4): ( 410,   3) --> (1003,   1), goal index:      518, cost = index:      323, ( 410,   4): ( 410,   3) --> (1003,   1), goal index:      518, cost = index:      324, ( 411,   4): ( 411,   3) --> (1003,   1), goal index:      518, cost = index:      325, ( 412,   4): ( 412,   3) --> (1003,   1), goal index:      518, cost = index:      326, ( 412,   4): ( 412,   3) --> (1003,   1), goal index:      518, cost = index:      327, ( 412,   4): ( 412,   3) --> (1003,   1), goal index:      518, cost = index:      328, ( 413,   4): ( 413,   3) --> (1003,   1), goal index:      518, cost = index:      329, ( 415,   4): ( 415,   3) --> (1003,   1), goal index:      518, cost = index:      330, ( 416,   4): ( 416,   3) --> (1003,   1), goal index:      518, cost = index:      331, ( 417,   4): ( 417,   3) --> (1003,   1), goal index:      518, cost = index:      332, ( 418,   4): ( 418,   3) --> (1003,   1), goal index:      518, cost = index:      333, ( 419,   4): ( 419,   3) --> (1003,   1), goal index:      518, cost = index:      334, ( 420,   4): ( 420,   3) --> (1003,   1), goal index:      518, cost = index:      335, ( 421,  20): ( 421,  19) --> (1003,   1), goal index:      515, cost = index:      336, ( 421,  19): ( 421,  18) --> (1003,   1), goal index:      492, cost = index:      337, ( 421,  18): ( 421,  17) --> (1003,   1), goal index:      492, cost = index:      338, ( 421,  17): ( 421,  16) --> (1003,   1), goal index:      492, cost = index:      339, ( 422,  11): ( 422,  10) --> (1003,   1), goal index:      491, cost =
Find the optimal Strategy through EumBS!!
bs = (slope = -1.673667e-02, G_BKZ = 1.350671e+02 gate, B_BKZ = 8.735152e+01 bit cum-pr = 8.465638e-02, pump-{567,437,34}, G_dsvp = 1.365646e+02 gate, B_dsvp = 9.529899e+01 bit, G = 1.370020e+02 gate, B = 9.529899e+01 bit, min_GB.first = 1.370020e+02 gate)
S(beta,jump,tours):{(  50,   1,   1),(  51,   1,   1),(  52,   1,   1),(  53,   1,   1),(  54,   1,   1),(  55,   1,   1),(  56,   1,   1),(  57,   1,   1),(  58,   1,   1),(  59,   1,   1),(  60,   1,   1),(  61,   1,   1),(  62,   1,   1),(  63,   1,   1),(  64,   1,   1),(  65,   1,   1),(  66,   1,   1),(  67,   1,   1),(  68,   1,   1),(  69,   1,   1),(  70,   1,   1),(  71,   1,   1),(  72,   1,   1),(  73,   1,   1),(  74,   1,   1),(  75,   1,   1),(  76,   1,   1),(  77,   1,   1),(  78,   1,   1),(  79,   1,   1),(  80,   1,   1),(  81,   1,   1),(  82,   1,   1),(  83,   1,   1),(  84,   1,   1),(  85,   1,   1),(  86,   1,   1),(  87,   1,   1),(  88,   1,   1),(  89,   1,   1),(  90,   1,   1),(  91,   1,   1),(  92,   1,   1),(  93,   1,   1),(  94,   1,   1),(  95,   1,   1),(  96,   1,   1),(  97,   1,   1),(  98,   1,   1),(  99,   1,   1),( 100,   1,   1),( 101,   1,   1),( 102,   1,   1),( 103,   1,   1),( 104,   1,   1),( 105,   1,   1),( 106,   1,   1),( 107,   1,   1),( 108,   1,   1),( 109,   1,   1),( 110,   1,   1),( 111,   1,   1),( 112,   1,   1),( 113,   1,   1),( 114,   1,   1),( 115,   1,   1),( 116,   1,   1),( 117,   1,   1),( 118,   1,   1),( 119,   1,   1),( 120,   1,   1),( 121,   1,   1),( 122,   1,   1),( 123,   1,   1),( 124,   1,   1),( 125,   1,   1),( 126,   1,   1),( 127,   1,   1),( 128,   1,   1),( 129,   1,   1),( 130,   1,   1),( 131,   1,   1),( 132,   1,   1),( 133,   1,   1),( 134,   1,   1),( 135,   1,   1),( 136,   1,   1),( 137,   1,   1),( 138,   1,   1),( 139,   1,   1),( 140,   1,   1),( 141,   1,   1),( 142,   1,   1),( 143,   1,   1),( 144,   1,   1),( 145,   1,   1),( 146,   1,   1),( 147,   1,   1),( 148,   1,   1),( 149,   1,   1),( 150,   1,   1),( 151,   1,   1),( 152,   1,   1),( 153,   1,   1),( 154,   1,   1),( 155,   1,   1),( 156,   1,   1),( 157,   1,   1),( 158,   1,   1),( 159,   1,   1),( 160,   1,   1),( 161,   1,   1),( 162,   1,   1),( 163,   1,   1),( 164,   1,   1),( 165,   1,   1),( 166,   1,   1),( 167,   1,   1),( 168,   1,   1),( 169,   1,   1),( 170,   1,   1),( 171,   1,   1),( 172,   1,   1),( 173,   1,   1),( 174,   1,   1),( 175,   1,   1),( 176,   1,   1),( 177,   1,   1),( 178,   1,   1),( 179,   1,   1),( 180,   1,   1),( 181,   1,   1),( 182,   1,   1),( 183,   1,   1),( 184,   1,   1),( 185,   1,   1),( 186,   1,   1),( 187,   1,   1),( 188,   1,   1),( 189,   1,   1),( 190,   1,   1),( 191,   1,   1),( 192,   1,   1),( 193,   1,   1),( 194,   1,   1),( 195,   1,   1),( 196,   1,   1),( 197,   1,   1),( 198,   1,   1),( 199,   1,   1),( 200,   1,   1),( 201,   1,   1),( 202,   1,   1),( 203,   1,   1),( 204,   1,   1),( 205,   1,   1),( 206,   1,   1),( 207,   1,   1),( 208,   1,   1),( 209,   1,   1),( 210,   1,   1),( 211,   1,   1),( 212,   1,   1),( 213,   1,   1),( 214,   1,   1),( 215,   1,   1),( 216,   1,   1),( 217,   1,   1),( 218,   1,   1),( 219,   1,   1),( 220,   1,   1),( 221,   1,   1),( 222,   1,   1),( 223,   1,   1),( 224,   1,   1),( 225,   1,   1),( 226,   1,   1),( 227,   1,   1),( 228,   1,   1),( 229,   1,   1),( 230,   1,   1),( 231,   1,   1),( 232,   1,   1),( 233,   1,   1),( 234,   1,   1),( 235,   1,   1),( 236,   1,   1),( 237,   1,   1),( 238,   1,   1),( 239,   1,   1),( 240,   1,   1),( 241,   1,   1),( 242,   1,   1),( 243,   1,   1),( 244,   1,   1),( 245,   1,   1),( 246,   1,   1),( 247,   1,   1),( 248,   1,   1),( 249,   1,   1),( 250,   1,   1),( 251,   1,   1),( 252,   1,   1),( 253,   1,   1),( 254,   1,   1),( 255,   1,   1),( 256,   1,   1),( 257,   1,   1),( 258,   1,   1),( 259,   1,   1),( 260,   1,   1),( 261,   1,   1),( 262,   1,   1),( 263,   1,   1),( 264,   1,   1),( 265,   1,   1),( 266,   1,   1),( 267,   1,   1),( 268,   1,   1),( 269,   1,   1),( 270,   1,   1),( 271,   1,   1),( 272,   1,   1),( 273,   1,   1),( 274,   1,   1),( 275,   1,   1),( 276,   1,   1),( 277,   1,   1),( 278,   1,   1),( 279,   1,   1),( 280,   1,   1),( 281,   1,   1),( 282,   1,   1),( 283,   1,   1),( 284,   1,   1),( 285,   1,   1),( 286,   1,   1),( 287,   1,   1),( 288,   1,   1),( 289,   1,   1),( 290,   1,   1),( 291,   1,   1),( 292,   1,   1),( 293,   1,   1),( 294,   1,   1),( 295,   1,   1),( 296,   1,   1),( 297,   1,   1),( 298,   1,   1),( 299,   1,   1),( 300,   1,   1),( 301,   1,   1),( 302,   1,   1),( 303,   1,   1),( 304,   1,   1),( 305,   1,   1),( 306,   1,   1),( 307,   1,   1),( 308,   1,   1),( 309,   1,   1),( 310,   1,   1),( 311,   1,   1),( 312,   1,   1),( 313,   1,   1),( 314,   1,   1),( 315,   1,   1),( 316,   1,   1),( 317,   1,   1),( 318,   1,   1),( 319,   1,   1),( 320,   1,   1),( 321,   1,   1),( 322,   1,   1),( 323,   1,   1),( 324,   1,   1),( 325,   1,   1),( 326,   1,   1),( 327,   1,   1),( 328,   1,   1),( 329,   1,   1),( 330,   1,   1),( 331,   1,   1),( 332,   1,   1),( 333,   1,   1),( 334,   1,   1),( 335,   1,   1),( 336,   1,   1),( 337,   1,   1),( 338,   1,   1),( 339,   1,   1),( 340,   1,   1),( 341,   1,   1),( 342,   1,   1),( 343,   1,   1),( 344,   1,   1),( 345,   1,   1),( 346,   1,   1),( 347,   1,   1),( 348,   1,   1),( 349,   1,   1),( 350,   1,   1),( 351,   1,   1),( 352,   1,   1),( 353,   1,   1),( 354,   1,   1),( 355,   1,   1),( 356,   1,   1),( 357,   1,   1),( 358,   1,   1),( 359,   1,   1),( 360,   1,   1),( 361,   1,   1),( 362,   1,   1),( 363,   1,   1),( 364,   1,   1),( 365,   1,   1),( 366,   1,   1),( 367,   1,   1),( 368,   1,   1),( 369,   1,   1),( 370,   1,   1),( 371,   1,   1),( 378,   1,   1),( 383,   3,   1),( 388,   4,   1),( 391,   4,   1),( 396,   4,   1),( 399,   3,   1)}
Min Cost = 137.00 log2(gate), Memory Cost = 95.30 log(bit)
EnumBS cost:7.6e+02s.
============= Kyber-II
Generate gs-lengths by GSA assumption...enumbs min_G_prec = 0.1
 Attack Estimation via simulation + probabilistic model (EnumBS in parallel)
beta_start= 50, gap = 1, J = 20, J_gap = 1, cost_model = 1, max_loop = 1, threads = 4, G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = 1, Find minimal time cost strategy, average_case, theo_pnjbkz_d4f = 2, theo_pump_d4f = 2.
  index:        2, ( 549,   1): ( 550,  20) --> (1466,   1), goal index:      466, cost = index:        3, ( 550,   1): ( 551,  20) --> (1466,   1), goal index:      330, cost = index:        4, ( 551,   1): ( 552,  20) --> (1466,   1), goal index:      331, cost = index:        5, ( 552,   1): ( 553,  20) --> (1466,   1), goal index:      331, cost = index:        6, ( 553,   1): ( 554,  20) --> (1466,   1), goal index:      332, cost = index:        7, ( 554,   1): ( 555,  20) --> (1466,   1), goal index:      332, cost = index:        8, ( 555,   1): ( 556,  20) --> (1466,   1), goal index:      333, cost = index:        9, ( 556,   1): ( 557,  20) --> (1466,   1), goal index:      333, cost = index:       10, ( 557,   1): ( 558,  20) --> (1466,   1), goal index:      334, cost = index:       11, ( 558,   1): ( 559,  20) --> (1466,   1), goal index:      334, cost = index:       12, ( 559,   1): ( 560,  20) --> (1466,   1), goal index:      335, cost = index:       13, ( 560,   1): ( 561,  20) --> (1466,   1), goal index:      335, cost = index:       14, ( 561,   1): ( 562,  20) --> (1466,   1), goal index:      336, cost = index:       15, ( 562,   1): ( 563,  20) --> (1466,   1), goal index:      337, cost = index:       16, ( 563,   1): ( 564,  20) --> (1466,   1), goal index:      338, cost = index:       17, ( 564,   1): ( 565,  20) --> (1466,   1), goal index:      338, cost = index:       18, ( 565,   1): ( 566,  20) --> (1466,   1), goal index:      340, cost = index:       19, ( 566,   1): ( 567,  20) --> (1466,   1), goal index:      339, cost = index:       20, ( 567,   1): ( 568,  20) --> (1466,   1), goal index:      340, cost = index:       21, ( 568,   1): ( 569,  20) --> (1466,   1), goal index:      340, cost = index:       22, ( 569,   1): ( 570,  20) --> (1466,   1), goal index:      341, cost = index:       23, ( 570,   1): ( 571,  20) --> (1466,   1), goal index:      342, cost = index:       24, ( 571,   1): ( 572,  20) --> (1466,   1), goal index:      343, cost = index:       25, ( 572,   1): ( 573,  20) --> (1466,   1), goal index:      344, cost = index:       26, ( 573,   1): ( 574,  20) --> (1466,   1), goal index:      345, cost = index:       27, ( 574,   1): ( 575,  20) --> (1466,   1), goal index:      344, cost = index:       28, ( 575,   1): ( 576,  20) --> (1466,   1), goal index:      345, cost = index:       29, ( 576,   1): ( 577,  20) --> (1466,   1), goal index:      346, cost = index:       30, ( 577,   1): ( 578,  20) --> (1466,   1), goal index:      346, cost = index:       31, ( 578,   1): ( 579,  20) --> (1466,   1), goal index:      347, cost = index:       32, ( 579,   1): ( 580,  20) --> (1466,   1), goal index:      349, cost = index:       33, ( 580,   1): ( 581,  20) --> (1466,   1), goal index:      350, cost = index:       34, ( 581,   1): ( 582,  20) --> (1466,   1), goal index:      350, cost = index:       35, ( 582,   1): ( 583,  20) --> (1466,   1), goal index:      349, cost = index:       36, ( 583,   1): ( 584,  20) --> (1466,   1), goal index:      350, cost = index:       37, ( 584,   1): ( 585,  20) --> (1466,   1), goal index:      351, cost = index:       38, ( 585,   1): ( 586,  20) --> (1466,   1), goal index:      351, cost = index:       39, ( 586,   1): ( 587,  20) --> (1466,   1), goal index:      353, cost = index:       40, ( 587,   1): ( 588,  20) --> (1466,   1), goal index:      354, cost = index:       41, ( 588,   1): ( 589,  20) --> (1466,   1), goal index:      355, cost = index:       42, ( 589,   1): ( 590,  20) --> (1466,   1), goal index:      356, cost = index:       43, ( 590,   1): ( 591,  20) --> (1466,   1), goal index:      355, cost = index:       44, ( 591,   1): ( 592,  20) --> (1466,   1), goal index:      356, cost = index:       45, ( 592,   1): ( 593,  20) --> (1466,   1), goal index:      357, cost = index:       46, ( 593,   1): ( 594,  20) --> (1466,   1), goal index:      359, cost = index:       47, ( 594,   1): ( 595,  20) --> (1466,   1), goal index:      360, cost = index:       48, ( 595,   1): ( 596,  20) --> (1466,   1), goal index:      361, cost = index:       49, ( 596,   1): ( 597,  20) --> (1466,   1), goal index:      363, cost = index:       50, ( 597,   1): ( 598,  20) --> (1466,   1), goal index:      363, cost = index:       51, ( 598,   1): ( 599,  20) --> (1466,   1), goal index:      364, cost = index:       52, ( 599,   1): ( 600,  20) --> (1466,   1), goal index:      362, cost = index:       53, ( 600,   1): ( 601,  20) --> (1466,   1), goal index:      364, cost = index:       54, ( 601,   1): ( 602,  20) --> (1466,   1), goal index:      366, cost = index:       55, ( 602,   1): ( 603,  20) --> (1466,   1), goal index:      366, cost = index:       56, ( 603,   1): ( 604,  20) --> (1466,   1), goal index:      366, cost = index:       57, ( 604,   1): ( 605,  20) --> (1466,   1), goal index:      367, cost = index:       58, ( 605,   1): ( 606,  20) --> (1466,   1), goal index:      368, cost = index:       59, ( 606,   1): ( 607,  20) --> (1466,   1), goal index:      367, cost = index:       60, ( 607,   1): ( 608,  20) --> (1466,   1), goal index:      367, cost = index:       61, ( 608,   1): ( 609,  20) --> (1466,   1), goal index:      368, cost = index:       62, ( 609,   1): ( 610,  20) --> (1466,   1), goal index:      369, cost = index:       63, ( 610,   1): ( 611,  20) --> (1466,   1), goal index:      368, cost = index:       64, ( 611,   1): ( 612,  20) --> (1466,   1), goal index:      371, cost = index:       65, ( 612,   1): ( 613,  20) --> (1466,   1), goal index:      374, cost = index:       66, ( 613,   1): ( 614,  20) --> (1466,   1), goal index:      379, cost = index:       67, ( 614,   1): ( 615,  20) --> (1466,   1), goal index:      384, cost = index:       68, ( 615,   1): ( 616,  20) --> (1466,   1), goal index:      391, cost = index:       69, ( 616,   1): ( 617,  20) --> (1466,   1), goal index:      395, cost = index:       70, ( 617,   1): ( 618,  20) --> (1466,   1), goal index:      402, cost = index:       71, ( 618,   1): ( 619,  20) --> (1466,   1), goal index:      403, cost = index:       72, ( 619,   1): ( 620,  20) --> (1466,   1), goal index:      402, cost = index:       73, ( 620,   1): ( 621,  20) --> (1466,   1), goal index:      401, cost = index:       74, ( 626,   2): ( 626,   1) --> (1466,   1), goal index:      401, cost = index:       75, ( 627,   4): ( 627,   3) --> (1466,   1), goal index:      402, cost = index:       76, ( 621,   1): ( 622,  20) --> (1466,   1), goal index:      402, cost = index:       77, ( 627,   2): ( 627,   1) --> (1466,   1), goal index:      410, cost = index:       78, ( 628,   4): ( 628,   3) --> (1466,   1), goal index:      406, cost = index:       79, ( 622,   1): ( 623,  20) --> (1466,   1), goal index:      405, cost = index:       80, ( 628,   2): ( 628,   1) --> (1466,   1), goal index:      407, cost = index:       81, ( 629,   4): ( 629,   3) --> (1466,   1), goal index:      411, cost = index:       82, ( 628,   2): ( 628,   1) --> (1466,   1), goal index:      402, cost = index:       83, ( 623,   1): ( 624,  20) --> (1466,   1), goal index:      416, cost = index:       84, ( 629,   2): ( 629,   1) --> (1466,   1), goal index:      415, cost = index:       85, ( 630,   4): ( 630,   3) --> (1466,   1), goal index:      425, cost = index:       86, ( 629,   2): ( 629,   1) --> (1466,   1), goal index:      414, cost = index:       87, ( 630,   4): ( 630,   3) --> (1466,   1), goal index:      417, cost = index:       88, ( 624,   1): ( 625,  20) --> (1466,   1), goal index:      417, cost = index:       89, ( 631,   4): ( 631,   3) --> (1466,   1), goal index:      418, cost = index:       90, ( 630,   2): ( 630,   1) --> (1466,   1), goal index:      417, cost = index:       91, ( 631,   4): ( 631,   3) --> (1466,   1), goal index:      421, cost = index:       92, ( 625,   1): ( 626,  20) --> (1466,   1), goal index:      417, cost = index:       93, ( 632,   4): ( 632,   3) --> (1466,   1), goal index:      417, cost = index:       94, ( 631,   2): ( 631,   1) --> (1466,   1), goal index:      417, cost = index:       95, ( 632,   4): ( 632,   3) --> (1466,   1), goal index:      419, cost = index:       96, ( 632,   3): ( 632,   2) --> (1466,   1), goal index:      416, cost = index:       97, ( 626,   1): ( 627,  20) --> (1466,   1), goal index:      424, cost = index:       98, ( 633,   4): ( 633,   3) --> (1466,   1), goal index:      424, cost = index:       99, ( 633,   4): ( 633,   3) --> (1466,   1), goal index:      424, cost = index:      100, ( 633,   3): ( 633,   2) --> (1466,   1), goal index:      424, cost = index:      101, ( 627,   1): ( 628,  20) --> (1466,   1), goal index:      424, cost = index:      102, ( 634,   4): ( 634,   3) --> (1466,   1), goal index:      424, cost = index:      103, ( 634,   4): ( 634,   3) --> (1466,   1), goal index:      422, cost = index:      104, ( 634,   3): ( 634,   2) --> (1466,   1), goal index:      422, cost = index:      105, ( 635,   4): ( 635,   3) --> (1466,   1), goal index:      422, cost = index:      106, ( 635,   4): ( 635,   3) --> (1466,   1), goal index:      422, cost = index:      107, ( 635,   3): ( 635,   2) --> (1466,   1), goal index:      422, cost = index:      108, ( 636,   4): ( 636,   3) --> (1466,   1), goal index:      422, cost = index:      109, ( 636,   4): ( 636,   3) --> (1466,   1), goal index:      422, cost = index:      110, ( 636,   3): ( 636,   2) --> (1466,   1), goal index:      422, cost = index:      111, ( 636,   3): ( 636,   2) --> (1466,   1), goal index:      422, cost = index:      112, ( 637,   4): ( 637,   3) --> (1466,   1), goal index:      422, cost = index:      113, ( 637,   4): ( 637,   3) --> (1466,   1), goal index:      422, cost = index:      114, ( 637,   3): ( 637,   2) --> (1466,   1), goal index:      422, cost = index:      115, ( 637,   3): ( 637,   2) --> (1466,   1), goal index:      422, cost = index:      116, ( 638,   4): ( 638,   3) --> (1466,   1), goal index:      422, cost = index:      117, ( 638,   4): ( 638,   3) --> (1466,   1), goal index:      422, cost = index:      118, ( 638,   4): ( 638,   3) --> (1466,   1), goal index:      422, cost = index:      119, ( 638,   3): ( 638,   2) --> (1466,   1), goal index:      422, cost = index:      120, ( 638,   3): ( 638,   2) --> (1466,   1), goal index:      422, cost = index:      121, ( 638,   3): ( 638,   2) --> (1466,   1), goal index:      422, cost = index:      122, ( 639,   4): ( 639,   3) --> (1466,   1), goal index:      422, cost = index:      123, ( 639,   4): ( 639,   3) --> (1466,   1), goal index:      422, cost = index:      124, ( 639,   4): ( 639,   3) --> (1466,   1), goal index:      422, cost = index:      125, ( 639,   3): ( 639,   2) --> (1466,   1), goal index:      422, cost = index:      126, ( 639,   3): ( 639,   2) --> (1466,   1), goal index:      422, cost = index:      127, ( 639,   3): ( 639,   2) --> (1466,   1), goal index:      422, cost = index:      128, ( 640,   4): ( 640,   3) --> (1466,   1), goal index:      422, cost = index:      129, ( 640,   4): ( 640,   3) --> (1466,   1), goal index:      422, cost = index:      130, ( 640,   4): ( 640,   3) --> (1466,   1), goal index:      422, cost = index:      131, ( 640,   4): ( 640,   3) --> (1466,   1), goal index:      422, cost = index:      132, ( 640,   3): ( 640,   2) --> (1466,   1), goal index:      422, cost = index:      133, ( 640,   3): ( 640,   2) --> (1466,   1), goal index:      422, cost = index:      134, ( 640,   3): ( 640,   2) --> (1466,   1), goal index:      422, cost = index:      135, ( 640,   3): ( 640,   2) --> (1466,   1), goal index:      422, cost = index:      136, ( 641,   4): ( 641,   3) --> (1466,   1), goal index:      422, cost = index:      137, ( 641,   4): ( 641,   3) --> (1466,   1), goal index:      422, cost = index:      138, ( 641,   4): ( 641,   3) --> (1466,   1), goal index:      422, cost = index:      139, ( 641,   4): ( 641,   3) --> (1466,   1), goal index:      422, cost = index:      140, ( 641,   3): ( 641,   2) --> (1466,   1), goal index:      422, cost = index:      141, ( 641,   3): ( 641,   2) --> (1466,   1), goal index:      422, cost = index:      142, ( 641,   3): ( 641,   2) --> (1466,   1), goal index:      422, cost = index:      143, ( 642,   4): ( 642,   3) --> (1466,   1), goal index:      422, cost = index:      144, ( 642,   4): ( 642,   3) --> (1466,   1), goal index:      422, cost = index:      145, ( 642,   3): ( 642,   2) --> (1466,   1), goal index:      422, cost = index:      146, ( 643,   4): ( 643,   3) --> (1466,   1), goal index:      422, cost = index:      147, ( 643,   4): ( 643,   3) --> (1466,   1), goal index:      422, cost = index:      148, ( 643,   4): ( 643,   3) --> (1466,   1), goal index:      422, cost = index:      149, ( 644,   4): ( 644,   3) --> (1466,   1), goal index:      422, cost = index:      150, ( 644,   4): ( 644,   3) --> (1466,   1), goal index:      422, cost = index:      151, ( 644,   4): ( 644,   3) --> (1466,   1), goal index:      422, cost = index:      152, ( 645,   4): ( 645,   3) --> (1466,   1), goal index:      422, cost = index:      153, ( 644,   3): ( 644,   2) --> (1466,   1), goal index:      422, cost = index:      154, ( 645,   4): ( 645,   3) --> (1466,   1), goal index:      422, cost = index:      155, ( 646,   4): ( 646,   3) --> (1466,   1), goal index:      422, cost = index:      156, ( 646,   4): ( 646,   3) --> (1466,   1), goal index:      422, cost = index:      157, ( 647,   4): ( 647,   3) --> (1466,   1), goal index:      422, cost = index:      158, ( 647,   4): ( 647,   3) --> (1466,   1), goal index:      422, cost = index:      159, ( 648,   4): ( 648,   3) --> (1466,   1), goal index:      422, cost = index:      160, ( 648,   4): ( 648,   3) --> (1466,   1), goal index:      422, cost = index:      161, ( 649,   4): ( 649,   3) --> (1466,   1), goal index:      422, cost = index:      162, ( 651,   4): ( 651,   3) --> (1466,   1), goal index:      422, cost = index:      163, ( 652,   4): ( 652,   3) --> (1466,   1), goal index:      422, cost = index:      164, ( 653,   4): ( 653,   3) --> (1466,   1), goal index:      422, cost = index:      165, ( 655,   4): ( 655,   3) --> (1466,   1), goal index:      422, cost = index:      166, ( 656,   4): ( 656,   3) --> (1466,   1), goal index:      422, cost = index:      167, ( 657,   4): ( 657,   3) --> (1466,   1), goal index:      422, cost = index:      168, ( 658,   4): ( 658,   3) --> (1466,   1), goal index:      422, cost = index:      169, ( 659,   4): ( 659,   3) --> (1466,   1), goal index:      422, cost = index:      170, ( 661,   4): ( 661,   3) --> (1466,   1), goal index:      422, cost = index:      171, ( 661,   4): ( 661,   3) --> (1466,   1), goal index:      388, cost = index:      172, ( 664,   9): ( 664,   8) --> (1466,   1), goal index:      388, cost = index:      173, ( 665,  10): ( 665,   9) --> (1466,   1), goal index:      392, cost =
Find the optimal Strategy through EumBS!!
bs = (slope = -1.214320e-02, G_BKZ = 2.018698e+02 gate, B_BKZ = 1.355396e+02 bit cum-pr = 1.113565e-01, pump-{789,678,48}, G_dsvp = 2.033784e+02 gate, B_dsvp = 1.430311e+02 bit, G = 2.038129e+02 gate, B = 1.430311e+02 bit, min_GB.first = 2.038129e+02 gate)
S(beta,jump,tours):{(  50,   1,   1),(  51,   1,   1),(  52,   1,   1),(  53,   1,   1),(  54,   1,   1),(  55,   1,   1),(  56,   1,   1),(  57,   1,   1),(  58,   1,   1),(  59,   1,   1),(  60,   1,   1),(  61,   1,   1),(  62,   1,   1),(  63,   1,   1),(  64,   1,   1),(  65,   1,   1),(  66,   1,   1),(  67,   1,   1),(  68,   1,   1),(  69,   1,   1),(  70,   1,   1),(  71,   1,   1),(  72,   1,   1),(  73,   1,   1),(  74,   1,   1),(  75,   1,   1),(  76,   1,   1),(  77,   1,   1),(  78,   1,   1),(  79,   1,   1),(  80,   1,   1),(  81,   1,   1),(  82,   1,   1),(  83,   1,   1),(  84,   1,   1),(  85,   1,   1),(  86,   1,   1),(  87,   1,   1),(  88,   1,   1),(  89,   1,   1),(  90,   1,   1),(  91,   1,   1),(  92,   1,   1),(  93,   1,   1),(  94,   1,   1),(  95,   1,   1),(  96,   1,   1),(  97,   1,   1),(  98,   1,   1),(  99,   1,   1),( 100,   1,   1),( 101,   1,   1),( 102,   1,   1),( 103,   1,   1),( 104,   1,   1),( 105,   1,   1),( 106,   1,   1),( 107,   1,   1),( 108,   1,   1),( 109,   1,   1),( 110,   1,   1),( 111,   1,   1),( 112,   1,   1),( 113,   1,   1),( 114,   1,   1),( 115,   1,   1),( 116,   1,   1),( 117,   1,   1),( 118,   1,   1),( 119,   1,   1),( 120,   1,   1),( 121,   1,   1),( 122,   1,   1),( 123,   1,   1),( 124,   1,   1),( 125,   1,   1),( 126,   1,   1),( 127,   1,   1),( 128,   1,   1),( 129,   1,   1),( 130,   1,   1),( 131,   1,   1),( 132,   1,   1),( 133,   1,   1),( 134,   1,   1),( 135,   1,   1),( 136,   1,   1),( 137,   1,   1),( 138,   1,   1),( 139,   1,   1),( 140,   1,   1),( 141,   1,   1),( 142,   1,   1),( 143,   1,   1),( 144,   1,   1),( 145,   1,   1),( 146,   1,   1),( 147,   1,   1),( 148,   1,   1),( 149,   1,   1),( 150,   1,   1),( 151,   1,   1),( 152,   1,   1),( 153,   1,   1),( 154,   1,   1),( 155,   1,   1),( 156,   1,   1),( 157,   1,   1),( 158,   1,   1),( 159,   1,   1),( 160,   1,   1),( 161,   1,   1),( 162,   1,   1),( 163,   1,   1),( 164,   1,   1),( 165,   1,   1),( 166,   1,   1),( 167,   1,   1),( 168,   1,   1),( 169,   1,   1),( 170,   1,   1),( 171,   1,   1),( 172,   1,   1),( 173,   1,   1),( 174,   1,   1),( 175,   1,   1),( 176,   1,   1),( 177,   1,   1),( 178,   1,   1),( 179,   1,   1),( 180,   1,   1),( 181,   1,   1),( 182,   1,   1),( 183,   1,   1),( 184,   1,   1),( 185,   1,   1),( 186,   1,   1),( 187,   1,   1),( 188,   1,   1),( 189,   1,   1),( 190,   1,   1),( 191,   1,   1),( 192,   1,   1),( 193,   1,   1),( 194,   1,   1),( 195,   1,   1),( 196,   1,   1),( 197,   1,   1),( 198,   1,   1),( 199,   1,   1),( 200,   1,   1),( 201,   1,   1),( 202,   1,   1),( 203,   1,   1),( 204,   1,   1),( 205,   1,   1),( 206,   1,   1),( 207,   1,   1),( 208,   1,   1),( 209,   1,   1),( 210,   1,   1),( 211,   1,   1),( 212,   1,   1),( 213,   1,   1),( 214,   1,   1),( 215,   1,   1),( 216,   1,   1),( 217,   1,   1),( 218,   1,   1),( 219,   1,   1),( 220,   1,   1),( 221,   1,   1),( 222,   1,   1),( 223,   1,   1),( 224,   1,   1),( 225,   1,   1),( 226,   1,   1),( 227,   1,   1),( 228,   1,   1),( 229,   1,   1),( 230,   1,   1),( 231,   1,   1),( 232,   1,   1),( 233,   1,   1),( 234,   1,   1),( 235,   1,   1),( 236,   1,   1),( 237,   1,   1),( 238,   1,   1),( 239,   1,   1),( 240,   1,   1),( 241,   1,   1),( 242,   1,   1),( 243,   1,   1),( 244,   1,   1),( 245,   1,   1),( 246,   1,   1),( 247,   1,   1),( 248,   1,   1),( 249,   1,   1),( 250,   1,   1),( 251,   1,   1),( 252,   1,   1),( 253,   1,   1),( 254,   1,   1),( 255,   1,   1),( 256,   1,   1),( 257,   1,   1),( 258,   1,   1),( 259,   1,   1),( 260,   1,   1),( 261,   1,   1),( 262,   1,   1),( 263,   1,   1),( 264,   1,   1),( 265,   1,   1),( 266,   1,   1),( 267,   1,   1),( 268,   1,   1),( 269,   1,   1),( 270,   1,   1),( 271,   1,   1),( 272,   1,   1),( 273,   1,   1),( 274,   1,   1),( 275,   1,   1),( 276,   1,   1),( 277,   1,   1),( 278,   1,   1),( 279,   1,   1),( 280,   1,   1),( 281,   1,   1),( 282,   1,   1),( 283,   1,   1),( 284,   1,   1),( 285,   1,   1),( 286,   1,   1),( 287,   1,   1),( 288,   1,   1),( 289,   1,   1),( 290,   1,   1),( 291,   1,   1),( 292,   1,   1),( 293,   1,   1),( 294,   1,   1),( 295,   1,   1),( 296,   1,   1),( 297,   1,   1),( 298,   1,   1),( 299,   1,   1),( 300,   1,   1),( 301,   1,   1),( 302,   1,   1),( 303,   1,   1),( 304,   1,   1),( 305,   1,   1),( 306,   1,   1),( 307,   1,   1),( 308,   1,   1),( 309,   1,   1),( 310,   1,   1),( 311,   1,   1),( 312,   1,   1),( 313,   1,   1),( 314,   1,   1),( 315,   1,   1),( 316,   1,   1),( 317,   1,   1),( 318,   1,   1),( 319,   1,   1),( 320,   1,   1),( 321,   1,   1),( 322,   1,   1),( 323,   1,   1),( 324,   1,   1),( 325,   1,   1),( 326,   1,   1),( 327,   1,   1),( 328,   1,   1),( 329,   1,   1),( 330,   1,   1),( 331,   1,   1),( 332,   1,   1),( 333,   1,   1),( 334,   1,   1),( 335,   1,   1),( 336,   1,   1),( 337,   1,   1),( 338,   1,   1),( 339,   1,   1),( 340,   1,   1),( 341,   1,   1),( 342,   1,   1),( 343,   1,   1),( 344,   1,   1),( 345,   1,   1),( 346,   1,   1),( 347,   1,   1),( 348,   1,   1),( 349,   1,   1),( 350,   1,   1),( 351,   1,   1),( 352,   1,   1),( 353,   1,   1),( 354,   1,   1),( 355,   1,   1),( 356,   1,   1),( 357,   1,   1),( 358,   1,   1),( 359,   1,   1),( 360,   1,   1),( 361,   1,   1),( 362,   1,   1),( 363,   1,   1),( 364,   1,   1),( 365,   1,   1),( 366,   1,   1),( 367,   1,   1),( 368,   1,   1),( 369,   1,   1),( 370,   1,   1),( 371,   1,   1),( 372,   1,   1),( 373,   1,   1),( 374,   1,   1),( 375,   1,   1),( 376,   1,   1),( 377,   1,   1),( 378,   1,   1),( 379,   1,   1),( 380,   1,   1),( 381,   1,   1),( 382,   1,   1),( 383,   1,   1),( 384,   1,   1),( 385,   1,   1),( 386,   1,   1),( 387,   1,   1),( 388,   1,   1),( 389,   1,   1),( 390,   1,   1),( 391,   1,   1),( 392,   1,   1),( 393,   1,   1),( 394,   1,   1),( 395,   1,   1),( 396,   1,   1),( 397,   1,   1),( 398,   1,   1),( 399,   1,   1),( 400,   1,   1),( 401,   1,   1),( 402,   1,   1),( 403,   1,   1),( 404,   1,   1),( 405,   1,   1),( 406,   1,   1),( 407,   1,   1),( 408,   1,   1),( 409,   1,   1),( 410,   1,   1),( 411,   1,   1),( 412,   1,   1),( 413,   1,   1),( 414,   1,   1),( 415,   1,   1),( 416,   1,   1),( 417,   1,   1),( 418,   1,   1),( 419,   1,   1),( 420,   1,   1),( 421,   1,   1),( 422,   1,   1),( 423,   1,   1),( 424,   1,   1),( 425,   1,   1),( 426,   1,   1),( 427,   1,   1),( 428,   1,   1),( 429,   1,   1),( 430,   1,   1),( 431,   1,   1),( 432,   1,   1),( 433,   1,   1),( 434,   1,   1),( 435,   1,   1),( 436,   1,   1),( 437,   1,   1),( 438,   1,   1),( 439,   1,   1),( 440,   1,   1),( 441,   1,   1),( 442,   1,   1),( 443,   1,   1),( 444,   1,   1),( 445,   1,   1),( 446,   1,   1),( 447,   1,   1),( 448,   1,   1),( 449,   1,   1),( 450,   1,   1),( 451,   1,   1),( 452,   1,   1),( 453,   1,   1),( 454,   1,   1),( 455,   1,   1),( 456,   1,   1),( 457,   1,   1),( 458,   1,   1),( 459,   1,   1),( 460,   1,   1),( 461,   1,   1),( 462,   1,   1),( 463,   1,   1),( 464,   1,   1),( 465,   1,   1),( 466,   1,   1),( 467,   1,   1),( 468,   1,   1),( 469,   1,   1),( 470,   1,   1),( 471,   1,   1),( 472,   1,   1),( 473,   1,   1),( 474,   1,   1),( 475,   1,   1),( 476,   1,   1),( 477,   1,   1),( 478,   1,   1),( 479,   1,   1),( 480,   1,   1),( 481,   1,   1),( 482,   1,   1),( 483,   1,   1),( 484,   1,   1),( 485,   1,   1),( 486,   1,   1),( 487,   1,   1),( 488,   1,   1),( 489,   1,   1),( 490,   1,   1),( 491,   1,   1),( 492,   1,   1),( 493,   1,   1),( 494,   1,   1),( 495,   1,   1),( 496,   1,   1),( 497,   1,   1),( 498,   1,   1),( 499,   1,   1),( 500,   1,   1),( 501,   1,   1),( 502,   1,   1),( 503,   1,   1),( 504,   1,   1),( 505,   1,   1),( 506,   1,   1),( 507,   1,   1),( 508,   1,   1),( 509,   1,   1),( 510,   1,   1),( 511,   1,   1),( 512,   1,   1),( 513,   1,   1),( 514,   1,   1),( 515,   1,   1),( 516,   1,   1),( 517,   1,   1),( 518,   1,   1),( 519,   1,   1),( 520,   1,   1),( 521,   1,   1),( 522,   1,   1),( 523,   1,   1),( 524,   1,   1),( 525,   1,   1),( 526,   1,   1),( 527,   1,   1),( 528,   1,   1),( 529,   1,   1),( 530,   1,   1),( 531,   1,   1),( 532,   1,   1),( 533,   1,   1),( 534,   1,   1),( 535,   1,   1),( 536,   1,   1),( 537,   1,   1),( 538,   1,   1),( 539,   1,   1),( 540,   1,   1),( 541,   1,   1),( 542,   1,   1),( 543,   1,   1),( 544,   1,   1),( 545,   1,   1),( 546,   1,   1),( 547,   1,   1),( 548,   1,   1),( 549,   1,   1),( 550,   1,   1),( 551,   1,   1),( 552,   1,   1),( 553,   1,   1),( 554,   1,   1),( 555,   1,   1),( 556,   1,   1),( 557,   1,   1),( 558,   1,   1),( 559,   1,   1),( 560,   1,   1),( 561,   1,   1),( 562,   1,   1),( 563,   1,   1),( 564,   1,   1),( 565,   1,   1),( 566,   1,   1),( 567,   1,   1),( 568,   1,   1),( 569,   1,   1),( 570,   1,   1),( 571,   1,   1),( 572,   1,   1),( 573,   1,   1),( 574,   1,   1),( 575,   1,   1),( 576,   1,   1),( 577,   1,   1),( 578,   1,   1),( 579,   1,   1),( 580,   1,   1),( 581,   1,   1),( 582,   1,   1),( 583,   1,   1),( 584,   1,   1),( 585,   1,   1),( 586,   1,   1),( 587,   1,   1),( 588,   1,   1),( 589,   1,   1),( 590,   1,   1),( 591,   1,   1),( 592,   1,   1),( 593,   1,   1),( 594,   1,   1),( 595,   1,   1),( 596,   1,   1),( 597,   1,   1),( 598,   1,   1),( 599,   1,   1),( 600,   1,   1),( 601,   1,   1),( 602,   1,   1),( 603,   1,   1),( 604,   1,   1),( 605,   1,   1),( 606,   1,   1),( 607,   1,   1),( 608,   1,   1),( 609,   1,   1),( 610,   1,   1),( 611,   1,   1),( 612,   1,   1),( 613,   1,   1),( 614,   1,   1),( 631,   4,   1),( 638,   4,   1)}
Min Cost = 203.81 log2(gate), Memory Cost = 143.03 log(bit)
EnumBS cost:8.7e+02s.
============= Kyber-III
Generate gs-lengths by GSA assumption...enumbs min_G_prec = 0.1
 Attack Estimation via simulation + probabilistic model (EnumBS in parallel)
beta_start= 50, gap = 1, J = 20, J_gap = 1, cost_model = 1, max_loop = 1, threads = 4, G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = 1, Find minimal time cost strategy, average_case, theo_pnjbkz_d4f = 2, theo_pump_d4f = 2.
  index:        2, ( 778,   1): ( 779,  20) --> (1499,   1), goal index:      188, cost = index:        3, ( 779,   1): ( 780,  20) --> (1499,   1), goal index:      162, cost = index:        4, ( 780,   1): ( 781,  20) --> (1499,   1), goal index:      162, cost = index:        5, ( 781,   1): ( 782,  20) --> (1499,   1), goal index:      161, cost = index:        6, ( 782,   1): ( 783,  20) --> (1499,   1), goal index:      162, cost = index:        7, ( 783,   1): ( 784,  20) --> (1499,   1), goal index:      162, cost = index:        8, ( 784,   1): ( 785,  20) --> (1499,   1), goal index:      163, cost = index:        9, ( 785,   1): ( 786,  20) --> (1499,   1), goal index:      163, cost = index:       10, ( 786,   1): ( 787,  20) --> (1499,   1), goal index:      163, cost = index:       11, ( 787,   1): ( 788,  20) --> (1499,   1), goal index:      163, cost = index:       12, ( 788,   1): ( 789,  20) --> (1499,   1), goal index:      164, cost = index:       13, ( 789,   1): ( 790,  20) --> (1499,   1), goal index:      164, cost = index:       14, ( 790,   1): ( 791,  20) --> (1499,   1), goal index:      164, cost = index:       15, ( 791,   1): ( 792,  20) --> (1499,   1), goal index:      164, cost = index:       16, ( 792,   1): ( 793,  20) --> (1499,   1), goal index:      165, cost = index:       17, ( 793,   1): ( 794,  20) --> (1499,   1), goal index:      165, cost = index:       18, ( 794,   1): ( 795,  20) --> (1499,   1), goal index:      166, cost = index:       19, ( 795,   1): ( 796,  20) --> (1499,   1), goal index:      166, cost = index:       20, ( 796,   1): ( 797,  20) --> (1499,   1), goal index:      168, cost = index:       21, ( 797,   1): ( 798,  20) --> (1499,   1), goal index:      168, cost = index:       22, ( 798,   1): ( 799,  20) --> (1499,   1), goal index:      169, cost = index:       23, ( 799,   1): ( 800,  20) --> (1499,   1), goal index:      170, cost = index:       24, ( 800,   1): ( 801,  20) --> (1499,   1), goal index:      171, cost = index:       25, ( 801,   1): ( 802,  20) --> (1499,   1), goal index:      172, cost = index:       26, ( 802,   1): ( 803,  20) --> (1499,   1), goal index:      173, cost = index:       27, ( 803,   1): ( 804,  20) --> (1499,   1), goal index:      173, cost = index:       28, ( 804,   1): ( 805,  20) --> (1499,   1), goal index:      174, cost = index:       29, ( 805,   1): ( 806,  20) --> (1499,   1), goal index:      175, cost = index:       30, ( 806,   1): ( 807,  20) --> (1499,   1), goal index:      176, cost = index:       31, ( 807,   1): ( 808,  20) --> (1499,   1), goal index:      176, cost = index:       32, ( 808,   1): ( 809,  20) --> (1499,   1), goal index:      176, cost = index:       33, ( 809,   1): ( 810,  20) --> (1499,   1), goal index:      177, cost = index:       34, ( 810,   1): ( 811,  20) --> (1499,   1), goal index:      178, cost = index:       35, ( 811,   1): ( 812,  20) --> (1499,   1), goal index:      180, cost = index:       36, ( 812,   1): ( 813,  20) --> (1499,   1), goal index:      180, cost = index:       37, ( 813,   1): ( 814,  20) --> (1499,   1), goal index:      181, cost = index:       38, ( 814,   1): ( 815,  20) --> (1499,   1), goal index:      181, cost = index:       39, ( 815,   1): ( 816,  20) --> (1499,   1), goal index:      183, cost = index:       40, ( 816,   1): ( 817,  20) --> (1499,   1), goal index:      184, cost = index:       41, ( 817,   1): ( 818,  20) --> (1499,   1), goal index:      185, cost = index:       42, ( 818,   1): ( 819,  20) --> (1499,   1), goal index:      184, cost = index:       43, ( 819,   1): ( 820,  20) --> (1499,   1), goal index:      186, cost = index:       44, ( 820,   1): ( 821,  20) --> (1499,   1), goal index:      187, cost = index:       45, ( 821,   1): ( 822,  20) --> (1499,   1), goal index:      189, cost = index:       46, ( 822,   1): ( 823,  20) --> (1499,   1), goal index:      189, cost = index:       47, ( 823,   1): ( 824,  20) --> (1499,   1), goal index:      189, cost = index:       48, ( 824,   1): ( 825,  20) --> (1499,   1), goal index:      190, cost = index:       49, ( 825,   1): ( 826,  20) --> (1499,   1), goal index:      192, cost = index:       50, ( 826,   1): ( 827,  20) --> (1499,   1), goal index:      193, cost = index:       51, ( 827,   1): ( 828,  20) --> (1499,   1), goal index:      193, cost = index:       52, ( 828,   1): ( 829,  20) --> (1499,   1), goal index:      192, cost = index:       53, ( 829,   1): ( 830,  20) --> (1499,   1), goal index:      193, cost = index:       54, ( 830,   1): ( 831,  20) --> (1499,   1), goal index:      195, cost = index:       55, ( 831,   1): ( 832,  20) --> (1499,   1), goal index:      196, cost = index:       56, ( 832,   1): ( 833,  20) --> (1499,   1), goal index:      198, cost = index:       57, ( 833,   1): ( 834,  20) --> (1499,   1), goal index:      198, cost = index:       58, ( 834,   1): ( 835,  20) --> (1499,   1), goal index:      198, cost = index:       59, ( 835,   1): ( 836,  20) --> (1499,   1), goal index:      199, cost = index:       60, ( 836,   1): ( 837,  20) --> (1499,   1), goal index:      201, cost = index:       61, ( 837,   1): ( 838,  20) --> (1499,   1), goal index:      202, cost = index:       62, ( 838,   1): ( 839,  20) --> (1499,   1), goal index:      203, cost = index:       63, ( 839,   1): ( 840,  20) --> (1499,   1), goal index:      202, cost = index:       64, ( 840,   1): ( 841,  20) --> (1499,   1), goal index:      204, cost = index:       65, ( 841,   1): ( 842,  20) --> (1499,   1), goal index:      205, cost = index:       66, ( 842,   1): ( 843,  20) --> (1499,   1), goal index:      207, cost = index:       67, ( 843,   1): ( 844,  20) --> (1499,   1), goal index:      207, cost = index:       68, ( 844,   1): ( 845,  20) --> (1499,   1), goal index:      207, cost = index:       69, ( 845,   1): ( 846,  20) --> (1499,   1), goal index:      207, cost = index:       70, ( 846,   1): ( 847,  20) --> (1499,   1), goal index:      208, cost = index:       71, ( 847,   1): ( 848,  20) --> (1499,   1), goal index:      210, cost = index:       72, ( 848,   1): ( 849,  20) --> (1499,   1), goal index:      211, cost = index:       73, ( 849,   1): ( 850,  20) --> (1499,   1), goal index:      212, cost = index:       74, ( 850,   1): ( 851,  20) --> (1499,   1), goal index:      212, cost = index:       75, ( 851,   1): ( 852,  20) --> (1499,   1), goal index:      214, cost = index:       76, ( 852,   1): ( 853,  20) --> (1499,   1), goal index:      215, cost = index:       77, ( 853,   1): ( 854,  20) --> (1499,   1), goal index:      218, cost = index:       78, ( 854,   1): ( 855,  20) --> (1499,   1), goal index:      219, cost = index:       79, ( 855,   1): ( 856,  20) --> (1499,   1), goal index:      221, cost = index:       80, ( 856,   1): ( 857,  20) --> (1499,   1), goal index:      223, cost = index:       81, ( 857,   1): ( 858,  20) --> (1499,   1), goal index:      225, cost = index:       82, ( 858,   1): ( 859,  20) --> (1499,   1), goal index:      226, cost = index:       83, ( 859,   1): ( 860,  20) --> (1499,   1), goal index:      229, cost = index:       84, ( 860,   1): ( 861,  20) --> (1499,   1), goal index:      229, cost = index:       85, ( 861,   1): ( 862,  20) --> (1499,   1), goal index:      230, cost = index:       86, ( 862,   1): ( 863,  20) --> (1499,   1), goal index:      230, cost = index:       87, ( 863,   1): ( 864,  20) --> (1499,   1), goal index:      230, cost = index:       88, ( 864,   1): ( 865,  20) --> (1499,   1), goal index:      232, cost = index:       89, ( 865,   1): ( 866,  20) --> (1499,   1), goal index:      234, cost = index:       90, ( 866,   1): ( 867,  20) --> (1499,   1), goal index:      239, cost = index:       91, ( 867,   1): ( 868,  20) --> (1499,   1), goal index:      245, cost = index:       92, ( 868,   1): ( 869,  20) --> (1499,   1), goal index:      249, cost = index:       93, ( 869,   1): ( 870,  20) --> (1499,   1), goal index:      256, cost = index:       94, ( 870,   1): ( 871,  20) --> (1499,   1), goal index:      255, cost = index:       95, ( 871,   1): ( 872,  20) --> (1499,   1), goal index:      257, cost = index:       96, ( 872,   1): ( 873,  20) --> (1499,   1), goal index:      257, cost = index:       97, ( 873,   1): ( 874,  20) --> (1499,   1), goal index:      257, cost = index:       98, ( 874,   1): ( 875,  20) --> (1499,   1), goal index:      258, cost = index:       99, ( 875,   1): ( 876,  20) --> (1499,   1), goal index:      258, cost = index:      100, ( 876,   1): ( 877,  20) --> (1499,   1), goal index:      258, cost = index:      101, ( 877,   1): ( 878,  20) --> (1499,   1), goal index:      259, cost = index:      102, ( 878,   1): ( 879,  20) --> (1499,   1), goal index:      259, cost = index:      103, ( 879,   1): ( 880,  20) --> (1499,   1), goal index:      259, cost = index:      104, ( 880,   1): ( 881,  20) --> (1499,   1), goal index:      259, cost = index:      105, ( 881,   1): ( 882,  20) --> (1499,   1), goal index:      259, cost = index:      106, ( 882,   1): ( 883,  20) --> (1499,   1), goal index:      259, cost = index:      107, ( 883,   1): ( 884,  20) --> (1499,   1), goal index:      259, cost = index:      108, ( 892,   3): ( 892,   2) --> (1499,   1), goal index:      259, cost = index:      109, ( 884,   1): ( 885,  20) --> (1499,   1), goal index:      259, cost = index:      110, ( 893,   3): ( 893,   2) --> (1499,   1), goal index:      259, cost = index:      111, ( 893,   3): ( 893,   2) --> (1499,   1), goal index:      259, cost = index:      112, ( 893,   3): ( 893,   2) --> (1499,   1), goal index:      259, cost = index:      113, ( 885,   1): ( 886,  20) --> (1499,   1), goal index:      259, cost = index:      114, ( 894,   4): ( 894,   3) --> (1499,   1), goal index:      259, cost = index:      115, ( 895,   4): ( 895,   3) --> (1499,   1), goal index:      259, cost = index:      116, ( 895,   4): ( 895,   3) --> (1499,   1), goal index:      259, cost = index:      117, ( 895,   4): ( 895,   3) --> (1499,   1), goal index:      259, cost = index:      118, ( 895,   4): ( 895,   3) --> (1499,   1), goal index:      259, cost = index:      119, ( 895,   3): ( 895,   2) --> (1499,   1), goal index:      259, cost = index:      120, ( 895,   3): ( 895,   2) --> (1499,   1), goal index:      259, cost = index:      121, ( 895,   3): ( 895,   2) --> (1499,   1), goal index:      259, cost = index:      122, ( 896,   4): ( 896,   3) --> (1499,   1), goal index:      259, cost = index:      123, ( 896,   4): ( 896,   3) --> (1499,   1), goal index:      259, cost = index:      124, ( 896,   3): ( 896,   2) --> (1499,   1), goal index:      259, cost = index:      125, ( 896,   3): ( 896,   2) --> (1499,   1), goal index:      259, cost = index:      126, ( 897,   4): ( 897,   3) --> (1499,   1), goal index:      259, cost = index:      127, ( 896,   3): ( 896,   2) --> (1499,   1), goal index:      259, cost = index:      128, ( 897,   4): ( 897,   3) --> (1499,   1), goal index:      259, cost = index:      129, ( 897,   4): ( 897,   3) --> (1499,   1), goal index:      259, cost = index:      130, ( 897,   3): ( 897,   2) --> (1499,   1), goal index:      259, cost = index:      131, ( 898,   4): ( 898,   3) --> (1499,   1), goal index:      259, cost = index:      132, ( 897,   3): ( 897,   2) --> (1499,   1), goal index:      259, cost = index:      133, ( 898,   4): ( 898,   3) --> (1499,   1), goal index:      259, cost = index:      134, ( 897,   3): ( 897,   2) --> (1499,   1), goal index:      259, cost = index:      135, ( 898,   4): ( 898,   3) --> (1499,   1), goal index:      259, cost = index:      136, ( 898,   4): ( 898,   3) --> (1499,   1), goal index:      259, cost = index:      137, ( 898,   3): ( 898,   2) --> (1499,   1), goal index:      259, cost = index:      138, ( 899,   4): ( 899,   3) --> (1499,   1), goal index:      259, cost = index:      139, ( 898,   3): ( 898,   2) --> (1499,   1), goal index:      259, cost = index:      140, ( 899,   4): ( 899,   3) --> (1499,   1), goal index:      259, cost = index:      141, ( 898,   3): ( 898,   2) --> (1499,   1), goal index:      259, cost = index:      142, ( 899,   4): ( 899,   3) --> (1499,   1), goal index:      259, cost = index:      143, ( 899,   4): ( 899,   3) --> (1499,   1), goal index:      259, cost = index:      144, ( 899,   3): ( 899,   2) --> (1499,   1), goal index:      259, cost = index:      145, ( 900,   4): ( 900,   3) --> (1499,   1), goal index:      259, cost = index:      146, ( 899,   3): ( 899,   2) --> (1499,   1), goal index:      259, cost = index:      147, ( 900,   4): ( 900,   3) --> (1499,   1), goal index:      259, cost = index:      148, ( 899,   3): ( 899,   2) --> (1499,   1), goal index:      259, cost = index:      149, ( 900,   4): ( 900,   3) --> (1499,   1), goal index:      259, cost = index:      150, ( 900,   4): ( 900,   3) --> (1499,   1), goal index:      259, cost = index:      151, ( 900,   3): ( 900,   2) --> (1499,   1), goal index:      259, cost = index:      152, ( 901,   4): ( 901,   3) --> (1499,   1), goal index:      259, cost = index:      153, ( 900,   3): ( 900,   2) --> (1499,   1), goal index:      259, cost = index:      154, ( 901,   4): ( 901,   3) --> (1499,   1), goal index:      259, cost = index:      155, ( 900,   3): ( 900,   2) --> (1499,   1), goal index:      259, cost = index:      156, ( 901,   4): ( 901,   3) --> (1499,   1), goal index:      259, cost = index:      157, ( 901,   4): ( 901,   3) --> (1499,   1), goal index:      259, cost = index:      158, ( 901,   3): ( 901,   2) --> (1499,   1), goal index:      259, cost = index:      159, ( 902,   4): ( 902,   3) --> (1499,   1), goal index:      259, cost = index:      160, ( 901,   3): ( 901,   2) --> (1499,   1), goal index:      259, cost = index:      161, ( 902,   4): ( 902,   3) --> (1499,   1), goal index:      259, cost = index:      162, ( 901,   3): ( 901,   2) --> (1499,   1), goal index:      259, cost = index:      163, ( 902,   4): ( 902,   3) --> (1499,   1), goal index:      259, cost = index:      164, ( 902,   4): ( 902,   3) --> (1499,   1), goal index:      259, cost = index:      165, ( 903,   4): ( 903,   3) --> (1499,   1), goal index:      259, cost = index:      166, ( 903,   4): ( 903,   3) --> (1499,   1), goal index:      259, cost = index:      167, ( 903,   4): ( 903,   3) --> (1499,   1), goal index:      259, cost = index:      168, ( 903,   4): ( 903,   3) --> (1499,   1), goal index:      259, cost = index:      169, ( 904,   4): ( 904,   3) --> (1499,   1), goal index:      259, cost = index:      170, ( 904,   4): ( 904,   3) --> (1499,   1), goal index:      259, cost = index:      171, ( 904,   4): ( 904,   3) --> (1499,   1), goal index:      259, cost = index:      172, ( 904,   4): ( 904,   3) --> (1499,   1), goal index:      259, cost = index:      173, ( 905,   4): ( 905,   3) --> (1499,   1), goal index:      259, cost = index:      174, ( 905,   4): ( 905,   3) --> (1499,   1), goal index:      259, cost = index:      175, ( 905,   4): ( 905,   3) --> (1499,   1), goal index:      259, cost = index:      176, ( 906,   4): ( 906,   3) --> (1499,   1), goal index:      259, cost = index:      177, ( 906,   4): ( 906,   3) --> (1499,   1), goal index:      259, cost = index:      178, ( 907,   4): ( 907,   3) --> (1499,   1), goal index:      259, cost = index:      179, ( 908,   4): ( 908,   3) --> (1499,   1), goal index:      259, cost = index:      180, ( 908,   4): ( 908,   3) --> (1499,   1), goal index:      259, cost = index:      181, ( 909,   4): ( 909,   3) --> (1499,   1), goal index:      259, cost = index:      182, ( 909,   4): ( 909,   3) --> (1499,   1), goal index:      259, cost = index:      183, ( 910,   4): ( 910,   3) --> (1499,   1), goal index:      259, cost = index:      184, ( 910,   4): ( 910,   3) --> (1499,   1), goal index:      259, cost = index:      185, ( 911,   4): ( 911,   3) --> (1499,   1), goal index:      259, cost = index:      186, ( 912,   4): ( 912,   3) --> (1499,   1), goal index:      259, cost = index:      187, ( 912,   4): ( 912,   3) --> (1499,   1), goal index:      259, cost = index:      188, ( 913,   4): ( 913,   3) --> (1499,   1), goal index:      259, cost = index:      189, ( 913,   4): ( 913,   3) --> (1499,   1), goal index:      259, cost = index:      190, ( 913,   4): ( 913,   3) --> (1499,   1), goal index:      259, cost = index:      191, ( 914,   4): ( 914,   3) --> (1499,   1), goal index:      259, cost = index:      192, ( 914,   4): ( 914,   3) --> (1499,   1), goal index:      259, cost = index:      193, ( 915,   4): ( 915,   3) --> (1499,   1), goal index:      259, cost = index:      194, ( 916,   4): ( 916,   3) --> (1499,   1), goal index:      259, cost = index:      195, ( 916,   4): ( 916,   3) --> (1499,   1), goal index:      259, cost = index:      196, ( 917,   4): ( 917,   3) --> (1499,   1), goal index:      259, cost = index:      197, ( 917,   4): ( 917,   3) --> (1499,   1), goal index:      259, cost = index:      198, ( 918,   4): ( 918,   3) --> (1499,   1), goal index:      259, cost = index:      199, ( 918,   4): ( 918,   3) --> (1499,   1), goal index:      259, cost = index:      200, ( 919,   4): ( 919,   3) --> (1499,   1), goal index:      259, cost = index:      201, ( 919,   4): ( 919,   3) --> (1499,   1), goal index:      204, cost =
Find the optimal Strategy through EumBS!!
bs = (slope = -9.548956e-03, G_BKZ = 2.743541e+02 gate, B_BKZ = 1.871610e+02 bit cum-pr = 1.286825e-01, pump-{978,940,63}, G_dsvp = 2.762816e+02 gate, B_dsvp = 1.947766e+02 bit, G = 2.766183e+02 gate, B = 1.947766e+02 bit, min_GB.first = 2.766183e+02 gate)
S(beta,jump,tours):{(  50,   1,   1),(  51,   1,   1),(  52,   1,   1),(  53,   1,   1),(  54,   1,   1),(  55,   1,   1),(  56,   1,   1),(  57,   1,   1),(  58,   1,   1),(  59,   1,   1),(  60,   1,   1),(  61,   1,   1),(  62,   1,   1),(  63,   1,   1),(  64,   1,   1),(  65,   1,   1),(  66,   1,   1),(  67,   1,   1),(  68,   1,   1),(  69,   1,   1),(  70,   1,   1),(  71,   1,   1),(  72,   1,   1),(  73,   1,   1),(  74,   1,   1),(  75,   1,   1),(  76,   1,   1),(  77,   1,   1),(  78,   1,   1),(  79,   1,   1),(  80,   1,   1),(  81,   1,   1),(  82,   1,   1),(  83,   1,   1),(  84,   1,   1),(  85,   1,   1),(  86,   1,   1),(  87,   1,   1),(  88,   1,   1),(  89,   1,   1),(  90,   1,   1),(  91,   1,   1),(  92,   1,   1),(  93,   1,   1),(  94,   1,   1),(  95,   1,   1),(  96,   1,   1),(  97,   1,   1),(  98,   1,   1),(  99,   1,   1),( 100,   1,   1),( 101,   1,   1),( 102,   1,   1),( 103,   1,   1),( 104,   1,   1),( 105,   1,   1),( 106,   1,   1),( 107,   1,   1),( 108,   1,   1),( 109,   1,   1),( 110,   1,   1),( 111,   1,   1),( 112,   1,   1),( 113,   1,   1),( 114,   1,   1),( 115,   1,   1),( 116,   1,   1),( 117,   1,   1),( 118,   1,   1),( 119,   1,   1),( 120,   1,   1),( 121,   1,   1),( 122,   1,   1),( 123,   1,   1),( 124,   1,   1),( 125,   1,   1),( 126,   1,   1),( 127,   1,   1),( 128,   1,   1),( 129,   1,   1),( 130,   1,   1),( 131,   1,   1),( 132,   1,   1),( 133,   1,   1),( 134,   1,   1),( 135,   1,   1),( 136,   1,   1),( 137,   1,   1),( 138,   1,   1),( 139,   1,   1),( 140,   1,   1),( 141,   1,   1),( 142,   1,   1),( 143,   1,   1),( 144,   1,   1),( 145,   1,   1),( 146,   1,   1),( 147,   1,   1),( 148,   1,   1),( 149,   1,   1),( 150,   1,   1),( 151,   1,   1),( 152,   1,   1),( 153,   1,   1),( 154,   1,   1),( 155,   1,   1),( 156,   1,   1),( 157,   1,   1),( 158,   1,   1),( 159,   1,   1),( 160,   1,   1),( 161,   1,   1),( 162,   1,   1),( 163,   1,   1),( 164,   1,   1),( 165,   1,   1),( 166,   1,   1),( 167,   1,   1),( 168,   1,   1),( 169,   1,   1),( 170,   1,   1),( 171,   1,   1),( 172,   1,   1),( 173,   1,   1),( 174,   1,   1),( 175,   1,   1),( 176,   1,   1),( 177,   1,   1),( 178,   1,   1),( 179,   1,   1),( 180,   1,   1),( 181,   1,   1),( 182,   1,   1),( 183,   1,   1),( 184,   1,   1),( 185,   1,   1),( 186,   1,   1),( 187,   1,   1),( 188,   1,   1),( 189,   1,   1),( 190,   1,   1),( 191,   1,   1),( 192,   1,   1),( 193,   1,   1),( 194,   1,   1),( 195,   1,   1),( 196,   1,   1),( 197,   1,   1),( 198,   1,   1),( 199,   1,   1),( 200,   1,   1),( 201,   1,   1),( 202,   1,   1),( 203,   1,   1),( 204,   1,   1),( 205,   1,   1),( 206,   1,   1),( 207,   1,   1),( 208,   1,   1),( 209,   1,   1),( 210,   1,   1),( 211,   1,   1),( 212,   1,   1),( 213,   1,   1),( 214,   1,   1),( 215,   1,   1),( 216,   1,   1),( 217,   1,   1),( 218,   1,   1),( 219,   1,   1),( 220,   1,   1),( 221,   1,   1),( 222,   1,   1),( 223,   1,   1),( 224,   1,   1),( 225,   1,   1),( 226,   1,   1),( 227,   1,   1),( 228,   1,   1),( 229,   1,   1),( 230,   1,   1),( 231,   1,   1),( 232,   1,   1),( 233,   1,   1),( 234,   1,   1),( 235,   1,   1),( 236,   1,   1),( 237,   1,   1),( 238,   1,   1),( 239,   1,   1),( 240,   1,   1),( 241,   1,   1),( 242,   1,   1),( 243,   1,   1),( 244,   1,   1),( 245,   1,   1),( 246,   1,   1),( 247,   1,   1),( 248,   1,   1),( 249,   1,   1),( 250,   1,   1),( 251,   1,   1),( 252,   1,   1),( 253,   1,   1),( 254,   1,   1),( 255,   1,   1),( 256,   1,   1),( 257,   1,   1),( 258,   1,   1),( 259,   1,   1),( 260,   1,   1),( 261,   1,   1),( 262,   1,   1),( 263,   1,   1),( 264,   1,   1),( 265,   1,   1),( 266,   1,   1),( 267,   1,   1),( 268,   1,   1),( 269,   1,   1),( 270,   1,   1),( 271,   1,   1),( 272,   1,   1),( 273,   1,   1),( 274,   1,   1),( 275,   1,   1),( 276,   1,   1),( 277,   1,   1),( 278,   1,   1),( 279,   1,   1),( 280,   1,   1),( 281,   1,   1),( 282,   1,   1),( 283,   1,   1),( 284,   1,   1),( 285,   1,   1),( 286,   1,   1),( 287,   1,   1),( 288,   1,   1),( 289,   1,   1),( 290,   1,   1),( 291,   1,   1),( 292,   1,   1),( 293,   1,   1),( 294,   1,   1),( 295,   1,   1),( 296,   1,   1),( 297,   1,   1),( 298,   1,   1),( 299,   1,   1),( 300,   1,   1),( 301,   1,   1),( 302,   1,   1),( 303,   1,   1),( 304,   1,   1),( 305,   1,   1),( 306,   1,   1),( 307,   1,   1),( 308,   1,   1),( 309,   1,   1),( 310,   1,   1),( 311,   1,   1),( 312,   1,   1),( 313,   1,   1),( 314,   1,   1),( 315,   1,   1),( 316,   1,   1),( 317,   1,   1),( 318,   1,   1),( 319,   1,   1),( 320,   1,   1),( 321,   1,   1),( 322,   1,   1),( 323,   1,   1),( 324,   1,   1),( 325,   1,   1),( 326,   1,   1),( 327,   1,   1),( 328,   1,   1),( 329,   1,   1),( 330,   1,   1),( 331,   1,   1),( 332,   1,   1),( 333,   1,   1),( 334,   1,   1),( 335,   1,   1),( 336,   1,   1),( 337,   1,   1),( 338,   1,   1),( 339,   1,   1),( 340,   1,   1),( 341,   1,   1),( 342,   1,   1),( 343,   1,   1),( 344,   1,   1),( 345,   1,   1),( 346,   1,   1),( 347,   1,   1),( 348,   1,   1),( 349,   1,   1),( 350,   1,   1),( 351,   1,   1),( 352,   1,   1),( 353,   1,   1),( 354,   1,   1),( 355,   1,   1),( 356,   1,   1),( 357,   1,   1),( 358,   1,   1),( 359,   1,   1),( 360,   1,   1),( 361,   1,   1),( 362,   1,   1),( 363,   1,   1),( 364,   1,   1),( 365,   1,   1),( 366,   1,   1),( 367,   1,   1),( 368,   1,   1),( 369,   1,   1),( 370,   1,   1),( 371,   1,   1),( 372,   1,   1),( 373,   1,   1),( 374,   1,   1),( 375,   1,   1),( 376,   1,   1),( 377,   1,   1),( 378,   1,   1),( 379,   1,   1),( 380,   1,   1),( 381,   1,   1),( 382,   1,   1),( 383,   1,   1),( 384,   1,   1),( 385,   1,   1),( 386,   1,   1),( 387,   1,   1),( 388,   1,   1),( 389,   1,   1),( 390,   1,   1),( 391,   1,   1),( 392,   1,   1),( 393,   1,   1),( 394,   1,   1),( 395,   1,   1),( 396,   1,   1),( 397,   1,   1),( 398,   1,   1),( 399,   1,   1),( 400,   1,   1),( 401,   1,   1),( 402,   1,   1),( 403,   1,   1),( 404,   1,   1),( 405,   1,   1),( 406,   1,   1),( 407,   1,   1),( 408,   1,   1),( 409,   1,   1),( 410,   1,   1),( 411,   1,   1),( 412,   1,   1),( 413,   1,   1),( 414,   1,   1),( 415,   1,   1),( 416,   1,   1),( 417,   1,   1),( 418,   1,   1),( 419,   1,   1),( 420,   1,   1),( 421,   1,   1),( 422,   1,   1),( 423,   1,   1),( 424,   1,   1),( 425,   1,   1),( 426,   1,   1),( 427,   1,   1),( 428,   1,   1),( 429,   1,   1),( 430,   1,   1),( 431,   1,   1),( 432,   1,   1),( 433,   1,   1),( 434,   1,   1),( 435,   1,   1),( 436,   1,   1),( 437,   1,   1),( 438,   1,   1),( 439,   1,   1),( 440,   1,   1),( 441,   1,   1),( 442,   1,   1),( 443,   1,   1),( 444,   1,   1),( 445,   1,   1),( 446,   1,   1),( 447,   1,   1),( 448,   1,   1),( 449,   1,   1),( 450,   1,   1),( 451,   1,   1),( 452,   1,   1),( 453,   1,   1),( 454,   1,   1),( 455,   1,   1),( 456,   1,   1),( 457,   1,   1),( 458,   1,   1),( 459,   1,   1),( 460,   1,   1),( 461,   1,   1),( 462,   1,   1),( 463,   1,   1),( 464,   1,   1),( 465,   1,   1),( 466,   1,   1),( 467,   1,   1),( 468,   1,   1),( 469,   1,   1),( 470,   1,   1),( 471,   1,   1),( 472,   1,   1),( 473,   1,   1),( 474,   1,   1),( 475,   1,   1),( 476,   1,   1),( 477,   1,   1),( 478,   1,   1),( 479,   1,   1),( 480,   1,   1),( 481,   1,   1),( 482,   1,   1),( 483,   1,   1),( 484,   1,   1),( 485,   1,   1),( 486,   1,   1),( 487,   1,   1),( 488,   1,   1),( 489,   1,   1),( 490,   1,   1),( 491,   1,   1),( 492,   1,   1),( 493,   1,   1),( 494,   1,   1),( 495,   1,   1),( 496,   1,   1),( 497,   1,   1),( 498,   1,   1),( 499,   1,   1),( 500,   1,   1),( 501,   1,   1),( 502,   1,   1),( 503,   1,   1),( 504,   1,   1),( 505,   1,   1),( 506,   1,   1),( 507,   1,   1),( 508,   1,   1),( 509,   1,   1),( 510,   1,   1),( 511,   1,   1),( 512,   1,   1),( 513,   1,   1),( 514,   1,   1),( 515,   1,   1),( 516,   1,   1),( 517,   1,   1),( 518,   1,   1),( 519,   1,   1),( 520,   1,   1),( 521,   1,   1),( 522,   1,   1),( 523,   1,   1),( 524,   1,   1),( 525,   1,   1),( 526,   1,   1),( 527,   1,   1),( 528,   1,   1),( 529,   1,   1),( 530,   1,   1),( 531,   1,   1),( 532,   1,   1),( 533,   1,   1),( 534,   1,   1),( 535,   1,   1),( 536,   1,   1),( 537,   1,   1),( 538,   1,   1),( 539,   1,   1),( 540,   1,   1),( 541,   1,   1),( 542,   1,   1),( 543,   1,   1),( 544,   1,   1),( 545,   1,   1),( 546,   1,   1),( 547,   1,   1),( 548,   1,   1),( 549,   1,   1),( 550,   1,   1),( 551,   1,   1),( 552,   1,   1),( 553,   1,   1),( 554,   1,   1),( 555,   1,   1),( 556,   1,   1),( 557,   1,   1),( 558,   1,   1),( 559,   1,   1),( 560,   1,   1),( 561,   1,   1),( 562,   1,   1),( 563,   1,   1),( 564,   1,   1),( 565,   1,   1),( 566,   1,   1),( 567,   1,   1),( 568,   1,   1),( 569,   1,   1),( 570,   1,   1),( 571,   1,   1),( 572,   1,   1),( 573,   1,   1),( 574,   1,   1),( 575,   1,   1),( 576,   1,   1),( 577,   1,   1),( 578,   1,   1),( 579,   1,   1),( 580,   1,   1),( 581,   1,   1),( 582,   1,   1),( 583,   1,   1),( 584,   1,   1),( 585,   1,   1),( 586,   1,   1),( 587,   1,   1),( 588,   1,   1),( 589,   1,   1),( 590,   1,   1),( 591,   1,   1),( 592,   1,   1),( 593,   1,   1),( 594,   1,   1),( 595,   1,   1),( 596,   1,   1),( 597,   1,   1),( 598,   1,   1),( 599,   1,   1),( 600,   1,   1),( 601,   1,   1),( 602,   1,   1),( 603,   1,   1),( 604,   1,   1),( 605,   1,   1),( 606,   1,   1),( 607,   1,   1),( 608,   1,   1),( 609,   1,   1),( 610,   1,   1),( 611,   1,   1),( 612,   1,   1),( 613,   1,   1),( 614,   1,   1),( 615,   1,   1),( 616,   1,   1),( 617,   1,   1),( 618,   1,   1),( 619,   1,   1),( 620,   1,   1),( 621,   1,   1),( 622,   1,   1),( 623,   1,   1),( 624,   1,   1),( 625,   1,   1),( 626,   1,   1),( 627,   1,   1),( 628,   1,   1),( 629,   1,   1),( 630,   1,   1),( 631,   1,   1),( 632,   1,   1),( 633,   1,   1),( 634,   1,   1),( 635,   1,   1),( 636,   1,   1),( 637,   1,   1),( 638,   1,   1),( 639,   1,   1),( 640,   1,   1),( 641,   1,   1),( 642,   1,   1),( 643,   1,   1),( 644,   1,   1),( 645,   1,   1),( 646,   1,   1),( 647,   1,   1),( 648,   1,   1),( 649,   1,   1),( 650,   1,   1),( 651,   1,   1),( 652,   1,   1),( 653,   1,   1),( 654,   1,   1),( 655,   1,   1),( 656,   1,   1),( 657,   1,   1),( 658,   1,   1),( 659,   1,   1),( 660,   1,   1),( 661,   1,   1),( 662,   1,   1),( 663,   1,   1),( 664,   1,   1),( 665,   1,   1),( 666,   1,   1),( 667,   1,   1),( 668,   1,   1),( 669,   1,   1),( 670,   1,   1),( 671,   1,   1),( 672,   1,   1),( 673,   1,   1),( 674,   1,   1),( 675,   1,   1),( 676,   1,   1),( 677,   1,   1),( 678,   1,   1),( 679,   1,   1),( 680,   1,   1),( 681,   1,   1),( 682,   1,   1),( 683,   1,   1),( 684,   1,   1),( 685,   1,   1),( 686,   1,   1),( 687,   1,   1),( 688,   1,   1),( 689,   1,   1),( 690,   1,   1),( 691,   1,   1),( 692,   1,   1),( 693,   1,   1),( 694,   1,   1),( 695,   1,   1),( 696,   1,   1),( 697,   1,   1),( 698,   1,   1),( 699,   1,   1),( 700,   1,   1),( 701,   1,   1),( 702,   1,   1),( 703,   1,   1),( 704,   1,   1),( 705,   1,   1),( 706,   1,   1),( 707,   1,   1),( 708,   1,   1),( 709,   1,   1),( 710,   1,   1),( 711,   1,   1),( 712,   1,   1),( 713,   1,   1),( 714,   1,   1),( 715,   1,   1),( 716,   1,   1),( 717,   1,   1),( 718,   1,   1),( 719,   1,   1),( 720,   1,   1),( 721,   1,   1),( 722,   1,   1),( 723,   1,   1),( 724,   1,   1),( 725,   1,   1),( 726,   1,   1),( 727,   1,   1),( 728,   1,   1),( 729,   1,   1),( 730,   1,   1),( 731,   1,   1),( 732,   1,   1),( 733,   1,   1),( 734,   1,   1),( 735,   1,   1),( 736,   1,   1),( 737,   1,   1),( 738,   1,   1),( 739,   1,   1),( 740,   1,   1),( 741,   1,   1),( 742,   1,   1),( 743,   1,   1),( 744,   1,   1),( 745,   1,   1),( 746,   1,   1),( 747,   1,   1),( 748,   1,   1),( 749,   1,   1),( 750,   1,   1),( 751,   1,   1),( 752,   1,   1),( 753,   1,   1),( 754,   1,   1),( 755,   1,   1),( 756,   1,   1),( 757,   1,   1),( 758,   1,   1),( 759,   1,   1),( 760,   1,   1),( 761,   1,   1),( 762,   1,   1),( 763,   1,   1),( 764,   1,   1),( 765,   1,   1),( 766,   1,   1),( 767,   1,   1),( 768,   1,   1),( 769,   1,   1),( 770,   1,   1),( 771,   1,   1),( 772,   1,   1),( 773,   1,   1),( 774,   1,   1),( 775,   1,   1),( 776,   1,   1),( 777,   1,   1),( 778,   1,   1),( 779,   1,   1),( 780,   1,   1),( 781,   1,   1),( 782,   1,   1),( 783,   1,   1),( 784,   1,   1),( 785,   1,   1),( 786,   1,   1),( 787,   1,   1),( 788,   1,   1),( 789,   1,   1),( 790,   1,   1),( 791,   1,   1),( 792,   1,   1),( 793,   1,   1),( 794,   1,   1),( 795,   1,   1),( 796,   1,   1),( 797,   1,   1),( 798,   1,   1),( 799,   1,   1),( 800,   1,   1),( 801,   1,   1),( 802,   1,   1),( 803,   1,   1),( 804,   1,   1),( 805,   1,   1),( 806,   1,   1),( 807,   1,   1),( 808,   1,   1),( 809,   1,   1),( 810,   1,   1),( 811,   1,   1),( 812,   1,   1),( 813,   1,   1),( 814,   1,   1),( 815,   1,   1),( 816,   1,   1),( 817,   1,   1),( 818,   1,   1),( 819,   1,   1),( 820,   1,   1),( 821,   1,   1),( 822,   1,   1),( 823,   1,   1),( 824,   1,   1),( 825,   1,   1),( 826,   1,   1),( 827,   1,   1),( 828,   1,   1),( 829,   1,   1),( 830,   1,   1),( 831,   1,   1),( 832,   1,   1),( 833,   1,   1),( 834,   1,   1),( 835,   1,   1),( 836,   1,   1),( 837,   1,   1),( 838,   1,   1),( 839,   1,   1),( 840,   1,   1),( 841,   1,   1),( 842,   1,   1),( 843,   1,   1),( 844,   1,   1),( 845,   1,   1),( 846,   1,   1),( 847,   1,   1),( 848,   1,   1),( 849,   1,   1),( 850,   1,   1),( 851,   1,   1),( 852,   1,   1),( 853,   1,   1),( 854,   1,   1),( 855,   1,   1),( 856,   1,   1),( 857,   1,   1),( 858,   1,   1),( 859,   1,   1),( 860,   1,   1),( 861,   1,   1),( 862,   1,   1),( 863,   1,   1),( 864,   1,   1),( 865,   1,   1),( 866,   1,   1),( 867,   1,   1),( 868,   1,   1),( 869,   1,   1),( 870,   1,   1),( 871,   1,   1),( 897,   4,   1)}
Min Cost = 276.62 log2(gate), Memory Cost = 194.78 log(bit)
EnumBS cost:1.4e+03s.
============= Dilithium-I
Generate gs-lengths by GSA assumption...enumbs min_G_prec = 0.1
 Attack Estimation via simulation + probabilistic model (EnumBS in parallel)
beta_start= 50, gap = 1, J = 20, J_gap = 1, cost_model = 1, max_loop = 1, threads = 4, G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = 1, Find minimal time cost strategy, average_case, theo_pnjbkz_d4f = 2, theo_pump_d4f = 2.
  index:        2, ( 394,   1): ( 395,  20) --> (1499,   1), goal index:      328, cost = index:        3, ( 395,   1): ( 396,  20) --> (1499,   1), goal index:       75, cost = index:        4, ( 396,   1): ( 397,  20) --> (1499,   1), goal index:       73, cost = index:        5, ( 397,   1): ( 398,  20) --> (1499,   1), goal index:       71, cost = index:        6, ( 398,   1): ( 399,  20) --> (1499,   1), goal index:       69, cost = index:        7, ( 399,   1): ( 400,  20) --> (1499,   1), goal index:       68, cost = index:        8, ( 400,   1): ( 401,  20) --> (1499,   1), goal index:       66, cost = index:        9, ( 401,   1): ( 402,  20) --> (1499,   1), goal index:       65, cost = index:       10, ( 402,   1): ( 403,  20) --> (1499,   1), goal index:       64, cost = index:       11, ( 403,   1): ( 404,  20) --> (1499,   1), goal index:       62, cost = index:       12, ( 404,   1): ( 405,  20) --> (1499,   1), goal index:       60, cost = index:       13, ( 405,   1): ( 406,  20) --> (1499,   1), goal index:       58, cost = index:       14, ( 406,   1): ( 407,  20) --> (1499,   1), goal index:       56, cost = index:       15, ( 407,   1): ( 408,  20) --> (1499,   1), goal index:       55, cost = index:       16, ( 408,   1): ( 409,  20) --> (1499,   1), goal index:       54, cost = index:       17, ( 409,   1): ( 410,  20) --> (1499,   1), goal index:       52, cost = index:       18, ( 410,   1): ( 411,  20) --> (1499,   1), goal index:       51, cost = index:       19, ( 411,   1): ( 412,  20) --> (1499,   1), goal index:       50, cost = index:       20, ( 412,   1): ( 413,  20) --> (1499,   1), goal index:       50, cost = index:       21, ( 413,   1): ( 414,  20) --> (1499,   1), goal index:       50, cost = index:       22, ( 414,   1): ( 415,  20) --> (1499,   1), goal index:       51, cost = index:       23, ( 415,   1): ( 416,  20) --> (1499,   1), goal index:       51, cost = index:       24, ( 416,   1): ( 417,  20) --> (1499,   1), goal index:       51, cost = index:       25, ( 417,   1): ( 418,  20) --> (1499,   1), goal index:       52, cost = index:       26, ( 418,   1): ( 419,  20) --> (1499,   1), goal index:       52, cost = index:       27, ( 419,   1): ( 420,  20) --> (1499,   1), goal index:       52, cost = index:       28, ( 420,   1): ( 421,  20) --> (1499,   1), goal index:       54, cost = index:       29, ( 421,   1): ( 422,  20) --> (1499,   1), goal index:       55, cost = index:       30, ( 422,   1): ( 423,  20) --> (1499,   1), goal index:       57, cost = index:       31, ( 423,   1): ( 424,  20) --> (1499,   1), goal index:       58, cost = index:       32, ( 424,   1): ( 425,  20) --> (1499,   1), goal index:       58, cost = index:       33, ( 425,   1): ( 426,  20) --> (1499,   1), goal index:       56, cost = index:       34, ( 426,   1): ( 427,  20) --> (1499,   1), goal index:       56, cost = index:       35, ( 427,   1): ( 428,  20) --> (1499,   1), goal index:       56, cost = index:       36, ( 428,   1): ( 429,  20) --> (1499,   1), goal index:       56, cost = index:       37, ( 429,   1): ( 430,  20) --> (1499,   1), goal index:       56, cost = index:       38, ( 443,   4): ( 443,   3) --> (1499,   1), goal index:       56, cost = index:       39, ( 442,   3): ( 442,   2) --> (1499,   1), goal index:       56, cost = index:       40, ( 443,   4): ( 443,   3) --> (1499,   1), goal index:       56, cost = index:       41, ( 443,   3): ( 443,   2) --> (1499,   1), goal index:       56, cost = index:       42, ( 444,   4): ( 444,   3) --> (1499,   1), goal index:       56, cost = index:       43, ( 446,   3): ( 446,   2) --> (1499,   1), goal index:       56, cost = index:       44, ( 449,   4): ( 449,   3) --> (1499,   1), goal index:       56, cost = index:       45, ( 456,   4): ( 456,   3) --> (1499,   1), goal index:       56, cost = index:       46, ( 459,   4): ( 459,   3) --> (1499,   1), goal index:       56, cost = index:       47, ( 464,   4): ( 464,   3) --> (1499,   1), goal index:       56, cost =
Find the optimal Strategy through EumBS!!
bs = (slope = -1.543391e-02, G_BKZ = 1.462207e+02 gate, B_BKZ = 9.160346e+01 bit cum-pr = 2.582553e-02, pump-{1576,473,35}, G_dsvp = 1.468129e+02 gate, B_dsvp = 1.026515e+02 bit, G = 1.475470e+02 gate, B = 1.026515e+02 bit, min_GB.first = 1.475470e+02 gate)
S(beta,jump,tours):{(  50,   1,   1),(  51,   1,   1),(  52,   1,   1),(  53,   1,   1),(  54,   1,   1),(  55,   1,   1),(  56,   1,   1),(  57,   1,   1),(  58,   1,   1),(  59,   1,   1),(  60,   1,   1),(  61,   1,   1),(  62,   1,   1),(  63,   1,   1),(  64,   1,   1),(  65,   1,   1),(  66,   1,   1),(  67,   1,   1),(  68,   1,   1),(  69,   1,   1),(  70,   1,   1),(  71,   1,   1),(  72,   1,   1),(  73,   1,   1),(  74,   1,   1),(  75,   1,   1),(  76,   1,   1),(  77,   1,   1),(  78,   1,   1),(  79,   1,   1),(  80,   1,   1),(  81,   1,   1),(  82,   1,   1),(  83,   1,   1),(  84,   1,   1),(  85,   1,   1),(  86,   1,   1),(  87,   1,   1),(  88,   1,   1),(  89,   1,   1),(  90,   1,   1),(  91,   1,   1),(  92,   1,   1),(  93,   1,   1),(  94,   1,   1),(  95,   1,   1),(  96,   1,   1),(  97,   1,   1),(  98,   1,   1),(  99,   1,   1),( 100,   1,   1),( 101,   1,   1),( 102,   1,   1),( 103,   1,   1),( 104,   1,   1),( 105,   1,   1),( 106,   1,   1),( 107,   1,   1),( 108,   1,   1),( 109,   1,   1),( 110,   1,   1),( 111,   1,   1),( 112,   1,   1),( 113,   1,   1),( 114,   1,   1),( 115,   1,   1),( 116,   1,   1),( 117,   1,   1),( 118,   1,   1),( 119,   1,   1),( 120,   1,   1),( 121,   1,   1),( 122,   1,   1),( 123,   1,   1),( 124,   1,   1),( 125,   1,   1),( 126,   1,   1),( 127,   1,   1),( 128,   1,   1),( 129,   1,   1),( 130,   1,   1),( 131,   1,   1),( 132,   1,   1),( 133,   1,   1),( 134,   1,   1),( 135,   1,   1),( 136,   1,   1),( 137,   1,   1),( 138,   1,   1),( 139,   1,   1),( 140,   1,   1),( 141,   1,   1),( 142,   1,   1),( 143,   1,   1),( 144,   1,   1),( 145,   1,   1),( 146,   1,   1),( 147,   1,   1),( 148,   1,   1),( 149,   1,   1),( 150,   1,   1),( 151,   1,   1),( 152,   1,   1),( 153,   1,   1),( 154,   1,   1),( 155,   1,   1),( 156,   1,   1),( 157,   1,   1),( 158,   1,   1),( 159,   1,   1),( 160,   1,   1),( 161,   1,   1),( 162,   1,   1),( 163,   1,   1),( 164,   1,   1),( 165,   1,   1),( 166,   1,   1),( 167,   1,   1),( 168,   1,   1),( 169,   1,   1),( 170,   1,   1),( 171,   1,   1),( 172,   1,   1),( 173,   1,   1),( 174,   1,   1),( 175,   1,   1),( 176,   1,   1),( 177,   1,   1),( 178,   1,   1),( 179,   1,   1),( 180,   1,   1),( 181,   1,   1),( 182,   1,   1),( 183,   1,   1),( 184,   1,   1),( 185,   1,   1),( 186,   1,   1),( 187,   1,   1),( 188,   1,   1),( 189,   1,   1),( 190,   1,   1),( 191,   1,   1),( 192,   1,   1),( 193,   1,   1),( 194,   1,   1),( 195,   1,   1),( 196,   1,   1),( 197,   1,   1),( 198,   1,   1),( 199,   1,   1),( 200,   1,   1),( 201,   1,   1),( 202,   1,   1),( 203,   1,   1),( 204,   1,   1),( 205,   1,   1),( 206,   1,   1),( 207,   1,   1),( 208,   1,   1),( 209,   1,   1),( 210,   1,   1),( 211,   1,   1),( 212,   1,   1),( 213,   1,   1),( 214,   1,   1),( 215,   1,   1),( 216,   1,   1),( 217,   1,   1),( 218,   1,   1),( 219,   1,   1),( 220,   1,   1),( 221,   1,   1),( 222,   1,   1),( 223,   1,   1),( 224,   1,   1),( 225,   1,   1),( 226,   1,   1),( 227,   1,   1),( 228,   1,   1),( 229,   1,   1),( 230,   1,   1),( 231,   1,   1),( 232,   1,   1),( 233,   1,   1),( 234,   1,   1),( 235,   1,   1),( 236,   1,   1),( 237,   1,   1),( 238,   1,   1),( 239,   1,   1),( 240,   1,   1),( 241,   1,   1),( 242,   1,   1),( 243,   1,   1),( 244,   1,   1),( 245,   1,   1),( 246,   1,   1),( 247,   1,   1),( 248,   1,   1),( 249,   1,   1),( 250,   1,   1),( 251,   1,   1),( 252,   1,   1),( 253,   1,   1),( 254,   1,   1),( 255,   1,   1),( 256,   1,   1),( 257,   1,   1),( 258,   1,   1),( 259,   1,   1),( 260,   1,   1),( 261,   1,   1),( 262,   1,   1),( 263,   1,   1),( 264,   1,   1),( 265,   1,   1),( 266,   1,   1),( 267,   1,   1),( 268,   1,   1),( 269,   1,   1),( 270,   1,   1),( 271,   1,   1),( 272,   1,   1),( 273,   1,   1),( 274,   1,   1),( 275,   1,   1),( 276,   1,   1),( 277,   1,   1),( 278,   1,   1),( 279,   1,   1),( 280,   1,   1),( 281,   1,   1),( 282,   1,   1),( 283,   1,   1),( 284,   1,   1),( 285,   1,   1),( 286,   1,   1),( 287,   1,   1),( 288,   1,   1),( 289,   1,   1),( 290,   1,   1),( 291,   1,   1),( 292,   1,   1),( 293,   1,   1),( 294,   1,   1),( 295,   1,   1),( 296,   1,   1),( 297,   1,   1),( 298,   1,   1),( 299,   1,   1),( 300,   1,   1),( 301,   1,   1),( 302,   1,   1),( 303,   1,   1),( 304,   1,   1),( 305,   1,   1),( 306,   1,   1),( 307,   1,   1),( 308,   1,   1),( 309,   1,   1),( 310,   1,   1),( 311,   1,   1),( 312,   1,   1),( 313,   1,   1),( 314,   1,   1),( 315,   1,   1),( 316,   1,   1),( 317,   1,   1),( 318,   1,   1),( 319,   1,   1),( 320,   1,   1),( 321,   1,   1),( 322,   1,   1),( 323,   1,   1),( 324,   1,   1),( 325,   1,   1),( 326,   1,   1),( 327,   1,   1),( 328,   1,   1),( 329,   1,   1),( 330,   1,   1),( 331,   1,   1),( 332,   1,   1),( 333,   1,   1),( 334,   1,   1),( 335,   1,   1),( 336,   1,   1),( 337,   1,   1),( 338,   1,   1),( 339,   1,   1),( 340,   1,   1),( 341,   1,   1),( 342,   1,   1),( 343,   1,   1),( 344,   1,   1),( 345,   1,   1),( 346,   1,   1),( 347,   1,   1),( 348,   1,   1),( 349,   1,   1),( 350,   1,   1),( 351,   1,   1),( 352,   1,   1),( 353,   1,   1),( 354,   1,   1),( 355,   1,   1),( 356,   1,   1),( 357,   1,   1),( 358,   1,   1),( 359,   1,   1),( 360,   1,   1),( 361,   1,   1),( 362,   1,   1),( 363,   1,   1),( 364,   1,   1),( 365,   1,   1),( 366,   1,   1),( 367,   1,   1),( 368,   1,   1),( 369,   1,   1),( 370,   1,   1),( 371,   1,   1),( 372,   1,   1),( 373,   1,   1),( 374,   1,   1),( 375,   1,   1),( 376,   1,   1),( 377,   1,   1),( 378,   1,   1),( 379,   1,   1),( 380,   1,   1),( 381,   1,   1),( 382,   1,   1),( 383,   1,   1),( 384,   1,   1),( 385,   1,   1),( 386,   1,   1),( 387,   1,   1),( 388,   1,   1),( 389,   1,   1),( 390,   1,   1),( 391,   1,   1),( 392,   1,   1),( 393,   1,   1),( 394,   1,   1),( 395,   1,   1),( 396,   1,   1),( 397,   1,   1),( 398,   1,   1),( 399,   1,   1),( 400,   1,   1),( 401,   1,   1),( 402,   1,   1),( 403,   1,   1),( 404,   1,   1),( 405,   1,   1),( 406,   1,   1),( 407,   1,   1),( 408,   1,   1),( 409,   1,   1),( 410,   1,   1),( 411,   1,   1),( 412,   1,   1),( 413,   1,   1),( 414,   1,   1),( 415,   1,   1),( 416,   1,   1),( 417,   1,   1),( 418,   1,   1),( 419,   1,   1),( 420,   1,   1),( 421,   1,   1),( 422,   1,   1),( 423,   1,   1),( 424,   1,   1),( 425,   1,   1),( 426,   1,   1),( 427,   1,   1),( 428,   1,   1),( 429,   1,   1)}
Min Cost = 147.55 log2(gate), Memory Cost = 102.65 log(bit)
EnumBS cost:3.1e+02s.
============= Dilithium-II
Generate gs-lengths by GSA assumption...enumbs min_G_prec = 0.1
 Attack Estimation via simulation + probabilistic model (EnumBS in parallel)
beta_start= 50, gap = 1, J = 20, J_gap = 1, cost_model = 1, max_loop = 1, threads = 4, G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = 1, Find minimal time cost strategy, average_case, theo_pnjbkz_d4f = 2, theo_pump_d4f = 2.
  index:        2, ( 583,   1): ( 584,  20) --> (1499,   1), goal index:       52, cost = index:        3, ( 584,   1): ( 585,  20) --> (1499,   1), goal index:       98, cost = index:        4, ( 585,   1): ( 586,  20) --> (1499,   1), goal index:       98, cost = index:        5, ( 586,   1): ( 587,  20) --> (1499,   1), goal index:       96, cost = index:        6, ( 587,   1): ( 588,  20) --> (1499,   1), goal index:       94, cost = index:        7, ( 588,   1): ( 589,  20) --> (1499,   1), goal index:       92, cost = index:        8, ( 589,   1): ( 590,  20) --> (1499,   1), goal index:       91, cost = index:        9, ( 590,   1): ( 591,  20) --> (1499,   1), goal index:       90, cost = index:       10, ( 591,   1): ( 592,  20) --> (1499,   1), goal index:       89, cost = index:       11, ( 592,   1): ( 593,  20) --> (1499,   1), goal index:       87, cost = index:       12, ( 593,   1): ( 594,  20) --> (1499,   1), goal index:       87, cost = index:       13, ( 594,   1): ( 595,  20) --> (1499,   1), goal index:       85, cost = index:       14, ( 595,   1): ( 596,  20) --> (1499,   1), goal index:       83, cost = index:       15, ( 596,   1): ( 597,  20) --> (1499,   1), goal index:       81, cost = index:       16, ( 597,   1): ( 598,  20) --> (1499,   1), goal index:       80, cost = index:       17, ( 598,   1): ( 599,  20) --> (1499,   1), goal index:       79, cost = index:       18, ( 599,   1): ( 600,  20) --> (1499,   1), goal index:       77, cost = index:       19, ( 600,   1): ( 601,  20) --> (1499,   1), goal index:       76, cost = index:       20, ( 601,   1): ( 602,  20) --> (1499,   1), goal index:       76, cost = index:       21, ( 602,   1): ( 603,  20) --> (1499,   1), goal index:       73, cost = index:       22, ( 603,   1): ( 604,  20) --> (1499,   1), goal index:       72, cost = index:       23, ( 604,   1): ( 605,  20) --> (1499,   1), goal index:       71, cost = index:       24, ( 605,   1): ( 606,  20) --> (1499,   1), goal index:       69, cost = index:       25, ( 606,   1): ( 607,  20) --> (1499,   1), goal index:       68, cost = index:       26, ( 607,   1): ( 608,  20) --> (1499,   1), goal index:       68, cost = index:       27, ( 608,   1): ( 609,  20) --> (1499,   1), goal index:       68, cost = index:       28, ( 609,   1): ( 610,  20) --> (1499,   1), goal index:       68, cost = index:       29, ( 610,   1): ( 611,  20) --> (1499,   1), goal index:       68, cost = index:       30, ( 611,   1): ( 612,  20) --> (1499,   1), goal index:       66, cost = index:       31, ( 612,   1): ( 613,  20) --> (1499,   1), goal index:       66, cost = index:       32, ( 613,   1): ( 614,  20) --> (1499,   1), goal index:       66, cost = index:       33, ( 614,   1): ( 615,  20) --> (1499,   1), goal index:       65, cost = index:       34, ( 615,   1): ( 616,  20) --> (1499,   1), goal index:       65, cost = index:       35, ( 616,   1): ( 617,  20) --> (1499,   1), goal index:       65, cost = index:       36, ( 617,   1): ( 618,  20) --> (1499,   1), goal index:       66, cost = index:       37, ( 618,   1): ( 619,  20) --> (1499,   1), goal index:       67, cost = index:       38, ( 619,   1): ( 620,  20) --> (1499,   1), goal index:       68, cost = index:       39, ( 620,   1): ( 621,  20) --> (1499,   1), goal index:       68, cost = index:       40, ( 621,   1): ( 622,  20) --> (1499,   1), goal index:       70, cost = index:       41, ( 622,   1): ( 623,  20) --> (1499,   1), goal index:       72, cost = index:       42, ( 623,   1): ( 624,  20) --> (1499,   1), goal index:       73, cost = index:       43, ( 624,   1): ( 625,  20) --> (1499,   1), goal index:       74, cost = index:       44, ( 625,   1): ( 626,  20) --> (1499,   1), goal index:       74, cost = index:       45, ( 626,   1): ( 627,  20) --> (1499,   1), goal index:       74, cost = index:       46, ( 627,   1): ( 628,  20) --> (1499,   1), goal index:       74, cost = index:       47, ( 628,   1): ( 629,  20) --> (1499,   1), goal index:       74, cost = index:       48, ( 629,   1): ( 630,  20) --> (1499,   1), goal index:       74, cost = index:       49, ( 630,   1): ( 631,  20) --> (1499,   1), goal index:       74, cost = index:       50, ( 631,   1): ( 632,  20) --> (1499,   1), goal index:       74, cost = index:       51, ( 632,   1): ( 633,  20) --> (1499,   1), goal index:       74, cost = index:       52, ( 633,   1): ( 634,  20) --> (1499,   1), goal index:       74, cost = index:       53, ( 654,   4): ( 654,   3) --> (1499,   1), goal index:       74, cost = index:       54, ( 653,   3): ( 653,   2) --> (1499,   1), goal index:       74, cost = index:       55, ( 654,   4): ( 654,   3) --> (1499,   1), goal index:       74, cost = index:       56, ( 654,   3): ( 654,   2) --> (1499,   1), goal index:       74, cost = index:       57, ( 655,   4): ( 655,   3) --> (1499,   1), goal index:       74, cost = index:       58, ( 654,   3): ( 654,   2) --> (1499,   1), goal index:       74, cost = index:       59, ( 655,   4): ( 655,   3) --> (1499,   1), goal index:       74, cost = index:       60, ( 656,   4): ( 656,   3) --> (1499,   1), goal index:       74, cost = index:       61, ( 657,   4): ( 657,   3) --> (1499,   1), goal index:       74, cost = index:       62, ( 659,   4): ( 659,   3) --> (1499,   1), goal index:       74, cost = index:       63, ( 661,   4): ( 661,   3) --> (1499,   1), goal index:       74, cost = index:       64, ( 662,   4): ( 662,   3) --> (1499,   1), goal index:       74, cost = index:       65, ( 664,   4): ( 664,   3) --> (1499,   1), goal index:       74, cost = index:       66, ( 666,   4): ( 666,   3) --> (1499,   1), goal index:       74, cost =
Find the optimal Strategy through EumBS!!
bs = (slope = -1.170885e-02, G_BKZ = 2.032423e+02 gate, B_BKZ = 1.322177e+02 bit cum-pr = 2.463936e-02, pump-{1972,682,48}, G_dsvp = 2.046795e+02 gate, B_dsvp = 1.439617e+02 bit, G = 2.051329e+02 gate, B = 1.439617e+02 bit, min_GB.first = 2.051329e+02 gate)
S(beta,jump,tours):{(  50,   1,   1),(  51,   1,   1),(  52,   1,   1),(  53,   1,   1),(  54,   1,   1),(  55,   1,   1),(  56,   1,   1),(  57,   1,   1),(  58,   1,   1),(  59,   1,   1),(  60,   1,   1),(  61,   1,   1),(  62,   1,   1),(  63,   1,   1),(  64,   1,   1),(  65,   1,   1),(  66,   1,   1),(  67,   1,   1),(  68,   1,   1),(  69,   1,   1),(  70,   1,   1),(  71,   1,   1),(  72,   1,   1),(  73,   1,   1),(  74,   1,   1),(  75,   1,   1),(  76,   1,   1),(  77,   1,   1),(  78,   1,   1),(  79,   1,   1),(  80,   1,   1),(  81,   1,   1),(  82,   1,   1),(  83,   1,   1),(  84,   1,   1),(  85,   1,   1),(  86,   1,   1),(  87,   1,   1),(  88,   1,   1),(  89,   1,   1),(  90,   1,   1),(  91,   1,   1),(  92,   1,   1),(  93,   1,   1),(  94,   1,   1),(  95,   1,   1),(  96,   1,   1),(  97,   1,   1),(  98,   1,   1),(  99,   1,   1),( 100,   1,   1),( 101,   1,   1),( 102,   1,   1),( 103,   1,   1),( 104,   1,   1),( 105,   1,   1),( 106,   1,   1),( 107,   1,   1),( 108,   1,   1),( 109,   1,   1),( 110,   1,   1),( 111,   1,   1),( 112,   1,   1),( 113,   1,   1),( 114,   1,   1),( 115,   1,   1),( 116,   1,   1),( 117,   1,   1),( 118,   1,   1),( 119,   1,   1),( 120,   1,   1),( 121,   1,   1),( 122,   1,   1),( 123,   1,   1),( 124,   1,   1),( 125,   1,   1),( 126,   1,   1),( 127,   1,   1),( 128,   1,   1),( 129,   1,   1),( 130,   1,   1),( 131,   1,   1),( 132,   1,   1),( 133,   1,   1),( 134,   1,   1),( 135,   1,   1),( 136,   1,   1),( 137,   1,   1),( 138,   1,   1),( 139,   1,   1),( 140,   1,   1),( 141,   1,   1),( 142,   1,   1),( 143,   1,   1),( 144,   1,   1),( 145,   1,   1),( 146,   1,   1),( 147,   1,   1),( 148,   1,   1),( 149,   1,   1),( 150,   1,   1),( 151,   1,   1),( 152,   1,   1),( 153,   1,   1),( 154,   1,   1),( 155,   1,   1),( 156,   1,   1),( 157,   1,   1),( 158,   1,   1),( 159,   1,   1),( 160,   1,   1),( 161,   1,   1),( 162,   1,   1),( 163,   1,   1),( 164,   1,   1),( 165,   1,   1),( 166,   1,   1),( 167,   1,   1),( 168,   1,   1),( 169,   1,   1),( 170,   1,   1),( 171,   1,   1),( 172,   1,   1),( 173,   1,   1),( 174,   1,   1),( 175,   1,   1),( 176,   1,   1),( 177,   1,   1),( 178,   1,   1),( 179,   1,   1),( 180,   1,   1),( 181,   1,   1),( 182,   1,   1),( 183,   1,   1),( 184,   1,   1),( 185,   1,   1),( 186,   1,   1),( 187,   1,   1),( 188,   1,   1),( 189,   1,   1),( 190,   1,   1),( 191,   1,   1),( 192,   1,   1),( 193,   1,   1),( 194,   1,   1),( 195,   1,   1),( 196,   1,   1),( 197,   1,   1),( 198,   1,   1),( 199,   1,   1),( 200,   1,   1),( 201,   1,   1),( 202,   1,   1),( 203,   1,   1),( 204,   1,   1),( 205,   1,   1),( 206,   1,   1),( 207,   1,   1),( 208,   1,   1),( 209,   1,   1),( 210,   1,   1),( 211,   1,   1),( 212,   1,   1),( 213,   1,   1),( 214,   1,   1),( 215,   1,   1),( 216,   1,   1),( 217,   1,   1),( 218,   1,   1),( 219,   1,   1),( 220,   1,   1),( 221,   1,   1),( 222,   1,   1),( 223,   1,   1),( 224,   1,   1),( 225,   1,   1),( 226,   1,   1),( 227,   1,   1),( 228,   1,   1),( 229,   1,   1),( 230,   1,   1),( 231,   1,   1),( 232,   1,   1),( 233,   1,   1),( 234,   1,   1),( 235,   1,   1),( 236,   1,   1),( 237,   1,   1),( 238,   1,   1),( 239,   1,   1),( 240,   1,   1),( 241,   1,   1),( 242,   1,   1),( 243,   1,   1),( 244,   1,   1),( 245,   1,   1),( 246,   1,   1),( 247,   1,   1),( 248,   1,   1),( 249,   1,   1),( 250,   1,   1),( 251,   1,   1),( 252,   1,   1),( 253,   1,   1),( 254,   1,   1),( 255,   1,   1),( 256,   1,   1),( 257,   1,   1),( 258,   1,   1),( 259,   1,   1),( 260,   1,   1),( 261,   1,   1),( 262,   1,   1),( 263,   1,   1),( 264,   1,   1),( 265,   1,   1),( 266,   1,   1),( 267,   1,   1),( 268,   1,   1),( 269,   1,   1),( 270,   1,   1),( 271,   1,   1),( 272,   1,   1),( 273,   1,   1),( 274,   1,   1),( 275,   1,   1),( 276,   1,   1),( 277,   1,   1),( 278,   1,   1),( 279,   1,   1),( 280,   1,   1),( 281,   1,   1),( 282,   1,   1),( 283,   1,   1),( 284,   1,   1),( 285,   1,   1),( 286,   1,   1),( 287,   1,   1),( 288,   1,   1),( 289,   1,   1),( 290,   1,   1),( 291,   1,   1),( 292,   1,   1),( 293,   1,   1),( 294,   1,   1),( 295,   1,   1),( 296,   1,   1),( 297,   1,   1),( 298,   1,   1),( 299,   1,   1),( 300,   1,   1),( 301,   1,   1),( 302,   1,   1),( 303,   1,   1),( 304,   1,   1),( 305,   1,   1),( 306,   1,   1),( 307,   1,   1),( 308,   1,   1),( 309,   1,   1),( 310,   1,   1),( 311,   1,   1),( 312,   1,   1),( 313,   1,   1),( 314,   1,   1),( 315,   1,   1),( 316,   1,   1),( 317,   1,   1),( 318,   1,   1),( 319,   1,   1),( 320,   1,   1),( 321,   1,   1),( 322,   1,   1),( 323,   1,   1),( 324,   1,   1),( 325,   1,   1),( 326,   1,   1),( 327,   1,   1),( 328,   1,   1),( 329,   1,   1),( 330,   1,   1),( 331,   1,   1),( 332,   1,   1),( 333,   1,   1),( 334,   1,   1),( 335,   1,   1),( 336,   1,   1),( 337,   1,   1),( 338,   1,   1),( 339,   1,   1),( 340,   1,   1),( 341,   1,   1),( 342,   1,   1),( 343,   1,   1),( 344,   1,   1),( 345,   1,   1),( 346,   1,   1),( 347,   1,   1),( 348,   1,   1),( 349,   1,   1),( 350,   1,   1),( 351,   1,   1),( 352,   1,   1),( 353,   1,   1),( 354,   1,   1),( 355,   1,   1),( 356,   1,   1),( 357,   1,   1),( 358,   1,   1),( 359,   1,   1),( 360,   1,   1),( 361,   1,   1),( 362,   1,   1),( 363,   1,   1),( 364,   1,   1),( 365,   1,   1),( 366,   1,   1),( 367,   1,   1),( 368,   1,   1),( 369,   1,   1),( 370,   1,   1),( 371,   1,   1),( 372,   1,   1),( 373,   1,   1),( 374,   1,   1),( 375,   1,   1),( 376,   1,   1),( 377,   1,   1),( 378,   1,   1),( 379,   1,   1),( 380,   1,   1),( 381,   1,   1),( 382,   1,   1),( 383,   1,   1),( 384,   1,   1),( 385,   1,   1),( 386,   1,   1),( 387,   1,   1),( 388,   1,   1),( 389,   1,   1),( 390,   1,   1),( 391,   1,   1),( 392,   1,   1),( 393,   1,   1),( 394,   1,   1),( 395,   1,   1),( 396,   1,   1),( 397,   1,   1),( 398,   1,   1),( 399,   1,   1),( 400,   1,   1),( 401,   1,   1),( 402,   1,   1),( 403,   1,   1),( 404,   1,   1),( 405,   1,   1),( 406,   1,   1),( 407,   1,   1),( 408,   1,   1),( 409,   1,   1),( 410,   1,   1),( 411,   1,   1),( 412,   1,   1),( 413,   1,   1),( 414,   1,   1),( 415,   1,   1),( 416,   1,   1),( 417,   1,   1),( 418,   1,   1),( 419,   1,   1),( 420,   1,   1),( 421,   1,   1),( 422,   1,   1),( 423,   1,   1),( 424,   1,   1),( 425,   1,   1),( 426,   1,   1),( 427,   1,   1),( 428,   1,   1),( 429,   1,   1),( 430,   1,   1),( 431,   1,   1),( 432,   1,   1),( 433,   1,   1),( 434,   1,   1),( 435,   1,   1),( 436,   1,   1),( 437,   1,   1),( 438,   1,   1),( 439,   1,   1),( 440,   1,   1),( 441,   1,   1),( 442,   1,   1),( 443,   1,   1),( 444,   1,   1),( 445,   1,   1),( 446,   1,   1),( 447,   1,   1),( 448,   1,   1),( 449,   1,   1),( 450,   1,   1),( 451,   1,   1),( 452,   1,   1),( 453,   1,   1),( 454,   1,   1),( 455,   1,   1),( 456,   1,   1),( 457,   1,   1),( 458,   1,   1),( 459,   1,   1),( 460,   1,   1),( 461,   1,   1),( 462,   1,   1),( 463,   1,   1),( 464,   1,   1),( 465,   1,   1),( 466,   1,   1),( 467,   1,   1),( 468,   1,   1),( 469,   1,   1),( 470,   1,   1),( 471,   1,   1),( 472,   1,   1),( 473,   1,   1),( 474,   1,   1),( 475,   1,   1),( 476,   1,   1),( 477,   1,   1),( 478,   1,   1),( 479,   1,   1),( 480,   1,   1),( 481,   1,   1),( 482,   1,   1),( 483,   1,   1),( 484,   1,   1),( 485,   1,   1),( 486,   1,   1),( 487,   1,   1),( 488,   1,   1),( 489,   1,   1),( 490,   1,   1),( 491,   1,   1),( 492,   1,   1),( 493,   1,   1),( 494,   1,   1),( 495,   1,   1),( 496,   1,   1),( 497,   1,   1),( 498,   1,   1),( 499,   1,   1),( 500,   1,   1),( 501,   1,   1),( 502,   1,   1),( 503,   1,   1),( 504,   1,   1),( 505,   1,   1),( 506,   1,   1),( 507,   1,   1),( 508,   1,   1),( 509,   1,   1),( 510,   1,   1),( 511,   1,   1),( 512,   1,   1),( 513,   1,   1),( 514,   1,   1),( 515,   1,   1),( 516,   1,   1),( 517,   1,   1),( 518,   1,   1),( 519,   1,   1),( 520,   1,   1),( 521,   1,   1),( 522,   1,   1),( 523,   1,   1),( 524,   1,   1),( 525,   1,   1),( 526,   1,   1),( 527,   1,   1),( 528,   1,   1),( 529,   1,   1),( 530,   1,   1),( 531,   1,   1),( 532,   1,   1),( 533,   1,   1),( 534,   1,   1),( 535,   1,   1),( 536,   1,   1),( 537,   1,   1),( 538,   1,   1),( 539,   1,   1),( 540,   1,   1),( 541,   1,   1),( 542,   1,   1),( 543,   1,   1),( 544,   1,   1),( 545,   1,   1),( 546,   1,   1),( 547,   1,   1),( 548,   1,   1),( 549,   1,   1),( 550,   1,   1),( 551,   1,   1),( 552,   1,   1),( 553,   1,   1),( 554,   1,   1),( 555,   1,   1),( 556,   1,   1),( 557,   1,   1),( 558,   1,   1),( 559,   1,   1),( 560,   1,   1),( 561,   1,   1),( 562,   1,   1),( 563,   1,   1),( 564,   1,   1),( 565,   1,   1),( 566,   1,   1),( 567,   1,   1),( 568,   1,   1),( 569,   1,   1),( 570,   1,   1),( 571,   1,   1),( 572,   1,   1),( 573,   1,   1),( 574,   1,   1),( 575,   1,   1),( 576,   1,   1),( 577,   1,   1),( 578,   1,   1),( 579,   1,   1),( 580,   1,   1),( 581,   1,   1),( 582,   1,   1),( 583,   1,   1),( 584,   1,   1),( 585,   1,   1),( 586,   1,   1),( 587,   1,   1),( 588,   1,   1),( 589,   1,   1),( 590,   1,   1),( 591,   1,   1),( 592,   1,   1),( 593,   1,   1),( 594,   1,   1),( 595,   1,   1),( 596,   1,   1),( 597,   1,   1),( 598,   1,   1),( 599,   1,   1),( 600,   1,   1),( 601,   1,   1),( 602,   1,   1),( 603,   1,   1),( 604,   1,   1),( 605,   1,   1),( 606,   1,   1),( 607,   1,   1),( 608,   1,   1),( 609,   1,   1),( 610,   1,   1),( 611,   1,   1),( 612,   1,   1),( 613,   1,   1),( 614,   1,   1),( 615,   1,   1),( 616,   1,   1),( 617,   1,   1),( 618,   1,   1),( 619,   1,   1),( 620,   1,   1),( 621,   1,   1),( 622,   1,   1),( 623,   1,   1),( 624,   1,   1),( 625,   1,   1),( 626,   1,   1),( 627,   1,   1),( 628,   1,   1),( 629,   1,   1),( 630,   1,   1),( 631,   1,   1),( 632,   1,   1),( 633,   1,   1)}
Min Cost = 205.13 log2(gate), Memory Cost = 143.96 log(bit)
EnumBS cost:5.3e+02s.
============= Dilithium-III
Generate gs-lengths by GSA assumption...enumbs min_G_prec = 0.1
 Attack Estimation via simulation + probabilistic model (EnumBS in parallel)
beta_start= 50, gap = 1, J = 20, J_gap = 1, cost_model = 1, max_loop = 1, threads = 4, G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = 1, Find minimal time cost strategy, average_case, theo_pnjbkz_d4f = 2, theo_pump_d4f = 2.
  index:        2, ( 814,   1): ( 815,  20) --> (1499,   1), goal index:       67, cost = index:        3, ( 815,   1): ( 816,  20) --> (1499,   1), goal index:      131, cost = index:        4, ( 816,   1): ( 817,  20) --> (1499,   1), goal index:      130, cost = index:        5, ( 817,   1): ( 818,  20) --> (1499,   1), goal index:      129, cost = index:        6, ( 818,   1): ( 819,  20) --> (1499,   1), goal index:      128, cost = index:        7, ( 819,   1): ( 820,  20) --> (1499,   1), goal index:      126, cost = index:        8, ( 820,   1): ( 821,  20) --> (1499,   1), goal index:      125, cost = index:        9, ( 821,   1): ( 822,  20) --> (1499,   1), goal index:      124, cost = index:       10, ( 822,   1): ( 823,  20) --> (1499,   1), goal index:      122, cost = index:       11, ( 823,   1): ( 824,  20) --> (1499,   1), goal index:      120, cost = index:       12, ( 824,   1): ( 825,  20) --> (1499,   1), goal index:      119, cost = index:       13, ( 825,   1): ( 826,  20) --> (1499,   1), goal index:      119, cost = index:       14, ( 826,   1): ( 827,  20) --> (1499,   1), goal index:      118, cost = index:       15, ( 827,   1): ( 828,  20) --> (1499,   1), goal index:      116, cost = index:       16, ( 828,   1): ( 829,  20) --> (1499,   1), goal index:      114, cost = index:       17, ( 829,   1): ( 830,  20) --> (1499,   1), goal index:      112, cost = index:       18, ( 830,   1): ( 831,  20) --> (1499,   1), goal index:      111, cost = index:       19, ( 831,   1): ( 832,  20) --> (1499,   1), goal index:      110, cost = index:       20, ( 832,   1): ( 833,  20) --> (1499,   1), goal index:      109, cost = index:       21, ( 833,   1): ( 834,  20) --> (1499,   1), goal index:      109, cost = index:       22, ( 834,   1): ( 835,  20) --> (1499,   1), goal index:      106, cost = index:       23, ( 835,   1): ( 836,  20) --> (1499,   1), goal index:      104, cost = index:       24, ( 836,   1): ( 837,  20) --> (1499,   1), goal index:      103, cost = index:       25, ( 837,   1): ( 838,  20) --> (1499,   1), goal index:      102, cost = index:       26, ( 838,   1): ( 839,  20) --> (1499,   1), goal index:      101, cost = index:       27, ( 839,   1): ( 840,  20) --> (1499,   1), goal index:       99, cost = index:       28, ( 840,   1): ( 841,  20) --> (1499,   1), goal index:       98, cost = index:       29, ( 841,   1): ( 842,  20) --> (1499,   1), goal index:       97, cost = index:       30, ( 842,   1): ( 843,  20) --> (1499,   1), goal index:       97, cost = index:       31, ( 843,   1): ( 844,  20) --> (1499,   1), goal index:       96, cost = index:       32, ( 844,   1): ( 845,  20) --> (1499,   1), goal index:       93, cost = index:       33, ( 845,   1): ( 846,  20) --> (1499,   1), goal index:       91, cost = index:       34, ( 846,   1): ( 847,  20) --> (1499,   1), goal index:       90, cost = index:       35, ( 847,   1): ( 848,  20) --> (1499,   1), goal index:       89, cost = index:       36, ( 848,   1): ( 849,  20) --> (1499,   1), goal index:       88, cost = index:       37, ( 849,   1): ( 850,  20) --> (1499,   1), goal index:       86, cost = index:       38, ( 850,   1): ( 851,  20) --> (1499,   1), goal index:       86, cost = index:       39, ( 851,   1): ( 852,  20) --> (1499,   1), goal index:       86, cost = index:       40, ( 852,   1): ( 853,  20) --> (1499,   1), goal index:       85, cost = index:       41, ( 853,   1): ( 854,  20) --> (1499,   1), goal index:       83, cost = index:       42, ( 854,   1): ( 855,  20) --> (1499,   1), goal index:       82, cost = index:       43, ( 855,   1): ( 856,  20) --> (1499,   1), goal index:       82, cost = index:       44, ( 856,   1): ( 857,  20) --> (1499,   1), goal index:       82, cost = index:       45, ( 857,   1): ( 858,  20) --> (1499,   1), goal index:       81, cost = index:       46, ( 858,   1): ( 859,  20) --> (1499,   1), goal index:       82, cost = index:       47, ( 859,   1): ( 860,  20) --> (1499,   1), goal index:       81, cost = index:       48, ( 860,   1): ( 861,  20) --> (1499,   1), goal index:       80, cost = index:       49, ( 861,   1): ( 862,  20) --> (1499,   1), goal index:       79, cost = index:       50, ( 862,   1): ( 863,  20) --> (1499,   1), goal index:       78, cost = index:       51, ( 863,   1): ( 864,  20) --> (1499,   1), goal index:       78, cost = index:       52, ( 864,   1): ( 865,  20) --> (1499,   1), goal index:       78, cost = index:       53, ( 865,   1): ( 866,  20) --> (1499,   1), goal index:       78, cost = index:       54, ( 866,   1): ( 867,  20) --> (1499,   1), goal index:       78, cost = index:       55, ( 867,   1): ( 868,  20) --> (1499,   1), goal index:       78, cost = index:       56, ( 868,   1): ( 869,  20) --> (1499,   1), goal index:       78, cost = index:       57, ( 869,   1): ( 870,  20) --> (1499,   1), goal index:       78, cost = index:       58, ( 870,   1): ( 871,  20) --> (1499,   1), goal index:       78, cost = index:       59, ( 871,   1): ( 872,  20) --> (1499,   1), goal index:       78, cost = index:       60, ( 872,   1): ( 873,  20) --> (1499,   1), goal index:       78, cost = index:       61, ( 873,   1): ( 874,  20) --> (1499,   1), goal index:       78, cost = index:       62, ( 874,   1): ( 875,  20) --> (1499,   1), goal index:       78, cost = index:       63, ( 875,   1): ( 876,  20) --> (1499,   1), goal index:       78, cost = index:       64, ( 876,   1): ( 877,  20) --> (1499,   1), goal index:       78, cost = index:       65, ( 877,   1): ( 878,  20) --> (1499,   1), goal index:       78, cost = index:       66, ( 878,   1): ( 879,  20) --> (1499,   1), goal index:       78, cost = index:       67, ( 879,   1): ( 880,  20) --> (1499,   1), goal index:       78, cost = index:       68, ( 912,   4): ( 912,   3) --> (1499,   1), goal index:       78, cost = index:       69, ( 913,   4): ( 913,   3) --> (1499,   1), goal index:       78, cost = index:       70, ( 913,   4): ( 913,   3) --> (1499,   1), goal index:       78, cost = index:       71, ( 914,   4): ( 914,   3) --> (1499,   1), goal index:       78, cost = index:       72, ( 914,   4): ( 914,   3) --> (1499,   1), goal index:       78, cost = index:       73, ( 915,   4): ( 915,   3) --> (1499,   1), goal index:       78, cost = index:       74, ( 915,   4): ( 915,   3) --> (1499,   1), goal index:       78, cost = index:       75, ( 917,   4): ( 917,   3) --> (1499,   1), goal index:       78, cost =
Find the optimal Strategy through EumBS!!
bs = (slope = -9.203087e-03, G_BKZ = 2.722546e+02 gate, B_BKZ = 1.809820e+02 bit cum-pr = 2.663208e-02, pump-{2609,931,61}, G_dsvp = 2.741375e+02 gate, B_dsvp = 1.932541e+02 bit, G = 2.744836e+02 gate, B = 1.932541e+02 bit, min_GB.first = 2.744836e+02 gate)
S(beta,jump,tours):{(  50,   1,   1),(  51,   1,   1),(  52,   1,   1),(  53,   1,   1),(  54,   1,   1),(  55,   1,   1),(  56,   1,   1),(  57,   1,   1),(  58,   1,   1),(  59,   1,   1),(  60,   1,   1),(  61,   1,   1),(  62,   1,   1),(  63,   1,   1),(  64,   1,   1),(  65,   1,   1),(  66,   1,   1),(  67,   1,   1),(  68,   1,   1),(  69,   1,   1),(  70,   1,   1),(  71,   1,   1),(  72,   1,   1),(  73,   1,   1),(  74,   1,   1),(  75,   1,   1),(  76,   1,   1),(  77,   1,   1),(  78,   1,   1),(  79,   1,   1),(  80,   1,   1),(  81,   1,   1),(  82,   1,   1),(  83,   1,   1),(  84,   1,   1),(  85,   1,   1),(  86,   1,   1),(  87,   1,   1),(  88,   1,   1),(  89,   1,   1),(  90,   1,   1),(  91,   1,   1),(  92,   1,   1),(  93,   1,   1),(  94,   1,   1),(  95,   1,   1),(  96,   1,   1),(  97,   1,   1),(  98,   1,   1),(  99,   1,   1),( 100,   1,   1),( 101,   1,   1),( 102,   1,   1),( 103,   1,   1),( 104,   1,   1),( 105,   1,   1),( 106,   1,   1),( 107,   1,   1),( 108,   1,   1),( 109,   1,   1),( 110,   1,   1),( 111,   1,   1),( 112,   1,   1),( 113,   1,   1),( 114,   1,   1),( 115,   1,   1),( 116,   1,   1),( 117,   1,   1),( 118,   1,   1),( 119,   1,   1),( 120,   1,   1),( 121,   1,   1),( 122,   1,   1),( 123,   1,   1),( 124,   1,   1),( 125,   1,   1),( 126,   1,   1),( 127,   1,   1),( 128,   1,   1),( 129,   1,   1),( 130,   1,   1),( 131,   1,   1),( 132,   1,   1),( 133,   1,   1),( 134,   1,   1),( 135,   1,   1),( 136,   1,   1),( 137,   1,   1),( 138,   1,   1),( 139,   1,   1),( 140,   1,   1),( 141,   1,   1),( 142,   1,   1),( 143,   1,   1),( 144,   1,   1),( 145,   1,   1),( 146,   1,   1),( 147,   1,   1),( 148,   1,   1),( 149,   1,   1),( 150,   1,   1),( 151,   1,   1),( 152,   1,   1),( 153,   1,   1),( 154,   1,   1),( 155,   1,   1),( 156,   1,   1),( 157,   1,   1),( 158,   1,   1),( 159,   1,   1),( 160,   1,   1),( 161,   1,   1),( 162,   1,   1),( 163,   1,   1),( 164,   1,   1),( 165,   1,   1),( 166,   1,   1),( 167,   1,   1),( 168,   1,   1),( 169,   1,   1),( 170,   1,   1),( 171,   1,   1),( 172,   1,   1),( 173,   1,   1),( 174,   1,   1),( 175,   1,   1),( 176,   1,   1),( 177,   1,   1),( 178,   1,   1),( 179,   1,   1),( 180,   1,   1),( 181,   1,   1),( 182,   1,   1),( 183,   1,   1),( 184,   1,   1),( 185,   1,   1),( 186,   1,   1),( 187,   1,   1),( 188,   1,   1),( 189,   1,   1),( 190,   1,   1),( 191,   1,   1),( 192,   1,   1),( 193,   1,   1),( 194,   1,   1),( 195,   1,   1),( 196,   1,   1),( 197,   1,   1),( 198,   1,   1),( 199,   1,   1),( 200,   1,   1),( 201,   1,   1),( 202,   1,   1),( 203,   1,   1),( 204,   1,   1),( 205,   1,   1),( 206,   1,   1),( 207,   1,   1),( 208,   1,   1),( 209,   1,   1),( 210,   1,   1),( 211,   1,   1),( 212,   1,   1),( 213,   1,   1),( 214,   1,   1),( 215,   1,   1),( 216,   1,   1),( 217,   1,   1),( 218,   1,   1),( 219,   1,   1),( 220,   1,   1),( 221,   1,   1),( 222,   1,   1),( 223,   1,   1),( 224,   1,   1),( 225,   1,   1),( 226,   1,   1),( 227,   1,   1),( 228,   1,   1),( 229,   1,   1),( 230,   1,   1),( 231,   1,   1),( 232,   1,   1),( 233,   1,   1),( 234,   1,   1),( 235,   1,   1),( 236,   1,   1),( 237,   1,   1),( 238,   1,   1),( 239,   1,   1),( 240,   1,   1),( 241,   1,   1),( 242,   1,   1),( 243,   1,   1),( 244,   1,   1),( 245,   1,   1),( 246,   1,   1),( 247,   1,   1),( 248,   1,   1),( 249,   1,   1),( 250,   1,   1),( 251,   1,   1),( 252,   1,   1),( 253,   1,   1),( 254,   1,   1),( 255,   1,   1),( 256,   1,   1),( 257,   1,   1),( 258,   1,   1),( 259,   1,   1),( 260,   1,   1),( 261,   1,   1),( 262,   1,   1),( 263,   1,   1),( 264,   1,   1),( 265,   1,   1),( 266,   1,   1),( 267,   1,   1),( 268,   1,   1),( 269,   1,   1),( 270,   1,   1),( 271,   1,   1),( 272,   1,   1),( 273,   1,   1),( 274,   1,   1),( 275,   1,   1),( 276,   1,   1),( 277,   1,   1),( 278,   1,   1),( 279,   1,   1),( 280,   1,   1),( 281,   1,   1),( 282,   1,   1),( 283,   1,   1),( 284,   1,   1),( 285,   1,   1),( 286,   1,   1),( 287,   1,   1),( 288,   1,   1),( 289,   1,   1),( 290,   1,   1),( 291,   1,   1),( 292,   1,   1),( 293,   1,   1),( 294,   1,   1),( 295,   1,   1),( 296,   1,   1),( 297,   1,   1),( 298,   1,   1),( 299,   1,   1),( 300,   1,   1),( 301,   1,   1),( 302,   1,   1),( 303,   1,   1),( 304,   1,   1),( 305,   1,   1),( 306,   1,   1),( 307,   1,   1),( 308,   1,   1),( 309,   1,   1),( 310,   1,   1),( 311,   1,   1),( 312,   1,   1),( 313,   1,   1),( 314,   1,   1),( 315,   1,   1),( 316,   1,   1),( 317,   1,   1),( 318,   1,   1),( 319,   1,   1),( 320,   1,   1),( 321,   1,   1),( 322,   1,   1),( 323,   1,   1),( 324,   1,   1),( 325,   1,   1),( 326,   1,   1),( 327,   1,   1),( 328,   1,   1),( 329,   1,   1),( 330,   1,   1),( 331,   1,   1),( 332,   1,   1),( 333,   1,   1),( 334,   1,   1),( 335,   1,   1),( 336,   1,   1),( 337,   1,   1),( 338,   1,   1),( 339,   1,   1),( 340,   1,   1),( 341,   1,   1),( 342,   1,   1),( 343,   1,   1),( 344,   1,   1),( 345,   1,   1),( 346,   1,   1),( 347,   1,   1),( 348,   1,   1),( 349,   1,   1),( 350,   1,   1),( 351,   1,   1),( 352,   1,   1),( 353,   1,   1),( 354,   1,   1),( 355,   1,   1),( 356,   1,   1),( 357,   1,   1),( 358,   1,   1),( 359,   1,   1),( 360,   1,   1),( 361,   1,   1),( 362,   1,   1),( 363,   1,   1),( 364,   1,   1),( 365,   1,   1),( 366,   1,   1),( 367,   1,   1),( 368,   1,   1),( 369,   1,   1),( 370,   1,   1),( 371,   1,   1),( 372,   1,   1),( 373,   1,   1),( 374,   1,   1),( 375,   1,   1),( 376,   1,   1),( 377,   1,   1),( 378,   1,   1),( 379,   1,   1),( 380,   1,   1),( 381,   1,   1),( 382,   1,   1),( 383,   1,   1),( 384,   1,   1),( 385,   1,   1),( 386,   1,   1),( 387,   1,   1),( 388,   1,   1),( 389,   1,   1),( 390,   1,   1),( 391,   1,   1),( 392,   1,   1),( 393,   1,   1),( 394,   1,   1),( 395,   1,   1),( 396,   1,   1),( 397,   1,   1),( 398,   1,   1),( 399,   1,   1),( 400,   1,   1),( 401,   1,   1),( 402,   1,   1),( 403,   1,   1),( 404,   1,   1),( 405,   1,   1),( 406,   1,   1),( 407,   1,   1),( 408,   1,   1),( 409,   1,   1),( 410,   1,   1),( 411,   1,   1),( 412,   1,   1),( 413,   1,   1),( 414,   1,   1),( 415,   1,   1),( 416,   1,   1),( 417,   1,   1),( 418,   1,   1),( 419,   1,   1),( 420,   1,   1),( 421,   1,   1),( 422,   1,   1),( 423,   1,   1),( 424,   1,   1),( 425,   1,   1),( 426,   1,   1),( 427,   1,   1),( 428,   1,   1),( 429,   1,   1),( 430,   1,   1),( 431,   1,   1),( 432,   1,   1),( 433,   1,   1),( 434,   1,   1),( 435,   1,   1),( 436,   1,   1),( 437,   1,   1),( 438,   1,   1),( 439,   1,   1),( 440,   1,   1),( 441,   1,   1),( 442,   1,   1),( 443,   1,   1),( 444,   1,   1),( 445,   1,   1),( 446,   1,   1),( 447,   1,   1),( 448,   1,   1),( 449,   1,   1),( 450,   1,   1),( 451,   1,   1),( 452,   1,   1),( 453,   1,   1),( 454,   1,   1),( 455,   1,   1),( 456,   1,   1),( 457,   1,   1),( 458,   1,   1),( 459,   1,   1),( 460,   1,   1),( 461,   1,   1),( 462,   1,   1),( 463,   1,   1),( 464,   1,   1),( 465,   1,   1),( 466,   1,   1),( 467,   1,   1),( 468,   1,   1),( 469,   1,   1),( 470,   1,   1),( 471,   1,   1),( 472,   1,   1),( 473,   1,   1),( 474,   1,   1),( 475,   1,   1),( 476,   1,   1),( 477,   1,   1),( 478,   1,   1),( 479,   1,   1),( 480,   1,   1),( 481,   1,   1),( 482,   1,   1),( 483,   1,   1),( 484,   1,   1),( 485,   1,   1),( 486,   1,   1),( 487,   1,   1),( 488,   1,   1),( 489,   1,   1),( 490,   1,   1),( 491,   1,   1),( 492,   1,   1),( 493,   1,   1),( 494,   1,   1),( 495,   1,   1),( 496,   1,   1),( 497,   1,   1),( 498,   1,   1),( 499,   1,   1),( 500,   1,   1),( 501,   1,   1),( 502,   1,   1),( 503,   1,   1),( 504,   1,   1),( 505,   1,   1),( 506,   1,   1),( 507,   1,   1),( 508,   1,   1),( 509,   1,   1),( 510,   1,   1),( 511,   1,   1),( 512,   1,   1),( 513,   1,   1),( 514,   1,   1),( 515,   1,   1),( 516,   1,   1),( 517,   1,   1),( 518,   1,   1),( 519,   1,   1),( 520,   1,   1),( 521,   1,   1),( 522,   1,   1),( 523,   1,   1),( 524,   1,   1),( 525,   1,   1),( 526,   1,   1),( 527,   1,   1),( 528,   1,   1),( 529,   1,   1),( 530,   1,   1),( 531,   1,   1),( 532,   1,   1),( 533,   1,   1),( 534,   1,   1),( 535,   1,   1),( 536,   1,   1),( 537,   1,   1),( 538,   1,   1),( 539,   1,   1),( 540,   1,   1),( 541,   1,   1),( 542,   1,   1),( 543,   1,   1),( 544,   1,   1),( 545,   1,   1),( 546,   1,   1),( 547,   1,   1),( 548,   1,   1),( 549,   1,   1),( 550,   1,   1),( 551,   1,   1),( 552,   1,   1),( 553,   1,   1),( 554,   1,   1),( 555,   1,   1),( 556,   1,   1),( 557,   1,   1),( 558,   1,   1),( 559,   1,   1),( 560,   1,   1),( 561,   1,   1),( 562,   1,   1),( 563,   1,   1),( 564,   1,   1),( 565,   1,   1),( 566,   1,   1),( 567,   1,   1),( 568,   1,   1),( 569,   1,   1),( 570,   1,   1),( 571,   1,   1),( 572,   1,   1),( 573,   1,   1),( 574,   1,   1),( 575,   1,   1),( 576,   1,   1),( 577,   1,   1),( 578,   1,   1),( 579,   1,   1),( 580,   1,   1),( 581,   1,   1),( 582,   1,   1),( 583,   1,   1),( 584,   1,   1),( 585,   1,   1),( 586,   1,   1),( 587,   1,   1),( 588,   1,   1),( 589,   1,   1),( 590,   1,   1),( 591,   1,   1),( 592,   1,   1),( 593,   1,   1),( 594,   1,   1),( 595,   1,   1),( 596,   1,   1),( 597,   1,   1),( 598,   1,   1),( 599,   1,   1),( 600,   1,   1),( 601,   1,   1),( 602,   1,   1),( 603,   1,   1),( 604,   1,   1),( 605,   1,   1),( 606,   1,   1),( 607,   1,   1),( 608,   1,   1),( 609,   1,   1),( 610,   1,   1),( 611,   1,   1),( 612,   1,   1),( 613,   1,   1),( 614,   1,   1),( 615,   1,   1),( 616,   1,   1),( 617,   1,   1),( 618,   1,   1),( 619,   1,   1),( 620,   1,   1),( 621,   1,   1),( 622,   1,   1),( 623,   1,   1),( 624,   1,   1),( 625,   1,   1),( 626,   1,   1),( 627,   1,   1),( 628,   1,   1),( 629,   1,   1),( 630,   1,   1),( 631,   1,   1),( 632,   1,   1),( 633,   1,   1),( 634,   1,   1),( 635,   1,   1),( 636,   1,   1),( 637,   1,   1),( 638,   1,   1),( 639,   1,   1),( 640,   1,   1),( 641,   1,   1),( 642,   1,   1),( 643,   1,   1),( 644,   1,   1),( 645,   1,   1),( 646,   1,   1),( 647,   1,   1),( 648,   1,   1),( 649,   1,   1),( 650,   1,   1),( 651,   1,   1),( 652,   1,   1),( 653,   1,   1),( 654,   1,   1),( 655,   1,   1),( 656,   1,   1),( 657,   1,   1),( 658,   1,   1),( 659,   1,   1),( 660,   1,   1),( 661,   1,   1),( 662,   1,   1),( 663,   1,   1),( 664,   1,   1),( 665,   1,   1),( 666,   1,   1),( 667,   1,   1),( 668,   1,   1),( 669,   1,   1),( 670,   1,   1),( 671,   1,   1),( 672,   1,   1),( 673,   1,   1),( 674,   1,   1),( 675,   1,   1),( 676,   1,   1),( 677,   1,   1),( 678,   1,   1),( 679,   1,   1),( 680,   1,   1),( 681,   1,   1),( 682,   1,   1),( 683,   1,   1),( 684,   1,   1),( 685,   1,   1),( 686,   1,   1),( 687,   1,   1),( 688,   1,   1),( 689,   1,   1),( 690,   1,   1),( 691,   1,   1),( 692,   1,   1),( 693,   1,   1),( 694,   1,   1),( 695,   1,   1),( 696,   1,   1),( 697,   1,   1),( 698,   1,   1),( 699,   1,   1),( 700,   1,   1),( 701,   1,   1),( 702,   1,   1),( 703,   1,   1),( 704,   1,   1),( 705,   1,   1),( 706,   1,   1),( 707,   1,   1),( 708,   1,   1),( 709,   1,   1),( 710,   1,   1),( 711,   1,   1),( 712,   1,   1),( 713,   1,   1),( 714,   1,   1),( 715,   1,   1),( 716,   1,   1),( 717,   1,   1),( 718,   1,   1),( 719,   1,   1),( 720,   1,   1),( 721,   1,   1),( 722,   1,   1),( 723,   1,   1),( 724,   1,   1),( 725,   1,   1),( 726,   1,   1),( 727,   1,   1),( 728,   1,   1),( 729,   1,   1),( 730,   1,   1),( 731,   1,   1),( 732,   1,   1),( 733,   1,   1),( 734,   1,   1),( 735,   1,   1),( 736,   1,   1),( 737,   1,   1),( 738,   1,   1),( 739,   1,   1),( 740,   1,   1),( 741,   1,   1),( 742,   1,   1),( 743,   1,   1),( 744,   1,   1),( 745,   1,   1),( 746,   1,   1),( 747,   1,   1),( 748,   1,   1),( 749,   1,   1),( 750,   1,   1),( 751,   1,   1),( 752,   1,   1),( 753,   1,   1),( 754,   1,   1),( 755,   1,   1),( 756,   1,   1),( 757,   1,   1),( 758,   1,   1),( 759,   1,   1),( 760,   1,   1),( 761,   1,   1),( 762,   1,   1),( 763,   1,   1),( 764,   1,   1),( 765,   1,   1),( 766,   1,   1),( 767,   1,   1),( 768,   1,   1),( 769,   1,   1),( 770,   1,   1),( 771,   1,   1),( 772,   1,   1),( 773,   1,   1),( 774,   1,   1),( 775,   1,   1),( 776,   1,   1),( 777,   1,   1),( 778,   1,   1),( 779,   1,   1),( 780,   1,   1),( 781,   1,   1),( 782,   1,   1),( 783,   1,   1),( 784,   1,   1),( 785,   1,   1),( 786,   1,   1),( 787,   1,   1),( 788,   1,   1),( 789,   1,   1),( 790,   1,   1),( 791,   1,   1),( 792,   1,   1),( 793,   1,   1),( 794,   1,   1),( 795,   1,   1),( 796,   1,   1),( 797,   1,   1),( 798,   1,   1),( 799,   1,   1),( 800,   1,   1),( 801,   1,   1),( 802,   1,   1),( 803,   1,   1),( 804,   1,   1),( 805,   1,   1),( 806,   1,   1),( 807,   1,   1),( 808,   1,   1),( 809,   1,   1),( 810,   1,   1),( 811,   1,   1),( 812,   1,   1),( 813,   1,   1),( 814,   1,   1),( 815,   1,   1),( 816,   1,   1),( 817,   1,   1),( 818,   1,   1),( 819,   1,   1),( 820,   1,   1),( 821,   1,   1),( 822,   1,   1),( 823,   1,   1),( 824,   1,   1),( 825,   1,   1),( 826,   1,   1),( 827,   1,   1),( 828,   1,   1),( 829,   1,   1),( 830,   1,   1),( 831,   1,   1),( 832,   1,   1),( 833,   1,   1),( 834,   1,   1),( 835,   1,   1),( 836,   1,   1),( 837,   1,   1),( 838,   1,   1),( 839,   1,   1),( 840,   1,   1),( 841,   1,   1),( 842,   1,   1),( 843,   1,   1),( 844,   1,   1),( 845,   1,   1),( 846,   1,   1),( 847,   1,   1),( 848,   1,   1),( 849,   1,   1),( 850,   1,   1),( 851,   1,   1),( 852,   1,   1),( 853,   1,   1),( 854,   1,   1),( 855,   1,   1),( 856,   1,   1),( 857,   1,   1),( 858,   1,   1),( 859,   1,   1),( 860,   1,   1),( 861,   1,   1),( 862,   1,   1),( 863,   1,   1),( 864,   1,   1),( 865,   1,   1),( 866,   1,   1),( 867,   1,   1),( 868,   1,   1),( 869,   1,   1),( 870,   1,   1),( 871,   1,   1),( 872,   1,   1),( 873,   1,   1),( 874,   1,   1),( 875,   1,   1),( 876,   1,   1),( 877,   1,   1),( 878,   1,   1)}
Min Cost = 274.48 log2(gate), Memory Cost = 193.25 log(bit)
EnumBS cost:8.1e+02s.
============= Frodo-I
Generate gs-lengths by GSA assumption...enumbs min_G_prec = 0.1
 Attack Estimation via simulation + probabilistic model (EnumBS in parallel)
beta_start= 50, gap = 1, J = 20, J_gap = 1, cost_model = 1, max_loop = 1, threads = 4, G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = 1, Find minimal time cost strategy, average_case, theo_pnjbkz_d4f = 2, theo_pump_d4f = 2.
  index:        2, ( 427,   1): ( 428,  20) --> (1296,   1), goal index:      421, cost = index:        3, ( 428,   1): ( 429,  20) --> (1296,   1), goal index:      287, cost = index:        4, ( 429,   1): ( 430,  20) --> (1296,   1), goal index:      288, cost = index:        5, ( 430,   1): ( 431,  20) --> (1296,   1), goal index:      288, cost = index:        6, ( 431,   1): ( 432,  20) --> (1296,   1), goal index:      289, cost = index:        7, ( 432,   1): ( 433,  20) --> (1296,   1), goal index:      290, cost = index:        8, ( 433,   1): ( 434,  20) --> (1296,   1), goal index:      291, cost = index:        9, ( 434,   1): ( 435,  20) --> (1296,   1), goal index:      291, cost = index:       10, ( 435,   1): ( 436,  20) --> (1296,   1), goal index:      292, cost = index:       11, ( 436,   1): ( 437,  20) --> (1296,   1), goal index:      294, cost = index:       12, ( 437,   1): ( 438,  20) --> (1296,   1), goal index:      295, cost = index:       13, ( 438,   1): ( 439,  20) --> (1296,   1), goal index:      296, cost = index:       14, ( 439,   1): ( 440,  20) --> (1296,   1), goal index:      297, cost = index:       15, ( 440,   1): ( 441,  20) --> (1296,   1), goal index:      298, cost = index:       16, ( 441,   1): ( 442,  20) --> (1296,   1), goal index:      300, cost = index:       17, ( 442,   1): ( 443,  20) --> (1296,   1), goal index:      301, cost = index:       18, ( 443,   1): ( 444,  20) --> (1296,   1), goal index:      301, cost = index:       19, ( 444,   1): ( 445,  20) --> (1296,   1), goal index:      302, cost = index:       20, ( 445,   1): ( 446,  20) --> (1296,   1), goal index:      303, cost = index:       21, ( 446,   1): ( 447,  20) --> (1296,   1), goal index:      302, cost = index:       22, ( 447,   1): ( 448,  20) --> (1296,   1), goal index:      301, cost = index:       23, ( 448,   1): ( 449,  20) --> (1296,   1), goal index:      301, cost = index:       24, ( 449,   1): ( 450,  20) --> (1296,   1), goal index:      299, cost = index:       25, ( 450,   1): ( 451,  20) --> (1296,   1), goal index:      299, cost = index:       26, ( 451,   1): ( 452,  20) --> (1296,   1), goal index:      299, cost = index:       27, ( 452,   1): ( 453,  20) --> (1296,   1), goal index:      299, cost = index:       28, ( 453,   1): ( 454,  20) --> (1296,   1), goal index:      300, cost = index:       29, ( 454,   1): ( 455,  20) --> (1296,   1), goal index:      300, cost = index:       30, ( 455,   1): ( 456,  20) --> (1296,   1), goal index:      299, cost = index:       31, ( 456,   1): ( 457,  20) --> (1296,   1), goal index:      300, cost = index:       32, ( 457,   1): ( 458,  20) --> (1296,   1), goal index:      301, cost = index:       33, ( 458,   1): ( 459,  20) --> (1296,   1), goal index:      300, cost = index:       34, ( 459,   1): ( 460,  20) --> (1296,   1), goal index:      300, cost = index:       35, ( 460,   1): ( 461,  20) --> (1296,   1), goal index:      301, cost = index:       36, ( 461,   1): ( 462,  20) --> (1296,   1), goal index:      302, cost = index:       37, ( 462,   1): ( 463,  20) --> (1296,   1), goal index:      302, cost = index:       38, ( 463,   1): ( 464,  20) --> (1296,   1), goal index:      303, cost = index:       39, ( 464,   1): ( 465,  20) --> (1296,   1), goal index:      305, cost = index:       40, ( 465,   1): ( 466,  20) --> (1296,   1), goal index:      307, cost = index:       41, ( 466,   1): ( 467,  20) --> (1296,   1), goal index:      308, cost = index:       42, ( 467,   1): ( 468,  20) --> (1296,   1), goal index:      309, cost = index:       43, ( 468,   1): ( 469,  20) --> (1296,   1), goal index:      310, cost = index:       44, ( 469,   1): ( 470,  20) --> (1296,   1), goal index:      311, cost = index:       45, ( 470,   1): ( 471,  20) --> (1296,   1), goal index:      312, cost = index:       46, ( 471,   1): ( 472,  20) --> (1296,   1), goal index:      313, cost = index:       47, ( 472,   1): ( 473,  20) --> (1296,   1), goal index:      313, cost = index:       48, ( 473,   1): ( 474,  20) --> (1296,   1), goal index:      313, cost = index:       49, ( 474,   1): ( 475,  20) --> (1296,   1), goal index:      314, cost = index:       50, ( 475,   1): ( 476,  20) --> (1296,   1), goal index:      314, cost = index:       51, ( 476,   1): ( 477,  20) --> (1296,   1), goal index:      315, cost = index:       52, ( 477,   1): ( 478,  20) --> (1296,   1), goal index:      317, cost = index:       53, ( 478,   1): ( 479,  20) --> (1296,   1), goal index:      323, cost = index:       54, ( 479,   1): ( 480,  20) --> (1296,   1), goal index:      327, cost = index:       55, ( 480,   1): ( 481,  20) --> (1296,   1), goal index:      335, cost = index:       56, ( 481,   1): ( 482,  20) --> (1296,   1), goal index:      339, cost = index:       57, ( 482,   1): ( 483,  20) --> (1296,   1), goal index:      346, cost = index:       58, ( 487,   2): ( 487,   1) --> (1296,   1), goal index:      349, cost = index:       59, ( 483,   1): ( 484,  20) --> (1296,   1), goal index:      342, cost = index:       60, ( 488,   2): ( 488,   1) --> (1296,   1), goal index:      351, cost = index:       61, ( 489,   4): ( 489,   3) --> (1296,   1), goal index:      347, cost = index:       62, ( 484,   1): ( 485,  20) --> (1296,   1), goal index:      340, cost = index:       63, ( 489,   2): ( 489,   1) --> (1296,   1), goal index:      342, cost = index:       64, ( 490,   4): ( 490,   3) --> (1296,   1), goal index:      349, cost = index:       65, ( 485,   1): ( 486,  20) --> (1296,   1), goal index:      341, cost = index:       66, ( 491,   3): ( 491,   2) --> (1296,   1), goal index:      341, cost = index:       67, ( 490,   2): ( 490,   1) --> (1296,   1), goal index:      338, cost = index:       68, ( 491,   4): ( 491,   3) --> (1296,   1), goal index:      351, cost = index:       69, ( 491,   3): ( 491,   2) --> (1296,   1), goal index:      351, cost = index:       70, ( 486,   1): ( 487,  20) --> (1296,   1), goal index:      362, cost = index:       71, ( 491,   2): ( 491,   1) --> (1296,   1), goal index:      362, cost = index:       72, ( 492,   4): ( 492,   3) --> (1296,   1), goal index:      366, cost = index:       73, ( 492,   3): ( 492,   2) --> (1296,   1), goal index:      354, cost = index:       74, ( 487,   1): ( 488,  20) --> (1296,   1), goal index:      357, cost = index:       75, ( 492,   2): ( 492,   1) --> (1296,   1), goal index:      357, cost = index:       76, ( 493,   4): ( 493,   3) --> (1296,   1), goal index:      354, cost = index:       77, ( 493,   3): ( 493,   2) --> (1296,   1), goal index:      351, cost = index:       78, ( 493,   2): ( 493,   1) --> (1296,   1), goal index:      353, cost = index:       79, ( 494,   4): ( 494,   3) --> (1296,   1), goal index:      353, cost = index:       80, ( 494,   4): ( 494,   3) --> (1296,   1), goal index:      353, cost = index:       81, ( 494,   3): ( 494,   2) --> (1296,   1), goal index:      353, cost = index:       82, ( 495,   4): ( 495,   3) --> (1296,   1), goal index:      353, cost = index:       83, ( 495,   3): ( 495,   2) --> (1296,   1), goal index:      353, cost = index:       84, ( 495,   4): ( 495,   3) --> (1296,   1), goal index:      353, cost = index:       85, ( 495,   3): ( 495,   2) --> (1296,   1), goal index:      353, cost = index:       86, ( 496,   4): ( 496,   3) --> (1296,   1), goal index:      353, cost = index:       87, ( 496,   4): ( 496,   3) --> (1296,   1), goal index:      353, cost = index:       88, ( 496,   4): ( 496,   3) --> (1296,   1), goal index:      353, cost = index:       89, ( 496,   3): ( 496,   2) --> (1296,   1), goal index:      353, cost = index:       90, ( 496,   3): ( 496,   2) --> (1296,   1), goal index:      353, cost = index:       91, ( 496,   3): ( 496,   2) --> (1296,   1), goal index:      353, cost = index:       92, ( 497,   4): ( 497,   3) --> (1296,   1), goal index:      353, cost = index:       93, ( 497,   4): ( 497,   3) --> (1296,   1), goal index:      353, cost = index:       94, ( 497,   4): ( 497,   3) --> (1296,   1), goal index:      353, cost = index:       95, ( 497,   3): ( 497,   2) --> (1296,   1), goal index:      353, cost = index:       96, ( 497,   3): ( 497,   2) --> (1296,   1), goal index:      353, cost = index:       97, ( 497,   4): ( 497,   3) --> (1296,   1), goal index:      353, cost = index:       98, ( 498,   4): ( 498,   3) --> (1296,   1), goal index:      353, cost = index:       99, ( 498,   4): ( 498,   3) --> (1296,   1), goal index:      353, cost = index:      100, ( 497,   3): ( 497,   2) --> (1296,   1), goal index:      353, cost = index:      101, ( 497,   3): ( 497,   2) --> (1296,   1), goal index:      353, cost = index:      102, ( 498,   4): ( 498,   3) --> (1296,   1), goal index:      353, cost = index:      103, ( 498,   4): ( 498,   3) --> (1296,   1), goal index:      353, cost = index:      104, ( 499,   4): ( 499,   3) --> (1296,   1), goal index:      353, cost = index:      105, ( 498,   3): ( 498,   2) --> (1296,   1), goal index:      353, cost = index:      106, ( 498,   3): ( 498,   2) --> (1296,   1), goal index:      353, cost = index:      107, ( 498,   3): ( 498,   2) --> (1296,   1), goal index:      353, cost = index:      108, ( 498,   3): ( 498,   2) --> (1296,   1), goal index:      353, cost = index:      109, ( 499,   4): ( 499,   3) --> (1296,   1), goal index:      353, cost = index:      110, ( 499,   4): ( 499,   3) --> (1296,   1), goal index:      353, cost = index:      111, ( 499,   3): ( 499,   2) --> (1296,   1), goal index:      353, cost = index:      112, ( 501,   4): ( 501,   3) --> (1296,   1), goal index:      353, cost = index:      113, ( 502,   4): ( 502,   3) --> (1296,   1), goal index:      353, cost = index:      114, ( 502,   4): ( 502,   3) --> (1296,   1), goal index:      353, cost = index:      115, ( 503,   4): ( 503,   3) --> (1296,   1), goal index:      353, cost = index:      116, ( 504,   4): ( 504,   3) --> (1296,   1), goal index:      353, cost = index:      117, ( 504,   4): ( 504,   3) --> (1296,   1), goal index:      353, cost = index:      118, ( 505,   4): ( 505,   3) --> (1296,   1), goal index:      353, cost = index:      119, ( 505,   4): ( 505,   3) --> (1296,   1), goal index:      353, cost = index:      120, ( 506,   4): ( 506,   3) --> (1296,   1), goal index:      353, cost = index:      121, ( 507,   4): ( 507,   3) --> (1296,   1), goal index:      353, cost = index:      122, ( 508,   4): ( 508,   3) --> (1296,   1), goal index:      353, cost = index:      123, ( 509,   4): ( 509,   3) --> (1296,   1), goal index:      353, cost = index:      124, ( 510,   4): ( 510,   3) --> (1296,   1), goal index:      353, cost = index:      125, ( 511,   4): ( 511,   3) --> (1296,   1), goal index:      353, cost = index:      126, ( 512,   4): ( 512,   3) --> (1296,   1), goal index:      353, cost = index:      127, ( 513,   4): ( 513,   3) --> (1296,   1), goal index:      353, cost = index:      128, ( 514,   4): ( 514,   3) --> (1296,   1), goal index:      353, cost = index:      129, ( 515,   4): ( 515,   3) --> (1296,   1), goal index:      353, cost = index:      130, ( 516,   4): ( 516,   3) --> (1296,   1), goal index:      353, cost = index:      131, ( 517,   4): ( 517,   3) --> (1296,   1), goal index:      353, cost = index:      132, ( 518,  15): ( 518,  14) --> (1296,   1), goal index:      343, cost = index:      133, ( 518,  14): ( 518,  13) --> (1296,   1), goal index:      326, cost =
Find the optimal Strategy through EumBS!!
bs = (slope = -1.437467e-02, G_BKZ = 1.625794e+02 gate, B_BKZ = 1.068036e+02 bit cum-pr = 8.695733e-02, pump-{762,535,40}, G_dsvp = 1.637096e+02 gate, B_dsvp = 1.147490e+02 bit, G = 1.642524e+02 gate, B = 1.147490e+02 bit, min_GB.first = 1.642524e+02 gate)
S(beta,jump,tours):{(  50,   1,   1),(  51,   1,   1),(  52,   1,   1),(  53,   1,   1),(  54,   1,   1),(  55,   1,   1),(  56,   1,   1),(  57,   1,   1),(  58,   1,   1),(  59,   1,   1),(  60,   1,   1),(  61,   1,   1),(  62,   1,   1),(  63,   1,   1),(  64,   1,   1),(  65,   1,   1),(  66,   1,   1),(  67,   1,   1),(  68,   1,   1),(  69,   1,   1),(  70,   1,   1),(  71,   1,   1),(  72,   1,   1),(  73,   1,   1),(  74,   1,   1),(  75,   1,   1),(  76,   1,   1),(  77,   1,   1),(  78,   1,   1),(  79,   1,   1),(  80,   1,   1),(  81,   1,   1),(  82,   1,   1),(  83,   1,   1),(  84,   1,   1),(  85,   1,   1),(  86,   1,   1),(  87,   1,   1),(  88,   1,   1),(  89,   1,   1),(  90,   1,   1),(  91,   1,   1),(  92,   1,   1),(  93,   1,   1),(  94,   1,   1),(  95,   1,   1),(  96,   1,   1),(  97,   1,   1),(  98,   1,   1),(  99,   1,   1),( 100,   1,   1),( 101,   1,   1),( 102,   1,   1),( 103,   1,   1),( 104,   1,   1),( 105,   1,   1),( 106,   1,   1),( 107,   1,   1),( 108,   1,   1),( 109,   1,   1),( 110,   1,   1),( 111,   1,   1),( 112,   1,   1),( 113,   1,   1),( 114,   1,   1),( 115,   1,   1),( 116,   1,   1),( 117,   1,   1),( 118,   1,   1),( 119,   1,   1),( 120,   1,   1),( 121,   1,   1),( 122,   1,   1),( 123,   1,   1),( 124,   1,   1),( 125,   1,   1),( 126,   1,   1),( 127,   1,   1),( 128,   1,   1),( 129,   1,   1),( 130,   1,   1),( 131,   1,   1),( 132,   1,   1),( 133,   1,   1),( 134,   1,   1),( 135,   1,   1),( 136,   1,   1),( 137,   1,   1),( 138,   1,   1),( 139,   1,   1),( 140,   1,   1),( 141,   1,   1),( 142,   1,   1),( 143,   1,   1),( 144,   1,   1),( 145,   1,   1),( 146,   1,   1),( 147,   1,   1),( 148,   1,   1),( 149,   1,   1),( 150,   1,   1),( 151,   1,   1),( 152,   1,   1),( 153,   1,   1),( 154,   1,   1),( 155,   1,   1),( 156,   1,   1),( 157,   1,   1),( 158,   1,   1),( 159,   1,   1),( 160,   1,   1),( 161,   1,   1),( 162,   1,   1),( 163,   1,   1),( 164,   1,   1),( 165,   1,   1),( 166,   1,   1),( 167,   1,   1),( 168,   1,   1),( 169,   1,   1),( 170,   1,   1),( 171,   1,   1),( 172,   1,   1),( 173,   1,   1),( 174,   1,   1),( 175,   1,   1),( 176,   1,   1),( 177,   1,   1),( 178,   1,   1),( 179,   1,   1),( 180,   1,   1),( 181,   1,   1),( 182,   1,   1),( 183,   1,   1),( 184,   1,   1),( 185,   1,   1),( 186,   1,   1),( 187,   1,   1),( 188,   1,   1),( 189,   1,   1),( 190,   1,   1),( 191,   1,   1),( 192,   1,   1),( 193,   1,   1),( 194,   1,   1),( 195,   1,   1),( 196,   1,   1),( 197,   1,   1),( 198,   1,   1),( 199,   1,   1),( 200,   1,   1),( 201,   1,   1),( 202,   1,   1),( 203,   1,   1),( 204,   1,   1),( 205,   1,   1),( 206,   1,   1),( 207,   1,   1),( 208,   1,   1),( 209,   1,   1),( 210,   1,   1),( 211,   1,   1),( 212,   1,   1),( 213,   1,   1),( 214,   1,   1),( 215,   1,   1),( 216,   1,   1),( 217,   1,   1),( 218,   1,   1),( 219,   1,   1),( 220,   1,   1),( 221,   1,   1),( 222,   1,   1),( 223,   1,   1),( 224,   1,   1),( 225,   1,   1),( 226,   1,   1),( 227,   1,   1),( 228,   1,   1),( 229,   1,   1),( 230,   1,   1),( 231,   1,   1),( 232,   1,   1),( 233,   1,   1),( 234,   1,   1),( 235,   1,   1),( 236,   1,   1),( 237,   1,   1),( 238,   1,   1),( 239,   1,   1),( 240,   1,   1),( 241,   1,   1),( 242,   1,   1),( 243,   1,   1),( 244,   1,   1),( 245,   1,   1),( 246,   1,   1),( 247,   1,   1),( 248,   1,   1),( 249,   1,   1),( 250,   1,   1),( 251,   1,   1),( 252,   1,   1),( 253,   1,   1),( 254,   1,   1),( 255,   1,   1),( 256,   1,   1),( 257,   1,   1),( 258,   1,   1),( 259,   1,   1),( 260,   1,   1),( 261,   1,   1),( 262,   1,   1),( 263,   1,   1),( 264,   1,   1),( 265,   1,   1),( 266,   1,   1),( 267,   1,   1),( 268,   1,   1),( 269,   1,   1),( 270,   1,   1),( 271,   1,   1),( 272,   1,   1),( 273,   1,   1),( 274,   1,   1),( 275,   1,   1),( 276,   1,   1),( 277,   1,   1),( 278,   1,   1),( 279,   1,   1),( 280,   1,   1),( 281,   1,   1),( 282,   1,   1),( 283,   1,   1),( 284,   1,   1),( 285,   1,   1),( 286,   1,   1),( 287,   1,   1),( 288,   1,   1),( 289,   1,   1),( 290,   1,   1),( 291,   1,   1),( 292,   1,   1),( 293,   1,   1),( 294,   1,   1),( 295,   1,   1),( 296,   1,   1),( 297,   1,   1),( 298,   1,   1),( 299,   1,   1),( 300,   1,   1),( 301,   1,   1),( 302,   1,   1),( 303,   1,   1),( 304,   1,   1),( 305,   1,   1),( 306,   1,   1),( 307,   1,   1),( 308,   1,   1),( 309,   1,   1),( 310,   1,   1),( 311,   1,   1),( 312,   1,   1),( 313,   1,   1),( 314,   1,   1),( 315,   1,   1),( 316,   1,   1),( 317,   1,   1),( 318,   1,   1),( 319,   1,   1),( 320,   1,   1),( 321,   1,   1),( 322,   1,   1),( 323,   1,   1),( 324,   1,   1),( 325,   1,   1),( 326,   1,   1),( 327,   1,   1),( 328,   1,   1),( 329,   1,   1),( 330,   1,   1),( 331,   1,   1),( 332,   1,   1),( 333,   1,   1),( 334,   1,   1),( 335,   1,   1),( 336,   1,   1),( 337,   1,   1),( 338,   1,   1),( 339,   1,   1),( 340,   1,   1),( 341,   1,   1),( 342,   1,   1),( 343,   1,   1),( 344,   1,   1),( 345,   1,   1),( 346,   1,   1),( 347,   1,   1),( 348,   1,   1),( 349,   1,   1),( 350,   1,   1),( 351,   1,   1),( 352,   1,   1),( 353,   1,   1),( 354,   1,   1),( 355,   1,   1),( 356,   1,   1),( 357,   1,   1),( 358,   1,   1),( 359,   1,   1),( 360,   1,   1),( 361,   1,   1),( 362,   1,   1),( 363,   1,   1),( 364,   1,   1),( 365,   1,   1),( 366,   1,   1),( 367,   1,   1),( 368,   1,   1),( 369,   1,   1),( 370,   1,   1),( 371,   1,   1),( 372,   1,   1),( 373,   1,   1),( 374,   1,   1),( 375,   1,   1),( 376,   1,   1),( 377,   1,   1),( 378,   1,   1),( 379,   1,   1),( 380,   1,   1),( 381,   1,   1),( 382,   1,   1),( 383,   1,   1),( 384,   1,   1),( 385,   1,   1),( 386,   1,   1),( 387,   1,   1),( 388,   1,   1),( 389,   1,   1),( 390,   1,   1),( 391,   1,   1),( 392,   1,   1),( 393,   1,   1),( 394,   1,   1),( 395,   1,   1),( 396,   1,   1),( 397,   1,   1),( 398,   1,   1),( 399,   1,   1),( 400,   1,   1),( 401,   1,   1),( 402,   1,   1),( 403,   1,   1),( 404,   1,   1),( 405,   1,   1),( 406,   1,   1),( 407,   1,   1),( 408,   1,   1),( 409,   1,   1),( 410,   1,   1),( 411,   1,   1),( 412,   1,   1),( 413,   1,   1),( 414,   1,   1),( 415,   1,   1),( 416,   1,   1),( 417,   1,   1),( 418,   1,   1),( 419,   1,   1),( 420,   1,   1),( 421,   1,   1),( 422,   1,   1),( 423,   1,   1),( 424,   1,   1),( 425,   1,   1),( 426,   1,   1),( 427,   1,   1),( 428,   1,   1),( 429,   1,   1),( 430,   1,   1),( 431,   1,   1),( 432,   1,   1),( 433,   1,   1),( 434,   1,   1),( 435,   1,   1),( 436,   1,   1),( 437,   1,   1),( 438,   1,   1),( 439,   1,   1),( 440,   1,   1),( 441,   1,   1),( 442,   1,   1),( 443,   1,   1),( 444,   1,   1),( 445,   1,   1),( 446,   1,   1),( 447,   1,   1),( 448,   1,   1),( 449,   1,   1),( 450,   1,   1),( 451,   1,   1),( 452,   1,   1),( 453,   1,   1),( 454,   1,   1),( 455,   1,   1),( 456,   1,   1),( 457,   1,   1),( 458,   1,   1),( 459,   1,   1),( 460,   1,   1),( 461,   1,   1),( 462,   1,   1),( 463,   1,   1),( 464,   1,   1),( 465,   1,   1),( 466,   1,   1),( 467,   1,   1),( 468,   1,   1),( 469,   1,   1),( 470,   1,   1),( 471,   1,   1),( 472,   1,   1),( 473,   1,   1),( 474,   1,   1),( 475,   1,   1),( 476,   1,   1),( 477,   1,   1),( 478,   1,   1),( 479,   1,   1),( 491,   4,   1),( 496,   3,   1)}
Min Cost = 164.25 log2(gate), Memory Cost = 114.75 log(bit)
EnumBS cost:4.3e+02s.
============= Frodo-II
Generate gs-lengths by GSA assumption...enumbs min_G_prec = 0.1
 Attack Estimation via simulation + probabilistic model (EnumBS in parallel)
beta_start= 50, gap = 1, J = 20, J_gap = 1, cost_model = 1, max_loop = 1, threads = 4, G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = 1, Find minimal time cost strategy, average_case, theo_pnjbkz_d4f = 2, theo_pump_d4f = 2.
  index:        2, ( 640,   1): ( 641,  20) --> (1499,   1), goal index:      215, cost = index:        3, ( 641,   1): ( 642,  20) --> (1499,   1), goal index:      128, cost = index:        4, ( 642,   1): ( 643,  20) --> (1499,   1), goal index:      127, cost = index:        5, ( 643,   1): ( 644,  20) --> (1499,   1), goal index:      127, cost = index:        6, ( 644,   1): ( 645,  20) --> (1499,   1), goal index:      126, cost = index:        7, ( 645,   1): ( 646,  20) --> (1499,   1), goal index:      125, cost = index:        8, ( 646,   1): ( 647,  20) --> (1499,   1), goal index:      125, cost = index:        9, ( 647,   1): ( 648,  20) --> (1499,   1), goal index:      124, cost = index:       10, ( 648,   1): ( 649,  20) --> (1499,   1), goal index:      123, cost = index:       11, ( 649,   1): ( 650,  20) --> (1499,   1), goal index:      123, cost = index:       12, ( 650,   1): ( 651,  20) --> (1499,   1), goal index:      122, cost = index:       13, ( 651,   1): ( 652,  20) --> (1499,   1), goal index:      122, cost = index:       14, ( 652,   1): ( 653,  20) --> (1499,   1), goal index:      121, cost = index:       15, ( 653,   1): ( 654,  20) --> (1499,   1), goal index:      120, cost = index:       16, ( 654,   1): ( 655,  20) --> (1499,   1), goal index:      120, cost = index:       17, ( 655,   1): ( 656,  20) --> (1499,   1), goal index:      119, cost = index:       18, ( 656,   1): ( 657,  20) --> (1499,   1), goal index:      118, cost = index:       19, ( 657,   1): ( 658,  20) --> (1499,   1), goal index:      118, cost = index:       20, ( 658,   1): ( 659,  20) --> (1499,   1), goal index:      117, cost = index:       21, ( 659,   1): ( 660,  20) --> (1499,   1), goal index:      117, cost = index:       22, ( 660,   1): ( 661,  20) --> (1499,   1), goal index:      117, cost = index:       23, ( 661,   1): ( 662,  20) --> (1499,   1), goal index:      116, cost = index:       24, ( 662,   1): ( 663,  20) --> (1499,   1), goal index:      116, cost = index:       25, ( 663,   1): ( 664,  20) --> (1499,   1), goal index:      116, cost = index:       26, ( 664,   1): ( 665,  20) --> (1499,   1), goal index:      116, cost = index:       27, ( 665,   1): ( 666,  20) --> (1499,   1), goal index:      116, cost = index:       28, ( 666,   1): ( 667,  20) --> (1499,   1), goal index:      116, cost = index:       29, ( 667,   1): ( 668,  20) --> (1499,   1), goal index:      116, cost = index:       30, ( 668,   1): ( 669,  20) --> (1499,   1), goal index:      116, cost = index:       31, ( 669,   1): ( 670,  20) --> (1499,   1), goal index:      117, cost = index:       32, ( 670,   1): ( 671,  20) --> (1499,   1), goal index:      118, cost = index:       33, ( 671,   1): ( 672,  20) --> (1499,   1), goal index:      117, cost = index:       34, ( 672,   1): ( 673,  20) --> (1499,   1), goal index:      117, cost = index:       35, ( 673,   1): ( 674,  20) --> (1499,   1), goal index:      118, cost = index:       36, ( 674,   1): ( 675,  20) --> (1499,   1), goal index:      118, cost = index:       37, ( 675,   1): ( 676,  20) --> (1499,   1), goal index:      119, cost = index:       38, ( 676,   1): ( 677,  20) --> (1499,   1), goal index:      119, cost = index:       39, ( 677,   1): ( 678,  20) --> (1499,   1), goal index:      119, cost = index:       40, ( 678,   1): ( 679,  20) --> (1499,   1), goal index:      119, cost = index:       41, ( 679,   1): ( 680,  20) --> (1499,   1), goal index:      119, cost = index:       42, ( 680,   1): ( 681,  20) --> (1499,   1), goal index:      120, cost = index:       43, ( 681,   1): ( 682,  20) --> (1499,   1), goal index:      121, cost = index:       44, ( 682,   1): ( 683,  20) --> (1499,   1), goal index:      120, cost = index:       45, ( 683,   1): ( 684,  20) --> (1499,   1), goal index:      120, cost = index:       46, ( 684,   1): ( 685,  20) --> (1499,   1), goal index:      121, cost = index:       47, ( 685,   1): ( 686,  20) --> (1499,   1), goal index:      121, cost = index:       48, ( 686,   1): ( 687,  20) --> (1499,   1), goal index:      122, cost = index:       49, ( 687,   1): ( 688,  20) --> (1499,   1), goal index:      123, cost = index:       50, ( 688,   1): ( 689,  20) --> (1499,   1), goal index:      122, cost = index:       51, ( 689,   1): ( 690,  20) --> (1499,   1), goal index:      122, cost = index:       52, ( 690,   1): ( 691,  20) --> (1499,   1), goal index:      123, cost = index:       53, ( 691,   1): ( 692,  20) --> (1499,   1), goal index:      123, cost = index:       54, ( 692,   1): ( 693,  20) --> (1499,   1), goal index:      124, cost = index:       55, ( 693,   1): ( 694,  20) --> (1499,   1), goal index:      125, cost = index:       56, ( 694,   1): ( 695,  20) --> (1499,   1), goal index:      126, cost = index:       57, ( 695,   1): ( 696,  20) --> (1499,   1), goal index:      129, cost = index:       58, ( 696,   1): ( 697,  20) --> (1499,   1), goal index:      129, cost = index:       59, ( 697,   1): ( 698,  20) --> (1499,   1), goal index:      131, cost = index:       60, ( 698,   1): ( 699,  20) --> (1499,   1), goal index:      133, cost = index:       61, ( 699,   1): ( 700,  20) --> (1499,   1), goal index:      133, cost = index:       62, ( 700,   1): ( 701,  20) --> (1499,   1), goal index:      134, cost = index:       63, ( 701,   1): ( 702,  20) --> (1499,   1), goal index:      136, cost = index:       64, ( 702,   1): ( 703,  20) --> (1499,   1), goal index:      136, cost = index:       65, ( 703,   1): ( 704,  20) --> (1499,   1), goal index:      138, cost = index:       66, ( 704,   1): ( 705,  20) --> (1499,   1), goal index:      139, cost = index:       67, ( 705,   1): ( 706,  20) --> (1499,   1), goal index:      139, cost = index:       68, ( 706,   1): ( 707,  20) --> (1499,   1), goal index:      140, cost = index:       69, ( 707,   1): ( 708,  20) --> (1499,   1), goal index:      142, cost = index:       70, ( 708,   1): ( 709,  20) --> (1499,   1), goal index:      141, cost = index:       71, ( 709,   1): ( 710,  20) --> (1499,   1), goal index:      142, cost = index:       72, ( 710,   1): ( 711,  20) --> (1499,   1), goal index:      142, cost = index:       73, ( 711,   1): ( 712,  20) --> (1499,   1), goal index:      141, cost = index:       74, ( 712,   1): ( 713,  20) --> (1499,   1), goal index:      140, cost = index:       75, ( 713,   1): ( 714,  20) --> (1499,   1), goal index:      140, cost = index:       76, ( 714,   1): ( 715,  20) --> (1499,   1), goal index:      140, cost = index:       77, ( 715,   1): ( 716,  20) --> (1499,   1), goal index:      140, cost = index:       78, ( 716,   1): ( 717,  20) --> (1499,   1), goal index:      140, cost = index:       79, ( 717,   1): ( 718,  20) --> (1499,   1), goal index:      140, cost = index:       80, ( 718,   1): ( 719,  20) --> (1499,   1), goal index:      140, cost = index:       81, ( 719,   1): ( 720,  20) --> (1499,   1), goal index:      140, cost = index:       82, ( 730,   4): ( 730,   3) --> (1499,   1), goal index:      140, cost = index:       83, ( 730,   3): ( 730,   2) --> (1499,   1), goal index:      140, cost = index:       84, ( 731,   4): ( 731,   3) --> (1499,   1), goal index:      140, cost = index:       85, ( 732,   4): ( 732,   3) --> (1499,   1), goal index:      140, cost = index:       86, ( 731,   4): ( 731,   3) --> (1499,   1), goal index:      140, cost = index:       87, ( 732,   4): ( 732,   3) --> (1499,   1), goal index:      140, cost = index:       88, ( 732,   4): ( 732,   3) --> (1499,   1), goal index:      140, cost = index:       89, ( 732,   4): ( 732,   3) --> (1499,   1), goal index:      140, cost = index:       90, ( 733,   4): ( 733,   3) --> (1499,   1), goal index:      140, cost = index:       91, ( 732,   3): ( 732,   2) --> (1499,   1), goal index:      140, cost = index:       92, ( 733,   4): ( 733,   3) --> (1499,   1), goal index:      140, cost = index:       93, ( 733,   4): ( 733,   3) --> (1499,   1), goal index:      140, cost = index:       94, ( 734,   4): ( 734,   3) --> (1499,   1), goal index:      140, cost = index:       95, ( 733,   3): ( 733,   2) --> (1499,   1), goal index:      140, cost = index:       96, ( 734,   4): ( 734,   3) --> (1499,   1), goal index:      140, cost = index:       97, ( 734,   4): ( 734,   3) --> (1499,   1), goal index:      140, cost = index:       98, ( 735,   4): ( 735,   3) --> (1499,   1), goal index:      140, cost = index:       99, ( 734,   3): ( 734,   2) --> (1499,   1), goal index:      140, cost = index:      100, ( 735,   4): ( 735,   3) --> (1499,   1), goal index:      140, cost = index:      101, ( 736,   4): ( 736,   3) --> (1499,   1), goal index:      140, cost = index:      102, ( 737,   4): ( 737,   3) --> (1499,   1), goal index:      140, cost = index:      103, ( 738,   4): ( 738,   3) --> (1499,   1), goal index:      140, cost = index:      104, ( 739,   4): ( 739,   3) --> (1499,   1), goal index:      140, cost = index:      105, ( 740,   4): ( 740,   3) --> (1499,   1), goal index:      140, cost = index:      106, ( 741,   4): ( 741,   3) --> (1499,   1), goal index:      140, cost = index:      107, ( 742,   4): ( 742,   3) --> (1499,   1), goal index:      140, cost = index:      108, ( 742,   4): ( 742,   3) --> (1499,   1), goal index:      140, cost = index:      109, ( 743,   4): ( 743,   3) --> (1499,   1), goal index:      140, cost = index:      110, ( 744,   4): ( 744,   3) --> (1499,   1), goal index:      140, cost = index:      111, ( 745,   4): ( 745,   3) --> (1499,   1), goal index:      140, cost = index:      112, ( 746,   4): ( 746,   3) --> (1499,   1), goal index:      140, cost = index:      113, ( 747,   4): ( 747,   3) --> (1499,   1), goal index:      140, cost = index:      114, ( 748,   4): ( 748,   3) --> (1499,   1), goal index:      140, cost = index:      115, ( 749,   4): ( 749,   3) --> (1499,   1), goal index:      140, cost = index:      116, ( 749,   4): ( 749,   3) --> (1499,   1), goal index:      119, cost = index:      117, ( 750,   4): ( 750,   3) --> (1499,   1), goal index:      120, cost = index:      118, ( 750,   4): ( 750,   3) --> (1499,   1), goal index:      121, cost =
Find the optimal Strategy through EumBS!!
bs = (slope = -1.088761e-02, G_BKZ = 2.276057e+02 gate, B_BKZ = 1.503134e+02 bit cum-pr = 5.299515e-02, pump-{1201,768,53}, G_dsvp = 2.284853e+02 gate, B_dsvp = 1.608801e+02 bit, G = 2.291115e+02 gate, B = 1.608801e+02 bit, min_GB.first = 2.291115e+02 gate)
S(beta,jump,tours):{(  50,   1,   1),(  51,   1,   1),(  52,   1,   1),(  53,   1,   1),(  54,   1,   1),(  55,   1,   1),(  56,   1,   1),(  57,   1,   1),(  58,   1,   1),(  59,   1,   1),(  60,   1,   1),(  61,   1,   1),(  62,   1,   1),(  63,   1,   1),(  64,   1,   1),(  65,   1,   1),(  66,   1,   1),(  67,   1,   1),(  68,   1,   1),(  69,   1,   1),(  70,   1,   1),(  71,   1,   1),(  72,   1,   1),(  73,   1,   1),(  74,   1,   1),(  75,   1,   1),(  76,   1,   1),(  77,   1,   1),(  78,   1,   1),(  79,   1,   1),(  80,   1,   1),(  81,   1,   1),(  82,   1,   1),(  83,   1,   1),(  84,   1,   1),(  85,   1,   1),(  86,   1,   1),(  87,   1,   1),(  88,   1,   1),(  89,   1,   1),(  90,   1,   1),(  91,   1,   1),(  92,   1,   1),(  93,   1,   1),(  94,   1,   1),(  95,   1,   1),(  96,   1,   1),(  97,   1,   1),(  98,   1,   1),(  99,   1,   1),( 100,   1,   1),( 101,   1,   1),( 102,   1,   1),( 103,   1,   1),( 104,   1,   1),( 105,   1,   1),( 106,   1,   1),( 107,   1,   1),( 108,   1,   1),( 109,   1,   1),( 110,   1,   1),( 111,   1,   1),( 112,   1,   1),( 113,   1,   1),( 114,   1,   1),( 115,   1,   1),( 116,   1,   1),( 117,   1,   1),( 118,   1,   1),( 119,   1,   1),( 120,   1,   1),( 121,   1,   1),( 122,   1,   1),( 123,   1,   1),( 124,   1,   1),( 125,   1,   1),( 126,   1,   1),( 127,   1,   1),( 128,   1,   1),( 129,   1,   1),( 130,   1,   1),( 131,   1,   1),( 132,   1,   1),( 133,   1,   1),( 134,   1,   1),( 135,   1,   1),( 136,   1,   1),( 137,   1,   1),( 138,   1,   1),( 139,   1,   1),( 140,   1,   1),( 141,   1,   1),( 142,   1,   1),( 143,   1,   1),( 144,   1,   1),( 145,   1,   1),( 146,   1,   1),( 147,   1,   1),( 148,   1,   1),( 149,   1,   1),( 150,   1,   1),( 151,   1,   1),( 152,   1,   1),( 153,   1,   1),( 154,   1,   1),( 155,   1,   1),( 156,   1,   1),( 157,   1,   1),( 158,   1,   1),( 159,   1,   1),( 160,   1,   1),( 161,   1,   1),( 162,   1,   1),( 163,   1,   1),( 164,   1,   1),( 165,   1,   1),( 166,   1,   1),( 167,   1,   1),( 168,   1,   1),( 169,   1,   1),( 170,   1,   1),( 171,   1,   1),( 172,   1,   1),( 173,   1,   1),( 174,   1,   1),( 175,   1,   1),( 176,   1,   1),( 177,   1,   1),( 178,   1,   1),( 179,   1,   1),( 180,   1,   1),( 181,   1,   1),( 182,   1,   1),( 183,   1,   1),( 184,   1,   1),( 185,   1,   1),( 186,   1,   1),( 187,   1,   1),( 188,   1,   1),( 189,   1,   1),( 190,   1,   1),( 191,   1,   1),( 192,   1,   1),( 193,   1,   1),( 194,   1,   1),( 195,   1,   1),( 196,   1,   1),( 197,   1,   1),( 198,   1,   1),( 199,   1,   1),( 200,   1,   1),( 201,   1,   1),( 202,   1,   1),( 203,   1,   1),( 204,   1,   1),( 205,   1,   1),( 206,   1,   1),( 207,   1,   1),( 208,   1,   1),( 209,   1,   1),( 210,   1,   1),( 211,   1,   1),( 212,   1,   1),( 213,   1,   1),( 214,   1,   1),( 215,   1,   1),( 216,   1,   1),( 217,   1,   1),( 218,   1,   1),( 219,   1,   1),( 220,   1,   1),( 221,   1,   1),( 222,   1,   1),( 223,   1,   1),( 224,   1,   1),( 225,   1,   1),( 226,   1,   1),( 227,   1,   1),( 228,   1,   1),( 229,   1,   1),( 230,   1,   1),( 231,   1,   1),( 232,   1,   1),( 233,   1,   1),( 234,   1,   1),( 235,   1,   1),( 236,   1,   1),( 237,   1,   1),( 238,   1,   1),( 239,   1,   1),( 240,   1,   1),( 241,   1,   1),( 242,   1,   1),( 243,   1,   1),( 244,   1,   1),( 245,   1,   1),( 246,   1,   1),( 247,   1,   1),( 248,   1,   1),( 249,   1,   1),( 250,   1,   1),( 251,   1,   1),( 252,   1,   1),( 253,   1,   1),( 254,   1,   1),( 255,   1,   1),( 256,   1,   1),( 257,   1,   1),( 258,   1,   1),( 259,   1,   1),( 260,   1,   1),( 261,   1,   1),( 262,   1,   1),( 263,   1,   1),( 264,   1,   1),( 265,   1,   1),( 266,   1,   1),( 267,   1,   1),( 268,   1,   1),( 269,   1,   1),( 270,   1,   1),( 271,   1,   1),( 272,   1,   1),( 273,   1,   1),( 274,   1,   1),( 275,   1,   1),( 276,   1,   1),( 277,   1,   1),( 278,   1,   1),( 279,   1,   1),( 280,   1,   1),( 281,   1,   1),( 282,   1,   1),( 283,   1,   1),( 284,   1,   1),( 285,   1,   1),( 286,   1,   1),( 287,   1,   1),( 288,   1,   1),( 289,   1,   1),( 290,   1,   1),( 291,   1,   1),( 292,   1,   1),( 293,   1,   1),( 294,   1,   1),( 295,   1,   1),( 296,   1,   1),( 297,   1,   1),( 298,   1,   1),( 299,   1,   1),( 300,   1,   1),( 301,   1,   1),( 302,   1,   1),( 303,   1,   1),( 304,   1,   1),( 305,   1,   1),( 306,   1,   1),( 307,   1,   1),( 308,   1,   1),( 309,   1,   1),( 310,   1,   1),( 311,   1,   1),( 312,   1,   1),( 313,   1,   1),( 314,   1,   1),( 315,   1,   1),( 316,   1,   1),( 317,   1,   1),( 318,   1,   1),( 319,   1,   1),( 320,   1,   1),( 321,   1,   1),( 322,   1,   1),( 323,   1,   1),( 324,   1,   1),( 325,   1,   1),( 326,   1,   1),( 327,   1,   1),( 328,   1,   1),( 329,   1,   1),( 330,   1,   1),( 331,   1,   1),( 332,   1,   1),( 333,   1,   1),( 334,   1,   1),( 335,   1,   1),( 336,   1,   1),( 337,   1,   1),( 338,   1,   1),( 339,   1,   1),( 340,   1,   1),( 341,   1,   1),( 342,   1,   1),( 343,   1,   1),( 344,   1,   1),( 345,   1,   1),( 346,   1,   1),( 347,   1,   1),( 348,   1,   1),( 349,   1,   1),( 350,   1,   1),( 351,   1,   1),( 352,   1,   1),( 353,   1,   1),( 354,   1,   1),( 355,   1,   1),( 356,   1,   1),( 357,   1,   1),( 358,   1,   1),( 359,   1,   1),( 360,   1,   1),( 361,   1,   1),( 362,   1,   1),( 363,   1,   1),( 364,   1,   1),( 365,   1,   1),( 366,   1,   1),( 367,   1,   1),( 368,   1,   1),( 369,   1,   1),( 370,   1,   1),( 371,   1,   1),( 372,   1,   1),( 373,   1,   1),( 374,   1,   1),( 375,   1,   1),( 376,   1,   1),( 377,   1,   1),( 378,   1,   1),( 379,   1,   1),( 380,   1,   1),( 381,   1,   1),( 382,   1,   1),( 383,   1,   1),( 384,   1,   1),( 385,   1,   1),( 386,   1,   1),( 387,   1,   1),( 388,   1,   1),( 389,   1,   1),( 390,   1,   1),( 391,   1,   1),( 392,   1,   1),( 393,   1,   1),( 394,   1,   1),( 395,   1,   1),( 396,   1,   1),( 397,   1,   1),( 398,   1,   1),( 399,   1,   1),( 400,   1,   1),( 401,   1,   1),( 402,   1,   1),( 403,   1,   1),( 404,   1,   1),( 405,   1,   1),( 406,   1,   1),( 407,   1,   1),( 408,   1,   1),( 409,   1,   1),( 410,   1,   1),( 411,   1,   1),( 412,   1,   1),( 413,   1,   1),( 414,   1,   1),( 415,   1,   1),( 416,   1,   1),( 417,   1,   1),( 418,   1,   1),( 419,   1,   1),( 420,   1,   1),( 421,   1,   1),( 422,   1,   1),( 423,   1,   1),( 424,   1,   1),( 425,   1,   1),( 426,   1,   1),( 427,   1,   1),( 428,   1,   1),( 429,   1,   1),( 430,   1,   1),( 431,   1,   1),( 432,   1,   1),( 433,   1,   1),( 434,   1,   1),( 435,   1,   1),( 436,   1,   1),( 437,   1,   1),( 438,   1,   1),( 439,   1,   1),( 440,   1,   1),( 441,   1,   1),( 442,   1,   1),( 443,   1,   1),( 444,   1,   1),( 445,   1,   1),( 446,   1,   1),( 447,   1,   1),( 448,   1,   1),( 449,   1,   1),( 450,   1,   1),( 451,   1,   1),( 452,   1,   1),( 453,   1,   1),( 454,   1,   1),( 455,   1,   1),( 456,   1,   1),( 457,   1,   1),( 458,   1,   1),( 459,   1,   1),( 460,   1,   1),( 461,   1,   1),( 462,   1,   1),( 463,   1,   1),( 464,   1,   1),( 465,   1,   1),( 466,   1,   1),( 467,   1,   1),( 468,   1,   1),( 469,   1,   1),( 470,   1,   1),( 471,   1,   1),( 472,   1,   1),( 473,   1,   1),( 474,   1,   1),( 475,   1,   1),( 476,   1,   1),( 477,   1,   1),( 478,   1,   1),( 479,   1,   1),( 480,   1,   1),( 481,   1,   1),( 482,   1,   1),( 483,   1,   1),( 484,   1,   1),( 485,   1,   1),( 486,   1,   1),( 487,   1,   1),( 488,   1,   1),( 489,   1,   1),( 490,   1,   1),( 491,   1,   1),( 492,   1,   1),( 493,   1,   1),( 494,   1,   1),( 495,   1,   1),( 496,   1,   1),( 497,   1,   1),( 498,   1,   1),( 499,   1,   1),( 500,   1,   1),( 501,   1,   1),( 502,   1,   1),( 503,   1,   1),( 504,   1,   1),( 505,   1,   1),( 506,   1,   1),( 507,   1,   1),( 508,   1,   1),( 509,   1,   1),( 510,   1,   1),( 511,   1,   1),( 512,   1,   1),( 513,   1,   1),( 514,   1,   1),( 515,   1,   1),( 516,   1,   1),( 517,   1,   1),( 518,   1,   1),( 519,   1,   1),( 520,   1,   1),( 521,   1,   1),( 522,   1,   1),( 523,   1,   1),( 524,   1,   1),( 525,   1,   1),( 526,   1,   1),( 527,   1,   1),( 528,   1,   1),( 529,   1,   1),( 530,   1,   1),( 531,   1,   1),( 532,   1,   1),( 533,   1,   1),( 534,   1,   1),( 535,   1,   1),( 536,   1,   1),( 537,   1,   1),( 538,   1,   1),( 539,   1,   1),( 540,   1,   1),( 541,   1,   1),( 542,   1,   1),( 543,   1,   1),( 544,   1,   1),( 545,   1,   1),( 546,   1,   1),( 547,   1,   1),( 548,   1,   1),( 549,   1,   1),( 550,   1,   1),( 551,   1,   1),( 552,   1,   1),( 553,   1,   1),( 554,   1,   1),( 555,   1,   1),( 556,   1,   1),( 557,   1,   1),( 558,   1,   1),( 559,   1,   1),( 560,   1,   1),( 561,   1,   1),( 562,   1,   1),( 563,   1,   1),( 564,   1,   1),( 565,   1,   1),( 566,   1,   1),( 567,   1,   1),( 568,   1,   1),( 569,   1,   1),( 570,   1,   1),( 571,   1,   1),( 572,   1,   1),( 573,   1,   1),( 574,   1,   1),( 575,   1,   1),( 576,   1,   1),( 577,   1,   1),( 578,   1,   1),( 579,   1,   1),( 580,   1,   1),( 581,   1,   1),( 582,   1,   1),( 583,   1,   1),( 584,   1,   1),( 585,   1,   1),( 586,   1,   1),( 587,   1,   1),( 588,   1,   1),( 589,   1,   1),( 590,   1,   1),( 591,   1,   1),( 592,   1,   1),( 593,   1,   1),( 594,   1,   1),( 595,   1,   1),( 596,   1,   1),( 597,   1,   1),( 598,   1,   1),( 599,   1,   1),( 600,   1,   1),( 601,   1,   1),( 602,   1,   1),( 603,   1,   1),( 604,   1,   1),( 605,   1,   1),( 606,   1,   1),( 607,   1,   1),( 608,   1,   1),( 609,   1,   1),( 610,   1,   1),( 611,   1,   1),( 612,   1,   1),( 613,   1,   1),( 614,   1,   1),( 615,   1,   1),( 616,   1,   1),( 617,   1,   1),( 618,   1,   1),( 619,   1,   1),( 620,   1,   1),( 621,   1,   1),( 622,   1,   1),( 623,   1,   1),( 624,   1,   1),( 625,   1,   1),( 626,   1,   1),( 627,   1,   1),( 628,   1,   1),( 629,   1,   1),( 630,   1,   1),( 631,   1,   1),( 632,   1,   1),( 633,   1,   1),( 634,   1,   1),( 635,   1,   1),( 636,   1,   1),( 637,   1,   1),( 638,   1,   1),( 639,   1,   1),( 640,   1,   1),( 641,   1,   1),( 642,   1,   1),( 643,   1,   1),( 644,   1,   1),( 645,   1,   1),( 646,   1,   1),( 647,   1,   1),( 648,   1,   1),( 649,   1,   1),( 650,   1,   1),( 651,   1,   1),( 652,   1,   1),( 653,   1,   1),( 654,   1,   1),( 655,   1,   1),( 656,   1,   1),( 657,   1,   1),( 658,   1,   1),( 659,   1,   1),( 660,   1,   1),( 661,   1,   1),( 662,   1,   1),( 663,   1,   1),( 664,   1,   1),( 665,   1,   1),( 666,   1,   1),( 667,   1,   1),( 668,   1,   1),( 669,   1,   1),( 670,   1,   1),( 671,   1,   1),( 672,   1,   1),( 673,   1,   1),( 674,   1,   1),( 675,   1,   1),( 676,   1,   1),( 677,   1,   1),( 678,   1,   1),( 679,   1,   1),( 680,   1,   1),( 681,   1,   1),( 682,   1,   1),( 683,   1,   1),( 684,   1,   1),( 685,   1,   1),( 686,   1,   1),( 687,   1,   1),( 688,   1,   1),( 689,   1,   1),( 690,   1,   1),( 691,   1,   1),( 692,   1,   1),( 693,   1,   1),( 694,   1,   1),( 695,   1,   1),( 696,   1,   1),( 697,   1,   1),( 698,   1,   1),( 699,   1,   1),( 700,   1,   1),( 701,   1,   1),( 702,   1,   1),( 703,   1,   1),( 704,   1,   1),( 705,   1,   1),( 706,   1,   1),( 707,   1,   1),( 708,   1,   1),( 709,   1,   1),( 710,   1,   1),( 711,   1,   1),( 712,   1,   1),( 713,   1,   1),( 714,   1,   1),( 715,   1,   1),( 716,   1,   1),( 717,   1,   1),( 718,   1,   1),( 719,   1,   1)}
Min Cost = 229.11 log2(gate), Memory Cost = 160.88 log(bit)
EnumBS cost:7.2e+02s.
============= Frodo-III
Generate gs-lengths by GSA assumption...enumbs min_G_prec = 0.1
 Attack Estimation via simulation + probabilistic model (EnumBS in parallel)
beta_start= 50, gap = 1, J = 20, J_gap = 1, cost_model = 1, max_loop = 1, threads = 4, G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = 1, Find minimal time cost strategy, average_case, theo_pnjbkz_d4f = 2, theo_pump_d4f = 2.
  index:        2, ( 857,   1): ( 858,  20) --> (1499,   1), goal index:       97, cost = index:        3, ( 858,   1): ( 859,  20) --> (1499,   1), goal index:      158, cost = index:        4, ( 859,   1): ( 860,  20) --> (1499,   1), goal index:      158, cost = index:        5, ( 860,   1): ( 861,  20) --> (1499,   1), goal index:      157, cost = index:        6, ( 861,   1): ( 862,  20) --> (1499,   1), goal index:      157, cost = index:        7, ( 862,   1): ( 863,  20) --> (1499,   1), goal index:      156, cost = index:        8, ( 863,   1): ( 864,  20) --> (1499,   1), goal index:      155, cost = index:        9, ( 864,   1): ( 865,  20) --> (1499,   1), goal index:      155, cost = index:       10, ( 865,   1): ( 866,  20) --> (1499,   1), goal index:      154, cost = index:       11, ( 866,   1): ( 867,  20) --> (1499,   1), goal index:      154, cost = index:       12, ( 867,   1): ( 868,  20) --> (1499,   1), goal index:      153, cost = index:       13, ( 868,   1): ( 869,  20) --> (1499,   1), goal index:      152, cost = index:       14, ( 869,   1): ( 870,  20) --> (1499,   1), goal index:      152, cost = index:       15, ( 870,   1): ( 871,  20) --> (1499,   1), goal index:      151, cost = index:       16, ( 871,   1): ( 872,  20) --> (1499,   1), goal index:      151, cost = index:       17, ( 872,   1): ( 873,  20) --> (1499,   1), goal index:      150, cost = index:       18, ( 873,   1): ( 874,  20) --> (1499,   1), goal index:      149, cost = index:       19, ( 874,   1): ( 875,  20) --> (1499,   1), goal index:      150, cost = index:       20, ( 875,   1): ( 876,  20) --> (1499,   1), goal index:      149, cost = index:       21, ( 876,   1): ( 877,  20) --> (1499,   1), goal index:      148, cost = index:       22, ( 877,   1): ( 878,  20) --> (1499,   1), goal index:      148, cost = index:       23, ( 878,   1): ( 879,  20) --> (1499,   1), goal index:      147, cost = index:       24, ( 879,   1): ( 880,  20) --> (1499,   1), goal index:      147, cost = index:       25, ( 880,   1): ( 881,  20) --> (1499,   1), goal index:      146, cost = index:       26, ( 881,   1): ( 882,  20) --> (1499,   1), goal index:      145, cost = index:       27, ( 882,   1): ( 883,  20) --> (1499,   1), goal index:      145, cost = index:       28, ( 883,   1): ( 884,  20) --> (1499,   1), goal index:      144, cost = index:       29, ( 884,   1): ( 885,  20) --> (1499,   1), goal index:      143, cost = index:       30, ( 885,   1): ( 886,  20) --> (1499,   1), goal index:      143, cost = index:       31, ( 886,   1): ( 887,  20) --> (1499,   1), goal index:      142, cost = index:       32, ( 887,   1): ( 888,  20) --> (1499,   1), goal index:      142, cost = index:       33, ( 888,   1): ( 889,  20) --> (1499,   1), goal index:      141, cost = index:       34, ( 889,   1): ( 890,  20) --> (1499,   1), goal index:      141, cost = index:       35, ( 890,   1): ( 891,  20) --> (1499,   1), goal index:      141, cost = index:       36, ( 891,   1): ( 892,  20) --> (1499,   1), goal index:      141, cost = index:       37, ( 892,   1): ( 893,  20) --> (1499,   1), goal index:      141, cost = index:       38, ( 893,   1): ( 894,  20) --> (1499,   1), goal index:      140, cost = index:       39, ( 894,   1): ( 895,  20) --> (1499,   1), goal index:      140, cost = index:       40, ( 895,   1): ( 896,  20) --> (1499,   1), goal index:      140, cost = index:       41, ( 896,   1): ( 897,  20) --> (1499,   1), goal index:      140, cost = index:       42, ( 897,   1): ( 898,  20) --> (1499,   1), goal index:      141, cost = index:       43, ( 898,   1): ( 899,  20) --> (1499,   1), goal index:      140, cost = index:       44, ( 899,   1): ( 900,  20) --> (1499,   1), goal index:      140, cost = index:       45, ( 900,   1): ( 901,  20) --> (1499,   1), goal index:      139, cost = index:       46, ( 901,   1): ( 902,  20) --> (1499,   1), goal index:      140, cost = index:       47, ( 902,   1): ( 903,  20) --> (1499,   1), goal index:      141, cost = index:       48, ( 903,   1): ( 904,  20) --> (1499,   1), goal index:      142, cost = index:       49, ( 904,   1): ( 905,  20) --> (1499,   1), goal index:      143, cost = index:       50, ( 905,   1): ( 906,  20) --> (1499,   1), goal index:      143, cost = index:       51, ( 906,   1): ( 907,  20) --> (1499,   1), goal index:      142, cost = index:       52, ( 907,   1): ( 908,  20) --> (1499,   1), goal index:      143, cost = index:       53, ( 908,   1): ( 909,  20) --> (1499,   1), goal index:      143, cost = index:       54, ( 909,   1): ( 910,  20) --> (1499,   1), goal index:      144, cost = index:       55, ( 910,   1): ( 911,  20) --> (1499,   1), goal index:      145, cost = index:       56, ( 911,   1): ( 912,  20) --> (1499,   1), goal index:      144, cost = index:       57, ( 912,   1): ( 913,  20) --> (1499,   1), goal index:      144, cost = index:       58, ( 913,   1): ( 914,  20) --> (1499,   1), goal index:      145, cost = index:       59, ( 914,   1): ( 915,  20) --> (1499,   1), goal index:      145, cost = index:       60, ( 915,   1): ( 916,  20) --> (1499,   1), goal index:      146, cost = index:       61, ( 916,   1): ( 917,  20) --> (1499,   1), goal index:      147, cost = index:       62, ( 917,   1): ( 918,  20) --> (1499,   1), goal index:      146, cost = index:       63, ( 918,   1): ( 919,  20) --> (1499,   1), goal index:      147, cost = index:       64, ( 919,   1): ( 920,  20) --> (1499,   1), goal index:      147, cost = index:       65, ( 920,   1): ( 921,  20) --> (1499,   1), goal index:      148, cost = index:       66, ( 921,   1): ( 922,  20) --> (1499,   1), goal index:      149, cost = index:       67, ( 922,   1): ( 923,  20) --> (1499,   1), goal index:      149, cost = index:       68, ( 923,   1): ( 924,  20) --> (1499,   1), goal index:      149, cost = index:       69, ( 924,   1): ( 925,  20) --> (1499,   1), goal index:      149, cost = index:       70, ( 925,   1): ( 926,  20) --> (1499,   1), goal index:      149, cost = index:       71, ( 926,   1): ( 927,  20) --> (1499,   1), goal index:      150, cost = index:       72, ( 927,   1): ( 928,  20) --> (1499,   1), goal index:      152, cost = index:       73, ( 928,   1): ( 929,  20) --> (1499,   1), goal index:      154, cost = index:       74, ( 929,   1): ( 930,  20) --> (1499,   1), goal index:      156, cost = index:       75, ( 930,   1): ( 931,  20) --> (1499,   1), goal index:      157, cost = index:       76, ( 931,   1): ( 932,  20) --> (1499,   1), goal index:      158, cost = index:       77, ( 932,   1): ( 933,  20) --> (1499,   1), goal index:      159, cost = index:       78, ( 933,   1): ( 934,  20) --> (1499,   1), goal index:      160, cost = index:       79, ( 934,   1): ( 935,  20) --> (1499,   1), goal index:      161, cost = index:       80, ( 935,   1): ( 936,  20) --> (1499,   1), goal index:      161, cost = index:       81, ( 936,   1): ( 937,  20) --> (1499,   1), goal index:      162, cost = index:       82, ( 937,   1): ( 938,  20) --> (1499,   1), goal index:      162, cost = index:       83, ( 938,   1): ( 939,  20) --> (1499,   1), goal index:      162, cost = index:       84, ( 939,   1): ( 940,  20) --> (1499,   1), goal index:      162, cost = index:       85, ( 940,   1): ( 941,  20) --> (1499,   1), goal index:      162, cost = index:       86, ( 941,   1): ( 942,  20) --> (1499,   1), goal index:      162, cost = index:       87, ( 942,   1): ( 943,  20) --> (1499,   1), goal index:      162, cost = index:       88, ( 943,   1): ( 944,  20) --> (1499,   1), goal index:      162, cost = index:       89, ( 944,   1): ( 945,  20) --> (1499,   1), goal index:      162, cost = index:       90, ( 945,   1): ( 946,  20) --> (1499,   1), goal index:      162, cost = index:       91, ( 946,   1): ( 947,  20) --> (1499,   1), goal index:      162, cost = index:       92, ( 947,   1): ( 948,  20) --> (1499,   1), goal index:      162, cost = index:       93, ( 948,   1): ( 949,  20) --> (1499,   1), goal index:      162, cost = index:       94, ( 949,   1): ( 950,  20) --> (1499,   1), goal index:      162, cost = index:       95, ( 950,   1): ( 951,  20) --> (1499,   1), goal index:      162, cost = index:       96, ( 951,   1): ( 952,  20) --> (1499,   1), goal index:      162, cost = index:       97, ( 952,   1): ( 953,  20) --> (1499,   1), goal index:      162, cost = index:       98, ( 970,   4): ( 970,   3) --> (1499,   1), goal index:      162, cost = index:       99, ( 969,   3): ( 969,   2) --> (1499,   1), goal index:      162, cost = index:      100, ( 970,   4): ( 970,   3) --> (1499,   1), goal index:      162, cost = index:      101, ( 971,   4): ( 971,   3) --> (1499,   1), goal index:      162, cost = index:      102, ( 970,   3): ( 970,   2) --> (1499,   1), goal index:      162, cost = index:      103, ( 971,   4): ( 971,   3) --> (1499,   1), goal index:      162, cost = index:      104, ( 970,   3): ( 970,   2) --> (1499,   1), goal index:      162, cost = index:      105, ( 971,   4): ( 971,   3) --> (1499,   1), goal index:      162, cost = index:      106, ( 972,   4): ( 972,   3) --> (1499,   1), goal index:      162, cost = index:      107, ( 971,   3): ( 971,   2) --> (1499,   1), goal index:      162, cost = index:      108, ( 972,   4): ( 972,   3) --> (1499,   1), goal index:      162, cost = index:      109, ( 971,   3): ( 971,   2) --> (1499,   1), goal index:      162, cost = index:      110, ( 972,   4): ( 972,   3) --> (1499,   1), goal index:      162, cost = index:      111, ( 973,   4): ( 973,   3) --> (1499,   1), goal index:      162, cost = index:      112, ( 973,   4): ( 973,   3) --> (1499,   1), goal index:      162, cost = index:      113, ( 973,   4): ( 973,   3) --> (1499,   1), goal index:      162, cost = index:      114, ( 974,   4): ( 974,   3) --> (1499,   1), goal index:      162, cost = index:      115, ( 974,   4): ( 974,   3) --> (1499,   1), goal index:      162, cost = index:      116, ( 974,   4): ( 974,   3) --> (1499,   1), goal index:      162, cost = index:      117, ( 975,   4): ( 975,   3) --> (1499,   1), goal index:      162, cost = index:      118, ( 975,   4): ( 975,   3) --> (1499,   1), goal index:      162, cost = index:      119, ( 975,   4): ( 975,   3) --> (1499,   1), goal index:      162, cost = index:      120, ( 976,   4): ( 976,   3) --> (1499,   1), goal index:      162, cost = index:      121, ( 976,   4): ( 976,   3) --> (1499,   1), goal index:      162, cost = index:      122, ( 977,   4): ( 977,   3) --> (1499,   1), goal index:      162, cost = index:      123, ( 978,   4): ( 978,   3) --> (1499,   1), goal index:      162, cost = index:      124, ( 979,   4): ( 979,   3) --> (1499,   1), goal index:      162, cost = index:      125, ( 979,   4): ( 979,   3) --> (1499,   1), goal index:      162, cost = index:      126, ( 980,   4): ( 980,   3) --> (1499,   1), goal index:      162, cost = index:      127, ( 981,   4): ( 981,   3) --> (1499,   1), goal index:      162, cost = index:      128, ( 982,   4): ( 982,   3) --> (1499,   1), goal index:      162, cost = index:      129, ( 983,   4): ( 983,   3) --> (1499,   1), goal index:      162, cost = index:      130, ( 984,   4): ( 984,   3) --> (1499,   1), goal index:      162, cost = index:      131, ( 984,   4): ( 984,   3) --> (1499,   1), goal index:      162, cost = index:      132, ( 985,   4): ( 985,   3) --> (1499,   1), goal index:      162, cost =
Find the optimal Strategy through EumBS!!
bs = (slope = -8.835170e-03, G_BKZ = 2.935715e+02 gate, B_BKZ = 1.969273e+02 bit cum-pr = 6.675299e-02, pump-{1630,1004,66}, G_dsvp = 2.942799e+02 gate, B_dsvp = 2.075198e+02 bit, G = 2.949687e+02 gate, B = 2.075198e+02 bit, min_GB.first = 2.949687e+02 gate)
S(beta,jump,tours):{(  50,   1,   1),(  51,   1,   1),(  52,   1,   1),(  53,   1,   1),(  54,   1,   1),(  55,   1,   1),(  56,   1,   1),(  57,   1,   1),(  58,   1,   1),(  59,   1,   1),(  60,   1,   1),(  61,   1,   1),(  62,   1,   1),(  63,   1,   1),(  64,   1,   1),(  65,   1,   1),(  66,   1,   1),(  67,   1,   1),(  68,   1,   1),(  69,   1,   1),(  70,   1,   1),(  71,   1,   1),(  72,   1,   1),(  73,   1,   1),(  74,   1,   1),(  75,   1,   1),(  76,   1,   1),(  77,   1,   1),(  78,   1,   1),(  79,   1,   1),(  80,   1,   1),(  81,   1,   1),(  82,   1,   1),(  83,   1,   1),(  84,   1,   1),(  85,   1,   1),(  86,   1,   1),(  87,   1,   1),(  88,   1,   1),(  89,   1,   1),(  90,   1,   1),(  91,   1,   1),(  92,   1,   1),(  93,   1,   1),(  94,   1,   1),(  95,   1,   1),(  96,   1,   1),(  97,   1,   1),(  98,   1,   1),(  99,   1,   1),( 100,   1,   1),( 101,   1,   1),( 102,   1,   1),( 103,   1,   1),( 104,   1,   1),( 105,   1,   1),( 106,   1,   1),( 107,   1,   1),( 108,   1,   1),( 109,   1,   1),( 110,   1,   1),( 111,   1,   1),( 112,   1,   1),( 113,   1,   1),( 114,   1,   1),( 115,   1,   1),( 116,   1,   1),( 117,   1,   1),( 118,   1,   1),( 119,   1,   1),( 120,   1,   1),( 121,   1,   1),( 122,   1,   1),( 123,   1,   1),( 124,   1,   1),( 125,   1,   1),( 126,   1,   1),( 127,   1,   1),( 128,   1,   1),( 129,   1,   1),( 130,   1,   1),( 131,   1,   1),( 132,   1,   1),( 133,   1,   1),( 134,   1,   1),( 135,   1,   1),( 136,   1,   1),( 137,   1,   1),( 138,   1,   1),( 139,   1,   1),( 140,   1,   1),( 141,   1,   1),( 142,   1,   1),( 143,   1,   1),( 144,   1,   1),( 145,   1,   1),( 146,   1,   1),( 147,   1,   1),( 148,   1,   1),( 149,   1,   1),( 150,   1,   1),( 151,   1,   1),( 152,   1,   1),( 153,   1,   1),( 154,   1,   1),( 155,   1,   1),( 156,   1,   1),( 157,   1,   1),( 158,   1,   1),( 159,   1,   1),( 160,   1,   1),( 161,   1,   1),( 162,   1,   1),( 163,   1,   1),( 164,   1,   1),( 165,   1,   1),( 166,   1,   1),( 167,   1,   1),( 168,   1,   1),( 169,   1,   1),( 170,   1,   1),( 171,   1,   1),( 172,   1,   1),( 173,   1,   1),( 174,   1,   1),( 175,   1,   1),( 176,   1,   1),( 177,   1,   1),( 178,   1,   1),( 179,   1,   1),( 180,   1,   1),( 181,   1,   1),( 182,   1,   1),( 183,   1,   1),( 184,   1,   1),( 185,   1,   1),( 186,   1,   1),( 187,   1,   1),( 188,   1,   1),( 189,   1,   1),( 190,   1,   1),( 191,   1,   1),( 192,   1,   1),( 193,   1,   1),( 194,   1,   1),( 195,   1,   1),( 196,   1,   1),( 197,   1,   1),( 198,   1,   1),( 199,   1,   1),( 200,   1,   1),( 201,   1,   1),( 202,   1,   1),( 203,   1,   1),( 204,   1,   1),( 205,   1,   1),( 206,   1,   1),( 207,   1,   1),( 208,   1,   1),( 209,   1,   1),( 210,   1,   1),( 211,   1,   1),( 212,   1,   1),( 213,   1,   1),( 214,   1,   1),( 215,   1,   1),( 216,   1,   1),( 217,   1,   1),( 218,   1,   1),( 219,   1,   1),( 220,   1,   1),( 221,   1,   1),( 222,   1,   1),( 223,   1,   1),( 224,   1,   1),( 225,   1,   1),( 226,   1,   1),( 227,   1,   1),( 228,   1,   1),( 229,   1,   1),( 230,   1,   1),( 231,   1,   1),( 232,   1,   1),( 233,   1,   1),( 234,   1,   1),( 235,   1,   1),( 236,   1,   1),( 237,   1,   1),( 238,   1,   1),( 239,   1,   1),( 240,   1,   1),( 241,   1,   1),( 242,   1,   1),( 243,   1,   1),( 244,   1,   1),( 245,   1,   1),( 246,   1,   1),( 247,   1,   1),( 248,   1,   1),( 249,   1,   1),( 250,   1,   1),( 251,   1,   1),( 252,   1,   1),( 253,   1,   1),( 254,   1,   1),( 255,   1,   1),( 256,   1,   1),( 257,   1,   1),( 258,   1,   1),( 259,   1,   1),( 260,   1,   1),( 261,   1,   1),( 262,   1,   1),( 263,   1,   1),( 264,   1,   1),( 265,   1,   1),( 266,   1,   1),( 267,   1,   1),( 268,   1,   1),( 269,   1,   1),( 270,   1,   1),( 271,   1,   1),( 272,   1,   1),( 273,   1,   1),( 274,   1,   1),( 275,   1,   1),( 276,   1,   1),( 277,   1,   1),( 278,   1,   1),( 279,   1,   1),( 280,   1,   1),( 281,   1,   1),( 282,   1,   1),( 283,   1,   1),( 284,   1,   1),( 285,   1,   1),( 286,   1,   1),( 287,   1,   1),( 288,   1,   1),( 289,   1,   1),( 290,   1,   1),( 291,   1,   1),( 292,   1,   1),( 293,   1,   1),( 294,   1,   1),( 295,   1,   1),( 296,   1,   1),( 297,   1,   1),( 298,   1,   1),( 299,   1,   1),( 300,   1,   1),( 301,   1,   1),( 302,   1,   1),( 303,   1,   1),( 304,   1,   1),( 305,   1,   1),( 306,   1,   1),( 307,   1,   1),( 308,   1,   1),( 309,   1,   1),( 310,   1,   1),( 311,   1,   1),( 312,   1,   1),( 313,   1,   1),( 314,   1,   1),( 315,   1,   1),( 316,   1,   1),( 317,   1,   1),( 318,   1,   1),( 319,   1,   1),( 320,   1,   1),( 321,   1,   1),( 322,   1,   1),( 323,   1,   1),( 324,   1,   1),( 325,   1,   1),( 326,   1,   1),( 327,   1,   1),( 328,   1,   1),( 329,   1,   1),( 330,   1,   1),( 331,   1,   1),( 332,   1,   1),( 333,   1,   1),( 334,   1,   1),( 335,   1,   1),( 336,   1,   1),( 337,   1,   1),( 338,   1,   1),( 339,   1,   1),( 340,   1,   1),( 341,   1,   1),( 342,   1,   1),( 343,   1,   1),( 344,   1,   1),( 345,   1,   1),( 346,   1,   1),( 347,   1,   1),( 348,   1,   1),( 349,   1,   1),( 350,   1,   1),( 351,   1,   1),( 352,   1,   1),( 353,   1,   1),( 354,   1,   1),( 355,   1,   1),( 356,   1,   1),( 357,   1,   1),( 358,   1,   1),( 359,   1,   1),( 360,   1,   1),( 361,   1,   1),( 362,   1,   1),( 363,   1,   1),( 364,   1,   1),( 365,   1,   1),( 366,   1,   1),( 367,   1,   1),( 368,   1,   1),( 369,   1,   1),( 370,   1,   1),( 371,   1,   1),( 372,   1,   1),( 373,   1,   1),( 374,   1,   1),( 375,   1,   1),( 376,   1,   1),( 377,   1,   1),( 378,   1,   1),( 379,   1,   1),( 380,   1,   1),( 381,   1,   1),( 382,   1,   1),( 383,   1,   1),( 384,   1,   1),( 385,   1,   1),( 386,   1,   1),( 387,   1,   1),( 388,   1,   1),( 389,   1,   1),( 390,   1,   1),( 391,   1,   1),( 392,   1,   1),( 393,   1,   1),( 394,   1,   1),( 395,   1,   1),( 396,   1,   1),( 397,   1,   1),( 398,   1,   1),( 399,   1,   1),( 400,   1,   1),( 401,   1,   1),( 402,   1,   1),( 403,   1,   1),( 404,   1,   1),( 405,   1,   1),( 406,   1,   1),( 407,   1,   1),( 408,   1,   1),( 409,   1,   1),( 410,   1,   1),( 411,   1,   1),( 412,   1,   1),( 413,   1,   1),( 414,   1,   1),( 415,   1,   1),( 416,   1,   1),( 417,   1,   1),( 418,   1,   1),( 419,   1,   1),( 420,   1,   1),( 421,   1,   1),( 422,   1,   1),( 423,   1,   1),( 424,   1,   1),( 425,   1,   1),( 426,   1,   1),( 427,   1,   1),( 428,   1,   1),( 429,   1,   1),( 430,   1,   1),( 431,   1,   1),( 432,   1,   1),( 433,   1,   1),( 434,   1,   1),( 435,   1,   1),( 436,   1,   1),( 437,   1,   1),( 438,   1,   1),( 439,   1,   1),( 440,   1,   1),( 441,   1,   1),( 442,   1,   1),( 443,   1,   1),( 444,   1,   1),( 445,   1,   1),( 446,   1,   1),( 447,   1,   1),( 448,   1,   1),( 449,   1,   1),( 450,   1,   1),( 451,   1,   1),( 452,   1,   1),( 453,   1,   1),( 454,   1,   1),( 455,   1,   1),( 456,   1,   1),( 457,   1,   1),( 458,   1,   1),( 459,   1,   1),( 460,   1,   1),( 461,   1,   1),( 462,   1,   1),( 463,   1,   1),( 464,   1,   1),( 465,   1,   1),( 466,   1,   1),( 467,   1,   1),( 468,   1,   1),( 469,   1,   1),( 470,   1,   1),( 471,   1,   1),( 472,   1,   1),( 473,   1,   1),( 474,   1,   1),( 475,   1,   1),( 476,   1,   1),( 477,   1,   1),( 478,   1,   1),( 479,   1,   1),( 480,   1,   1),( 481,   1,   1),( 482,   1,   1),( 483,   1,   1),( 484,   1,   1),( 485,   1,   1),( 486,   1,   1),( 487,   1,   1),( 488,   1,   1),( 489,   1,   1),( 490,   1,   1),( 491,   1,   1),( 492,   1,   1),( 493,   1,   1),( 494,   1,   1),( 495,   1,   1),( 496,   1,   1),( 497,   1,   1),( 498,   1,   1),( 499,   1,   1),( 500,   1,   1),( 501,   1,   1),( 502,   1,   1),( 503,   1,   1),( 504,   1,   1),( 505,   1,   1),( 506,   1,   1),( 507,   1,   1),( 508,   1,   1),( 509,   1,   1),( 510,   1,   1),( 511,   1,   1),( 512,   1,   1),( 513,   1,   1),( 514,   1,   1),( 515,   1,   1),( 516,   1,   1),( 517,   1,   1),( 518,   1,   1),( 519,   1,   1),( 520,   1,   1),( 521,   1,   1),( 522,   1,   1),( 523,   1,   1),( 524,   1,   1),( 525,   1,   1),( 526,   1,   1),( 527,   1,   1),( 528,   1,   1),( 529,   1,   1),( 530,   1,   1),( 531,   1,   1),( 532,   1,   1),( 533,   1,   1),( 534,   1,   1),( 535,   1,   1),( 536,   1,   1),( 537,   1,   1),( 538,   1,   1),( 539,   1,   1),( 540,   1,   1),( 541,   1,   1),( 542,   1,   1),( 543,   1,   1),( 544,   1,   1),( 545,   1,   1),( 546,   1,   1),( 547,   1,   1),( 548,   1,   1),( 549,   1,   1),( 550,   1,   1),( 551,   1,   1),( 552,   1,   1),( 553,   1,   1),( 554,   1,   1),( 555,   1,   1),( 556,   1,   1),( 557,   1,   1),( 558,   1,   1),( 559,   1,   1),( 560,   1,   1),( 561,   1,   1),( 562,   1,   1),( 563,   1,   1),( 564,   1,   1),( 565,   1,   1),( 566,   1,   1),( 567,   1,   1),( 568,   1,   1),( 569,   1,   1),( 570,   1,   1),( 571,   1,   1),( 572,   1,   1),( 573,   1,   1),( 574,   1,   1),( 575,   1,   1),( 576,   1,   1),( 577,   1,   1),( 578,   1,   1),( 579,   1,   1),( 580,   1,   1),( 581,   1,   1),( 582,   1,   1),( 583,   1,   1),( 584,   1,   1),( 585,   1,   1),( 586,   1,   1),( 587,   1,   1),( 588,   1,   1),( 589,   1,   1),( 590,   1,   1),( 591,   1,   1),( 592,   1,   1),( 593,   1,   1),( 594,   1,   1),( 595,   1,   1),( 596,   1,   1),( 597,   1,   1),( 598,   1,   1),( 599,   1,   1),( 600,   1,   1),( 601,   1,   1),( 602,   1,   1),( 603,   1,   1),( 604,   1,   1),( 605,   1,   1),( 606,   1,   1),( 607,   1,   1),( 608,   1,   1),( 609,   1,   1),( 610,   1,   1),( 611,   1,   1),( 612,   1,   1),( 613,   1,   1),( 614,   1,   1),( 615,   1,   1),( 616,   1,   1),( 617,   1,   1),( 618,   1,   1),( 619,   1,   1),( 620,   1,   1),( 621,   1,   1),( 622,   1,   1),( 623,   1,   1),( 624,   1,   1),( 625,   1,   1),( 626,   1,   1),( 627,   1,   1),( 628,   1,   1),( 629,   1,   1),( 630,   1,   1),( 631,   1,   1),( 632,   1,   1),( 633,   1,   1),( 634,   1,   1),( 635,   1,   1),( 636,   1,   1),( 637,   1,   1),( 638,   1,   1),( 639,   1,   1),( 640,   1,   1),( 641,   1,   1),( 642,   1,   1),( 643,   1,   1),( 644,   1,   1),( 645,   1,   1),( 646,   1,   1),( 647,   1,   1),( 648,   1,   1),( 649,   1,   1),( 650,   1,   1),( 651,   1,   1),( 652,   1,   1),( 653,   1,   1),( 654,   1,   1),( 655,   1,   1),( 656,   1,   1),( 657,   1,   1),( 658,   1,   1),( 659,   1,   1),( 660,   1,   1),( 661,   1,   1),( 662,   1,   1),( 663,   1,   1),( 664,   1,   1),( 665,   1,   1),( 666,   1,   1),( 667,   1,   1),( 668,   1,   1),( 669,   1,   1),( 670,   1,   1),( 671,   1,   1),( 672,   1,   1),( 673,   1,   1),( 674,   1,   1),( 675,   1,   1),( 676,   1,   1),( 677,   1,   1),( 678,   1,   1),( 679,   1,   1),( 680,   1,   1),( 681,   1,   1),( 682,   1,   1),( 683,   1,   1),( 684,   1,   1),( 685,   1,   1),( 686,   1,   1),( 687,   1,   1),( 688,   1,   1),( 689,   1,   1),( 690,   1,   1),( 691,   1,   1),( 692,   1,   1),( 693,   1,   1),( 694,   1,   1),( 695,   1,   1),( 696,   1,   1),( 697,   1,   1),( 698,   1,   1),( 699,   1,   1),( 700,   1,   1),( 701,   1,   1),( 702,   1,   1),( 703,   1,   1),( 704,   1,   1),( 705,   1,   1),( 706,   1,   1),( 707,   1,   1),( 708,   1,   1),( 709,   1,   1),( 710,   1,   1),( 711,   1,   1),( 712,   1,   1),( 713,   1,   1),( 714,   1,   1),( 715,   1,   1),( 716,   1,   1),( 717,   1,   1),( 718,   1,   1),( 719,   1,   1),( 720,   1,   1),( 721,   1,   1),( 722,   1,   1),( 723,   1,   1),( 724,   1,   1),( 725,   1,   1),( 726,   1,   1),( 727,   1,   1),( 728,   1,   1),( 729,   1,   1),( 730,   1,   1),( 731,   1,   1),( 732,   1,   1),( 733,   1,   1),( 734,   1,   1),( 735,   1,   1),( 736,   1,   1),( 737,   1,   1),( 738,   1,   1),( 739,   1,   1),( 740,   1,   1),( 741,   1,   1),( 742,   1,   1),( 743,   1,   1),( 744,   1,   1),( 745,   1,   1),( 746,   1,   1),( 747,   1,   1),( 748,   1,   1),( 749,   1,   1),( 750,   1,   1),( 751,   1,   1),( 752,   1,   1),( 753,   1,   1),( 754,   1,   1),( 755,   1,   1),( 756,   1,   1),( 757,   1,   1),( 758,   1,   1),( 759,   1,   1),( 760,   1,   1),( 761,   1,   1),( 762,   1,   1),( 763,   1,   1),( 764,   1,   1),( 765,   1,   1),( 766,   1,   1),( 767,   1,   1),( 768,   1,   1),( 769,   1,   1),( 770,   1,   1),( 771,   1,   1),( 772,   1,   1),( 773,   1,   1),( 774,   1,   1),( 775,   1,   1),( 776,   1,   1),( 777,   1,   1),( 778,   1,   1),( 779,   1,   1),( 780,   1,   1),( 781,   1,   1),( 782,   1,   1),( 783,   1,   1),( 784,   1,   1),( 785,   1,   1),( 786,   1,   1),( 787,   1,   1),( 788,   1,   1),( 789,   1,   1),( 790,   1,   1),( 791,   1,   1),( 792,   1,   1),( 793,   1,   1),( 794,   1,   1),( 795,   1,   1),( 796,   1,   1),( 797,   1,   1),( 798,   1,   1),( 799,   1,   1),( 800,   1,   1),( 801,   1,   1),( 802,   1,   1),( 803,   1,   1),( 804,   1,   1),( 805,   1,   1),( 806,   1,   1),( 807,   1,   1),( 808,   1,   1),( 809,   1,   1),( 810,   1,   1),( 811,   1,   1),( 812,   1,   1),( 813,   1,   1),( 814,   1,   1),( 815,   1,   1),( 816,   1,   1),( 817,   1,   1),( 818,   1,   1),( 819,   1,   1),( 820,   1,   1),( 821,   1,   1),( 822,   1,   1),( 823,   1,   1),( 824,   1,   1),( 825,   1,   1),( 826,   1,   1),( 827,   1,   1),( 828,   1,   1),( 829,   1,   1),( 830,   1,   1),( 831,   1,   1),( 832,   1,   1),( 833,   1,   1),( 834,   1,   1),( 835,   1,   1),( 836,   1,   1),( 837,   1,   1),( 838,   1,   1),( 839,   1,   1),( 840,   1,   1),( 841,   1,   1),( 842,   1,   1),( 843,   1,   1),( 844,   1,   1),( 845,   1,   1),( 846,   1,   1),( 847,   1,   1),( 848,   1,   1),( 849,   1,   1),( 850,   1,   1),( 851,   1,   1),( 852,   1,   1),( 853,   1,   1),( 854,   1,   1),( 855,   1,   1),( 856,   1,   1),( 857,   1,   1),( 858,   1,   1),( 859,   1,   1),( 860,   1,   1),( 861,   1,   1),( 862,   1,   1),( 863,   1,   1),( 864,   1,   1),( 865,   1,   1),( 866,   1,   1),( 867,   1,   1),( 868,   1,   1),( 869,   1,   1),( 870,   1,   1),( 871,   1,   1),( 872,   1,   1),( 873,   1,   1),( 874,   1,   1),( 875,   1,   1),( 876,   1,   1),( 877,   1,   1),( 878,   1,   1),( 879,   1,   1),( 880,   1,   1),( 881,   1,   1),( 882,   1,   1),( 883,   1,   1),( 884,   1,   1),( 885,   1,   1),( 886,   1,   1),( 887,   1,   1),( 888,   1,   1),( 889,   1,   1),( 890,   1,   1),( 891,   1,   1),( 892,   1,   1),( 893,   1,   1),( 894,   1,   1),( 895,   1,   1),( 896,   1,   1),( 897,   1,   1),( 898,   1,   1),( 899,   1,   1),( 900,   1,   1),( 901,   1,   1),( 902,   1,   1),( 903,   1,   1),( 904,   1,   1),( 905,   1,   1),( 906,   1,   1),( 907,   1,   1),( 908,   1,   1),( 909,   1,   1),( 910,   1,   1),( 911,   1,   1),( 912,   1,   1),( 913,   1,   1),( 914,   1,   1),( 915,   1,   1),( 916,   1,   1),( 917,   1,   1),( 918,   1,   1),( 919,   1,   1),( 920,   1,   1),( 921,   1,   1),( 922,   1,   1),( 923,   1,   1),( 924,   1,   1),( 925,   1,   1),( 926,   1,   1),( 927,   1,   1),( 928,   1,   1),( 929,   1,   1),( 930,   1,   1),( 931,   1,   1),( 932,   1,   1),( 933,   1,   1),( 934,   1,   1),( 935,   1,   1),( 936,   1,   1),( 937,   1,   1),( 938,   1,   1),( 939,   1,   1),( 940,   1,   1),( 941,   1,   1),( 942,   1,   1),( 943,   1,   1),( 944,   1,   1),( 945,   1,   1),( 946,   1,   1),( 947,   1,   1),( 948,   1,   1),( 949,   1,   1),( 950,   1,   1),( 951,   1,   1),( 952,   1,   1)}
Min Cost = 294.97 log2(gate), Memory Cost = 207.52 log(bit)
EnumBS cost:1.1e+03s.
